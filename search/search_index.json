{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MATSim MATSim is an open-source framework for implementing large-scale agent-based transport simulations. Learn more...","title":"matsim.org"},{"location":"benchmark/","text":"MATSim Benchmark \u00b6 The performance of MATSim depends on a lot of different factors: CPU-speed (although by far not always the limiting factor!) Memory-Bus / -Controller (we\u2019re moving huge amounts of memory, the faster the better) File system (local Hard drive vs. RAID vs. NFS vs \u2026) To get a better understanding, under which circumstances MATSim performs best, we created a simple benchmark (performance test) that runs 20 iterations of a sample scenario with different settings. If you run the benchmark on your machine, we would be happy if you could send us your results. Download and Installation \u00b6 Download the zip-file containing the benchmark: benchmark.zip (35MB). Unzip the downloaded file. Running the benchmark \u00b6 On the command line, run the following: java -Xmx500m -jar Benchmark.jar This will generate a directory output with some files in it from the run. The test will usually run between 25 and 40 minutes. The benchmark requires Java 1.5 or newer and 150MB free disk space. If you want to re-run the benchmark, rename or delete the ./output/ directory and run the test again. Submitting benchmark results \u00b6 Please send an email to benchmark AT matsim DOT org containing: the file output/stopwatch.txt the file output/logfile.log a description of your benchmark environment, including: vendor of machine (e.g. HP, Dell, Apple, etc.) processor-type (vendor (Intel, AMD, etc.), model-number, clock-speed, cache-size, number of processors and cores, \u2026) memory (bus-speed, memory-controller, etc.) storage system (rpm, cache size, \u2026, type: e.g. local hard drive, RAID, \u2026) operation system any other information you think might be of interest to us","title":"MATSim Benchmark"},{"location":"benchmark/#matsim-benchmark","text":"The performance of MATSim depends on a lot of different factors: CPU-speed (although by far not always the limiting factor!) Memory-Bus / -Controller (we\u2019re moving huge amounts of memory, the faster the better) File system (local Hard drive vs. RAID vs. NFS vs \u2026) To get a better understanding, under which circumstances MATSim performs best, we created a simple benchmark (performance test) that runs 20 iterations of a sample scenario with different settings. If you run the benchmark on your machine, we would be happy if you could send us your results.","title":"MATSim Benchmark"},{"location":"benchmark/#download-and-installation","text":"Download the zip-file containing the benchmark: benchmark.zip (35MB). Unzip the downloaded file.","title":"Download and Installation"},{"location":"benchmark/#running-the-benchmark","text":"On the command line, run the following: java -Xmx500m -jar Benchmark.jar This will generate a directory output with some files in it from the run. The test will usually run between 25 and 40 minutes. The benchmark requires Java 1.5 or newer and 150MB free disk space. If you want to re-run the benchmark, rename or delete the ./output/ directory and run the test again.","title":"Running the benchmark"},{"location":"benchmark/#submitting-benchmark-results","text":"Please send an email to benchmark AT matsim DOT org containing: the file output/stopwatch.txt the file output/logfile.log a description of your benchmark environment, including: vendor of machine (e.g. HP, Dell, Apple, etc.) processor-type (vendor (Intel, AMD, etc.), model-number, clock-speed, cache-size, number of processors and cores, \u2026) memory (bus-speed, memory-controller, etc.) storage system (rpm, cache size, \u2026, type: e.g. local hard drive, RAID, \u2026) operation system any other information you think might be of interest to us","title":"Submitting benchmark results"},{"location":"conferences/","text":"MATSim Conferences and Meetings \u00b6 Here you will find links to upcoming and past conferences and meetings related to MATSim research and application. {% comment %} with some liquid wizardry, one can probably detect those posts that are older than the current date and move them to \"past events\" automatically {% endcomment %} {% for post in site.conferences reversed %} {{ post.title }} {% if post.event_date.start %} {% if post.event_date.end %} {{ post.event_date.start | date: \"%e %B, %Y\" }} to {{ post.event_date.end | date: \"%e %B, %Y\" }} {% else %} on {{ post.event_date.start | date: \"%e %B, %Y\" }} {% endif %} {% endif %} {% if post.location.name %} in {% if post.location.url %} {% endif %} {{post.location.name}} {% if post.location.url %} {% endif %} {% endif %} {% assign contact_name=post.contact.name | default: post.contact.email %} {% if contact_name %} Contact: {% if post.contact.email %} {{contact_name}} {% else %} {{contact_name}} {% endif %} {% endif %} {{ post.summary }} \u00bb Read More\u2026 {% endfor %} Past Conferences \u00b6 Here you can find information and documentation from the annual MATSim user meeting and MATSim tutorials. The user meeting and a preceding overview tutorial take place annually, often alternating between Zurich and Berlin. Special tutorials are held upon request. 2021 User Meeting - Virtual 2020 User Meeting - Warsaw, Poland | Cancelled 2019 User Meeting - Leuven, Belgium 2018 User Meeting - Atlanta, USA - (Slides available) 2017 User Meeting - Haifa, Israel (some presentation slides also available) 2015 User Meeting - Singapore 2015 Tutorial - Singapore 2014 Tutorial - Berlin 2013 User Meeting - Zurich 2013 Tutorial - Berlin 2012 User Meeting and Tutorial - Berlin 2012 MATSim Tutorial in July 2012 - Madison, WI 2011 Special Tutorial - Shanghai 2011 Special Tutorial - Seoul 2011 Special Tutorial - Singapore 2011 Annual User Meeting and Tutorial - Berlin 2010 Annual User Meeting and Tutorial - Zurich 2010 Tutorial and User Meeting Announcement 2009 Annual User Meeting and Tutorial - Berlin 2009 User Meeting Announcement Old Website \u00b6 Some links on third-party sites may refer to content that no longer exists on this website. You might have a look at the archived, old website and see if the content is still available there. Look here for the archived conference page .","title":"Conferences and Meetings"},{"location":"conferences/#matsim-conferences-and-meetings","text":"Here you will find links to upcoming and past conferences and meetings related to MATSim research and application. {% comment %} with some liquid wizardry, one can probably detect those posts that are older than the current date and move them to \"past events\" automatically {% endcomment %} {% for post in site.conferences reversed %}","title":"&nbsp;MATSim Conferences and Meetings"},{"location":"conferences/#past-conferences","text":"Here you can find information and documentation from the annual MATSim user meeting and MATSim tutorials. The user meeting and a preceding overview tutorial take place annually, often alternating between Zurich and Berlin. Special tutorials are held upon request. 2021 User Meeting - Virtual 2020 User Meeting - Warsaw, Poland | Cancelled 2019 User Meeting - Leuven, Belgium 2018 User Meeting - Atlanta, USA - (Slides available) 2017 User Meeting - Haifa, Israel (some presentation slides also available) 2015 User Meeting - Singapore 2015 Tutorial - Singapore 2014 Tutorial - Berlin 2013 User Meeting - Zurich 2013 Tutorial - Berlin 2012 User Meeting and Tutorial - Berlin 2012 MATSim Tutorial in July 2012 - Madison, WI 2011 Special Tutorial - Shanghai 2011 Special Tutorial - Seoul 2011 Special Tutorial - Singapore 2011 Annual User Meeting and Tutorial - Berlin 2010 Annual User Meeting and Tutorial - Zurich 2010 Tutorial and User Meeting Announcement 2009 Annual User Meeting and Tutorial - Berlin 2009 User Meeting Announcement","title":"Past Conferences"},{"location":"conferences/#old-website","text":"Some links on third-party sites may refer to content that no longer exists on this website. You might have a look at the archived, old website and see if the content is still available there. Look here for the archived conference page .","title":"Old Website"},{"location":"documentation/","text":"MATSim Documentation \u00b6 For Users \u00b6 Tutorials Userguide Extensions MATSim Book Q&A MATSim Community pages (user guides, DIY instructions, etc.) For Developers \u00b6 API Documentation (Doxygen) Issue Tracker (GitHub) Build Server (Jenkins) MATSim Community pages (user guides, DIY instructions, etc.) Tutorials \u00b6 Quickstart: See Install General Tutorials MATSim book and user guide Simulation of public transport Information for developers \u00b6 These documents ... ... provide specification of key-aspects of MATSim (e.g. file formats, simulation events, ...) ... list some guidelines for developers (e.g. coding conventions) to keep MATSim maintainable. ... give information about certain packages, how to (programmatically) use them and what features they offer. offers additional pieces of information that may/should be of interest to developers (e.g. how to use Eclipse for development, or some Java-tips) Developer Resources Getting and Building the Code Contributing / Writing Code MATSim Benchmark Information for users \u00b6 The \"MATSim Book\" is now the authoritative reference. There is an extract of the first couple of chapters, which contains the most relevant topics for new users . This is also referred to as the ``MATSim user guide'' . Some Terminology (i.e. correspondences between MATSim terminology and more standard transport modelling terminology, and reasons why ours is different) can be found here . Publications \u00b6 Being an open-source project heavily driven by research organizations world-wide, a lot of publications were written about MATSim. If you are interested in scientific publications about MATSim, the publication lists of the following institutions serve as a good entry point: Publications by VSP TU-Berlin in particular the working paper series Publications at IVT ETH Zurich in particular the working paper series Google Scholar search, newest first Google Scholar search, most relevant first --> Newsletter \u00b6 Sign up to our newsletter to get news about MATSim about every other month. #mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; } /* Add your own MailChimp form style overrides in your site stylesheet or in this style block. We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */ #mc_embed_signup form { padding: 10px 0; } Email Address You can unsubscribe at any time by clicking the link in the footer of our emails. We use MailChimp as our marketing platform. By clicking below to subscribe, you acknowledge that your information will be transferred to MailChimp for processing. Learn more about MailChimp's privacy practices here . View previous newsletters. (function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';fnames[2]='LNAME';ftypes[2]='text';fnames[3]='ADDRESS';ftypes[3]='address';fnames[4]='PHONE';ftypes[4]='phone';fnames[5]='BIRTHDAY';ftypes[5]='birthday';}(jQuery));var $mcj = jQuery.noConflict(true);","title":"<i class=\"fa fa-book\">&nbsp;</i>MATSim Documentation"},{"location":"documentation/#matsim-documentation","text":"","title":"&nbsp;MATSim Documentation"},{"location":"documentation/#for-users","text":"Tutorials Userguide Extensions MATSim Book Q&A MATSim Community pages (user guides, DIY instructions, etc.)","title":"For Users"},{"location":"documentation/#for-developers","text":"API Documentation (Doxygen) Issue Tracker (GitHub) Build Server (Jenkins) MATSim Community pages (user guides, DIY instructions, etc.)","title":"For Developers"},{"location":"documentation/#tutorials","text":"Quickstart: See Install General Tutorials MATSim book and user guide Simulation of public transport","title":"Tutorials"},{"location":"documentation/#information-for-developers","text":"These documents ... ... provide specification of key-aspects of MATSim (e.g. file formats, simulation events, ...) ... list some guidelines for developers (e.g. coding conventions) to keep MATSim maintainable. ... give information about certain packages, how to (programmatically) use them and what features they offer. offers additional pieces of information that may/should be of interest to developers (e.g. how to use Eclipse for development, or some Java-tips) Developer Resources Getting and Building the Code Contributing / Writing Code MATSim Benchmark","title":"Information for developers"},{"location":"documentation/#information-for-users","text":"The \"MATSim Book\" is now the authoritative reference. There is an extract of the first couple of chapters, which contains the most relevant topics for new users . This is also referred to as the ``MATSim user guide'' . Some Terminology (i.e. correspondences between MATSim terminology and more standard transport modelling terminology, and reasons why ours is different) can be found here .","title":"Information for users"},{"location":"documentation/#publications","text":"Being an open-source project heavily driven by research organizations world-wide, a lot of publications were written about MATSim. If you are interested in scientific publications about MATSim, the publication lists of the following institutions serve as a good entry point: Publications by VSP TU-Berlin in particular the working paper series Publications at IVT ETH Zurich in particular the working paper series Google Scholar search, newest first Google Scholar search, most relevant first -->","title":"Publications"},{"location":"documentation/#newsletter","text":"Sign up to our newsletter to get news about MATSim about every other month. #mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; } /* Add your own MailChimp form style overrides in your site stylesheet or in this style block. We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */ #mc_embed_signup form { padding: 10px 0; } Email Address You can unsubscribe at any time by clicking the link in the footer of our emails. We use MailChimp as our marketing platform. By clicking below to subscribe, you acknowledge that your information will be transferred to MailChimp for processing. Learn more about MailChimp's privacy practices here . View previous newsletters. (function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';fnames[2]='LNAME';ftypes[2]='text';fnames[3]='ADDRESS';ftypes[3]='address';fnames[4]='PHONE';ftypes[4]='phone';fnames[5]='BIRTHDAY';ftypes[5]='birthday';}(jQuery));var $mcj = jQuery.noConflict(true);","title":"Newsletter"},{"location":"downloads/","text":"Download/Install MATSim \u00b6 There are several ways to get up and running using MATSim, listed here. Choose the path which seems most comfortable to you \u2014 IDE, the MATSim GUI, or the Maven plugin. Use MATSim as a programmer out of an IDE \u00b6 This approach targets programmers who are comfortable with Java and an IDE (e.g. Eclipse or IntelliJ). This will automatically download MATSim, allow you to browse the source code, and keep you up-to-date with releases or snapshots. Install: (optional but recommended) Fork matsim-example-project . Clone matsim-example-project into local directory. Import as maven project into IDE. Maven will sort out the dependencies. No need to download the MATSim main repository. Sources are available. IntelliJ: Import project --> browse to dir --> maven --> Next, Next, Next Eclipse: Import ... --> ... as maven project --> browse to dir --> accept, accept, accept Run MATSimGUI from the IDE. An example config file is in scenarios/equil . Press Run to run MATSim. (optional but recommended) Run RunMATSim from the IDE. (optional but recommended) Set up, for your forked repo, a continuous integration (CI) workflow. On the github website of your repo: Actions --> New Workflow --> More continuous integration workflows... --> Java with Maven --> Set up this workflow --> Start commit --> ... . This will result in a file .github/workflows/maven.yml which triggers the automatic build after each commit. Detailed configuration of the workflow via this file is possible at a later point in time. Notes: Code examples are in matsim-code-examples on github. Also see there for examples of how to use extensions (package extensions ). If you want/need to write your own extensions: Again, look at matsim-code-examples for examples. Look at ControlerDefaultsModule (in your IDE, source is retrieved by maven) to see how MATSim is plugged together. You will not be able to modify the existing MATSim source code. This is an advantage, since it improves scientific reproducibility. If you feel the need to modify the existing MATSim source code, please use https://matsim.org/faq and we will try to help or implement missing extension points. You can generate a \"clickable jar file\" of your own code with mvn package . This could, for example, be passed on to students or clients for specific studies. Use the MATSim GUI \u00b6 This \"standalone\" version is targeted to users who want to use MATSim by editing the input files, including config.xml directly. A basic GUI is provided. Download matsim-example-project and unzip it. There is an option ``download zipfile''; no need to use git. A clickable jar file is no longer provided, since they make the git repo too large. Instead, follow the instructions under ``Building and Running it locally'' at matsim-example-project . As stated there, you will be able to double click on the generated MATSim jar file. What opens is what we call the MATSim GUI. An example config file is in scenarios/equil . Pres Run to run MATSim. The logfile contains, between a lot of other information, also a dump of a the full matsim configuration. If there are interesting parameters, you could try to copy then into your own config file, modify them, and re-run. In my (kn's) view, one can actually get quite far in this way, i.e. by just editing the config file. The main problem is how to obtain the network and in particular the so-called initial demand for your own scenario. If you can't get that from somewhere else, it is probably better to go through the tutorial. #### Latest Stable Release Version 14.0 \"Spring 2022\", released April 2022 - [ Download ZIP](https://github.com/matsim-org/matsim-libs/releases/download/14.0/matsim-14.0-release.zip) ca. 60 MB - [Older versions](https://github.com/matsim-org/matsim-libs/releases) - [Even older versions (on sourceforge)](https://sourceforge.net/projects/matsim/files/MATSim/) #### Development Version This (= using a development version of MATSim via the GUI) is not recommended any longer. If you cannot work with a release, you should use the IDE and maven. Use MATSim as a maven plugin \u00b6 The \"Maven\" version is targeted to programmers who know about Maven, and want to include MATSim into an already existing Maven project. Similar to the \"MATSim example project\" above, the Maven approach will maven-download MATSim, allow you to browse the source code, and keep you up-to-date with releases or snapshots (depending on your pom.xml). It will not allow you to modify the existing MATSim code -- which, in most cases, also should not be necessary: it is preferred that you contact the developers in such situations and we will try to help or implement missing extension points. #### (Pre-)Release matsim MATSim Maven repository https://repo.matsim.org/repository/matsim/ org.matsim matsim 14.0 The [example project on GitHub](https://github.com/matsim-org/matsim-example-project) contains a valid `pom.xml`. [Extensions](/extensions) can be added in the same way; see the `pom.xml` in the [code examples on GitHub](https://github.com/matsim-org/matsim-code-examples) #### Automatic snapshot of development version matsim MATSim Maven repository https://repo.matsim.org/repository/matsim/ org.matsim matsim 15.0-SNAPSHOT These versions are typically less stable and don't come with up-to-date documenation, but may contain new features. Visualization \u00b6 When the simulation ran, many files were created in its output directory. Note that the GUI has a button to reach the output directory. One of the files is a so-called events file, typically generated for every 10th iteration. The events file for the zeroth iteration is located in .../ITERS/it.0/...0.events.xml.gz . This contains a lot of information that can be visualized. The easiest way to visualize MATSim output is to use VIA. A free version, with a limit on the number of agents, is available for download . If you start VIA, you should see a large, black area. This is where the traffic will be visualized. On the left side of this area, you see a smaller area with 4 icons on the top (\"Controls\"). Click the first icon (Data Sources). Now you can either drag and drop files into this section (e.g. a network.xml , or events.xml.gz ), or click the \"+\" at the bottom to select a file to be added. Use either option to add first network.xml to the list of available data and then events.xml.gz . Now the visualizer knows about our data, and we can tell it how to visualize it. Next, click on the second icon (\"Layers\") in the Controls section. Initially, you will see only the background layer listed. Click on the '+' to select the data you want to have displayed. It should already suggest to visualize the network with the loaded network.xml , so just click Add . After a short moment, the network should be shown in the visualization area. Click the '+' again, but this time choose Vehicles as layer type. The events.xml.gz file will be already pre-selected. Click on Add . As any layer depending on the events, a Load Data button will appear at the bottom of the layer tag. Click it to extract the vehicles' positions from the events. About releases \u00b6 We normally release together with our summer term class taught at TU Berlin: A pre-release in march/april. Possible bugfix versions while the class is running. In june/july, the last bugfix version becomes the stable release. In consequence, the \"latest (pre-)release\" may be more modern than the \"latest stable release\". Benchmark \u00b6 Download Benchmark ZIP, ca. 35MB More information about the MATSim Benchmark .","title":"Installation"},{"location":"downloads/#downloadinstall-matsim","text":"There are several ways to get up and running using MATSim, listed here. Choose the path which seems most comfortable to you \u2014 IDE, the MATSim GUI, or the Maven plugin.","title":"Download/Install MATSim"},{"location":"downloads/#use-matsim-as-a-programmer-out-of-an-ide","text":"This approach targets programmers who are comfortable with Java and an IDE (e.g. Eclipse or IntelliJ). This will automatically download MATSim, allow you to browse the source code, and keep you up-to-date with releases or snapshots. Install: (optional but recommended) Fork matsim-example-project . Clone matsim-example-project into local directory. Import as maven project into IDE. Maven will sort out the dependencies. No need to download the MATSim main repository. Sources are available. IntelliJ: Import project --> browse to dir --> maven --> Next, Next, Next Eclipse: Import ... --> ... as maven project --> browse to dir --> accept, accept, accept Run MATSimGUI from the IDE. An example config file is in scenarios/equil . Press Run to run MATSim. (optional but recommended) Run RunMATSim from the IDE. (optional but recommended) Set up, for your forked repo, a continuous integration (CI) workflow. On the github website of your repo: Actions --> New Workflow --> More continuous integration workflows... --> Java with Maven --> Set up this workflow --> Start commit --> ... . This will result in a file .github/workflows/maven.yml which triggers the automatic build after each commit. Detailed configuration of the workflow via this file is possible at a later point in time. Notes: Code examples are in matsim-code-examples on github. Also see there for examples of how to use extensions (package extensions ). If you want/need to write your own extensions: Again, look at matsim-code-examples for examples. Look at ControlerDefaultsModule (in your IDE, source is retrieved by maven) to see how MATSim is plugged together. You will not be able to modify the existing MATSim source code. This is an advantage, since it improves scientific reproducibility. If you feel the need to modify the existing MATSim source code, please use https://matsim.org/faq and we will try to help or implement missing extension points. You can generate a \"clickable jar file\" of your own code with mvn package . This could, for example, be passed on to students or clients for specific studies.","title":"Use MATSim as a programmer out of an IDE"},{"location":"downloads/#use-the-matsim-gui","text":"This \"standalone\" version is targeted to users who want to use MATSim by editing the input files, including config.xml directly. A basic GUI is provided. Download matsim-example-project and unzip it. There is an option ``download zipfile''; no need to use git. A clickable jar file is no longer provided, since they make the git repo too large. Instead, follow the instructions under ``Building and Running it locally'' at matsim-example-project . As stated there, you will be able to double click on the generated MATSim jar file. What opens is what we call the MATSim GUI. An example config file is in scenarios/equil . Pres Run to run MATSim. The logfile contains, between a lot of other information, also a dump of a the full matsim configuration. If there are interesting parameters, you could try to copy then into your own config file, modify them, and re-run. In my (kn's) view, one can actually get quite far in this way, i.e. by just editing the config file. The main problem is how to obtain the network and in particular the so-called initial demand for your own scenario. If you can't get that from somewhere else, it is probably better to go through the tutorial. #### Latest Stable Release Version 14.0 \"Spring 2022\", released April 2022 - [ Download ZIP](https://github.com/matsim-org/matsim-libs/releases/download/14.0/matsim-14.0-release.zip) ca. 60 MB - [Older versions](https://github.com/matsim-org/matsim-libs/releases) - [Even older versions (on sourceforge)](https://sourceforge.net/projects/matsim/files/MATSim/) #### Development Version This (= using a development version of MATSim via the GUI) is not recommended any longer. If you cannot work with a release, you should use the IDE and maven.","title":"Use the MATSim GUI"},{"location":"downloads/#use-matsim-as-a-maven-plugin","text":"The \"Maven\" version is targeted to programmers who know about Maven, and want to include MATSim into an already existing Maven project. Similar to the \"MATSim example project\" above, the Maven approach will maven-download MATSim, allow you to browse the source code, and keep you up-to-date with releases or snapshots (depending on your pom.xml). It will not allow you to modify the existing MATSim code -- which, in most cases, also should not be necessary: it is preferred that you contact the developers in such situations and we will try to help or implement missing extension points. #### (Pre-)Release matsim MATSim Maven repository https://repo.matsim.org/repository/matsim/ org.matsim matsim 14.0 The [example project on GitHub](https://github.com/matsim-org/matsim-example-project) contains a valid `pom.xml`. [Extensions](/extensions) can be added in the same way; see the `pom.xml` in the [code examples on GitHub](https://github.com/matsim-org/matsim-code-examples) #### Automatic snapshot of development version matsim MATSim Maven repository https://repo.matsim.org/repository/matsim/ org.matsim matsim 15.0-SNAPSHOT These versions are typically less stable and don't come with up-to-date documenation, but may contain new features.","title":"Use MATSim as a maven plugin"},{"location":"downloads/#visualization","text":"When the simulation ran, many files were created in its output directory. Note that the GUI has a button to reach the output directory. One of the files is a so-called events file, typically generated for every 10th iteration. The events file for the zeroth iteration is located in .../ITERS/it.0/...0.events.xml.gz . This contains a lot of information that can be visualized. The easiest way to visualize MATSim output is to use VIA. A free version, with a limit on the number of agents, is available for download . If you start VIA, you should see a large, black area. This is where the traffic will be visualized. On the left side of this area, you see a smaller area with 4 icons on the top (\"Controls\"). Click the first icon (Data Sources). Now you can either drag and drop files into this section (e.g. a network.xml , or events.xml.gz ), or click the \"+\" at the bottom to select a file to be added. Use either option to add first network.xml to the list of available data and then events.xml.gz . Now the visualizer knows about our data, and we can tell it how to visualize it. Next, click on the second icon (\"Layers\") in the Controls section. Initially, you will see only the background layer listed. Click on the '+' to select the data you want to have displayed. It should already suggest to visualize the network with the loaded network.xml , so just click Add . After a short moment, the network should be shown in the visualization area. Click the '+' again, but this time choose Vehicles as layer type. The events.xml.gz file will be already pre-selected. Click on Add . As any layer depending on the events, a Load Data button will appear at the bottom of the layer tag. Click it to extract the vehicles' positions from the events.","title":"Visualization"},{"location":"downloads/#about-releases","text":"We normally release together with our summer term class taught at TU Berlin: A pre-release in march/april. Possible bugfix versions while the class is running. In june/july, the last bugfix version becomes the stable release. In consequence, the \"latest (pre-)release\" may be more modern than the \"latest stable release\".","title":"About releases"},{"location":"downloads/#benchmark","text":"Download Benchmark ZIP, ca. 35MB More information about the MATSim Benchmark .","title":" &nbsp; Benchmark"},{"location":"javadoc/","text":"Javadoc documentation \u00b6 The documentation shown here is deprecated. The recommended way to obtain information about extensions now is to visit our extensions webpage . For contribs, see https://github.com/matsim-org/matsim-libs/tree/master/contribs and click into the respective contrib to view the respective README.md , which should give further information. If you really need the javadocs, you can download the corresponding javadocs-jar from our Maven repository . Component Development 12.0 (Summer 2020) 11.0 (Spring 2019) 0.10.1 (Spring 2018) 0.9.0 (Spring 2017) 0.8.1 (Spring 2016) 0.7.0 (Fall 2015) 0.6.0 (Fall 2014) 0.5.0 (Spring 2013) 0.4.0 (Spring 2012) 0.3.0 (Spring 2011) matsim main (core, pt, ...) HEAD in javadoc HEAD in doxygen 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 0.5.0 0.4.0 0.3.0 matsim code-examples (=\"tutorial\") repo repo repo repo repo included above included above included above included above included above included above Contribs accessibility HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 accidents HEAD 12.0 analysis HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 av (Autonomous Vehicles) HEAD 12.0 11.0 0.10.1 0.9.0 bicycle HEAD 12.0 11.0 0.10.1 0.9.0 cadytsIntegration HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 carsharing HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 commercialTrafficApplications HEAD 12.0 common HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 decongestion HEAD 12.0 discrete_mode_choice HEAD 12.0 drt HEAD 12.0 11.0 0.10.1 0.9.0 dvrp HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 emissions HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 ev (Electric Vehicles) HEAD 12.0 11.0 eventsBasedPTRouter HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 freight HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 0.4.0 evacuation (was: grips) repo 0.9.0 0.8.1 0.6.0 gtfs2matsimtransitschedule repo 0.9.0 0.8.1 0.7.0 0.6.0 0.4.0 hybridsim HEAD 12.0 11.0 0.10.1 locationchoice HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 0.5.0 matrixbasedptrouter HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 matsim4urbansim 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 0.4.0 minibus HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 multimodal HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 networkEditor 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 0.4.0 noise HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 osm HEAD 12.0 otfvis HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 parking HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 protobuf HEAD 12.0 11.0 0.10.1 0.9.0 pseudosimulation HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 roadpricing HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 signals HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 socnetgen 0.10.1 0.9.0 0.8.1 socnetsim HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 taxi HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 transEnergySim 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 travelsummary 0.10.1 0.9.0 0.8.1 vsp HEAD 12.0 wagonSim 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0","title":"Javadoc"},{"location":"javadoc/#javadoc-documentation","text":"The documentation shown here is deprecated. The recommended way to obtain information about extensions now is to visit our extensions webpage . For contribs, see https://github.com/matsim-org/matsim-libs/tree/master/contribs and click into the respective contrib to view the respective README.md , which should give further information. If you really need the javadocs, you can download the corresponding javadocs-jar from our Maven repository . Component Development 12.0 (Summer 2020) 11.0 (Spring 2019) 0.10.1 (Spring 2018) 0.9.0 (Spring 2017) 0.8.1 (Spring 2016) 0.7.0 (Fall 2015) 0.6.0 (Fall 2014) 0.5.0 (Spring 2013) 0.4.0 (Spring 2012) 0.3.0 (Spring 2011) matsim main (core, pt, ...) HEAD in javadoc HEAD in doxygen 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 0.5.0 0.4.0 0.3.0 matsim code-examples (=\"tutorial\") repo repo repo repo repo included above included above included above included above included above included above Contribs accessibility HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 accidents HEAD 12.0 analysis HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 av (Autonomous Vehicles) HEAD 12.0 11.0 0.10.1 0.9.0 bicycle HEAD 12.0 11.0 0.10.1 0.9.0 cadytsIntegration HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 carsharing HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 commercialTrafficApplications HEAD 12.0 common HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 decongestion HEAD 12.0 discrete_mode_choice HEAD 12.0 drt HEAD 12.0 11.0 0.10.1 0.9.0 dvrp HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 emissions HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 ev (Electric Vehicles) HEAD 12.0 11.0 eventsBasedPTRouter HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 freight HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 0.4.0 evacuation (was: grips) repo 0.9.0 0.8.1 0.6.0 gtfs2matsimtransitschedule repo 0.9.0 0.8.1 0.7.0 0.6.0 0.4.0 hybridsim HEAD 12.0 11.0 0.10.1 locationchoice HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 0.5.0 matrixbasedptrouter HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 matsim4urbansim 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 0.4.0 minibus HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 multimodal HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 networkEditor 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 0.4.0 noise HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 osm HEAD 12.0 otfvis HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 parking HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 protobuf HEAD 12.0 11.0 0.10.1 0.9.0 pseudosimulation HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 roadpricing HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 signals HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 socnetgen 0.10.1 0.9.0 0.8.1 socnetsim HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 0.7.0 taxi HEAD 12.0 11.0 0.10.1 0.9.0 0.8.1 transEnergySim 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0 travelsummary 0.10.1 0.9.0 0.8.1 vsp HEAD 12.0 wagonSim 0.10.1 0.9.0 0.8.1 0.7.0 0.6.0","title":"Javadoc documentation"},{"location":"open-scenario-data/","text":"Open Scenario Data \u00b6 The following is a list of known scenario data sets that are open and free to use with MATSim. Not all data sets contain all required files to run a MATSim model. Some may only provide a network for example. Please give credit when using these scenarios. matsim.org \u00b6 https://github.com/matsim-scenarios VSP, TU Berlin \u00b6 Most of our scenarios are now under https://github.com/matsim-scenarios . Some older open source scenarios are still in our svn directory as follows. The directories are hierarchically organized and should be self-explanatory. We try to provide readme files, but this does not always work: https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/scenarios/ South Africa \u00b6 Prof. Johan Joubert from the University of Pretoria has open sourced some of the scenarios he built, each consisting of a network and a population: https://matsim.atlassian.net/wiki/display/MATPUB/South+Africa \u00cele-de-France \u00b6 An open and reproducible simulation scenario for \u00cele-de-France is available here . MATSim Test Examples \u00b6 Some smaller scenarios are directly contained in the MATSim source repository, often used for feature demonstration or tests: https://github.com/matsim-org/matsim/tree/master/examples Other links to open data \u00b6 (just a list of links we've come across) A registry of public transit data: http://transit.land . German rail: See http://data.deutschebahn.com/blog/2016/02/25/fahrplan for a German introduction and http://data.deutschebahn.com/apis/fahrplan for the API description; you'll need an API key that can be had by sending a simple E-Mail to DB's Open Data Team. Einen Monat spaeter hat jemand aus den API-Daten einen GTFS-Fahrplan extrahiert: https://github.com/fredlockheed/db-fv-gtfs Visualizations \u00b6 (this is not necessarily \"data\", but links to data and links to visualizations often come together and/or cannot be cleanly separated) Charging stations in Europe: https://ccs-map.eu . TRAVIC Transit Visualization Client http://travic.cs.uni-freiburg.de/ or https://tracker.geops.ch or https://github.com/geops .","title":"Open scenario data"},{"location":"open-scenario-data/#open-scenario-data","text":"The following is a list of known scenario data sets that are open and free to use with MATSim. Not all data sets contain all required files to run a MATSim model. Some may only provide a network for example. Please give credit when using these scenarios.","title":"Open Scenario Data"},{"location":"open-scenario-data/#matsimorg","text":"https://github.com/matsim-scenarios","title":"matsim.org"},{"location":"open-scenario-data/#vsp-tu-berlin","text":"Most of our scenarios are now under https://github.com/matsim-scenarios . Some older open source scenarios are still in our svn directory as follows. The directories are hierarchically organized and should be self-explanatory. We try to provide readme files, but this does not always work: https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/scenarios/","title":"VSP, TU Berlin"},{"location":"open-scenario-data/#south-africa","text":"Prof. Johan Joubert from the University of Pretoria has open sourced some of the scenarios he built, each consisting of a network and a population: https://matsim.atlassian.net/wiki/display/MATPUB/South+Africa","title":"South Africa"},{"location":"open-scenario-data/#ile-de-france","text":"An open and reproducible simulation scenario for \u00cele-de-France is available here .","title":"\u00cele-de-France"},{"location":"open-scenario-data/#matsim-test-examples","text":"Some smaller scenarios are directly contained in the MATSim source repository, often used for feature demonstration or tests: https://github.com/matsim-org/matsim/tree/master/examples","title":"MATSim Test Examples"},{"location":"open-scenario-data/#other-links-to-open-data","text":"(just a list of links we've come across) A registry of public transit data: http://transit.land . German rail: See http://data.deutschebahn.com/blog/2016/02/25/fahrplan for a German introduction and http://data.deutschebahn.com/apis/fahrplan for the API description; you'll need an API key that can be had by sending a simple E-Mail to DB's Open Data Team. Einen Monat spaeter hat jemand aus den API-Daten einen GTFS-Fahrplan extrahiert: https://github.com/fredlockheed/db-fv-gtfs","title":"Other links to open data"},{"location":"open-scenario-data/#visualizations","text":"(this is not necessarily \"data\", but links to data and links to visualizations often come together and/or cannot be cleanly separated) Charging stations in Europe: https://ccs-map.eu . TRAVIC Transit Visualization Client http://travic.cs.uni-freiburg.de/ or https://tracker.geops.ch or https://github.com/geops .","title":"Visualizations"},{"location":"submit-news/","text":"Submit MATSim-related news \u00b6 {% capture today %}{{'now' | date: '%Y-%m-%d'}}{% endcapture %} CREATE ITEM \u00bb ON GITHUB \u00bb We welcome MATSim-related news items, job postings, and event announcements for our front page. To submit news, create a pull request on Github.com with the content of your news item in Markdown format. Here's how to do that: Instructions for posting news via GitHub \u00b6 You'll need a free account on Github to post items Click the Create item on Github button above, to draft a new item in the _posts directory of our site. Edit the file name , author , title , and summary lines. The summary will be shown on the front page as a \"teaser\" blurb. The file name becomes part of the URL, so please don't call it just \"news-item\", but give it a specific name. Add your remaining content in standard Markdown format Preview your post using the Preview pane, and when done... You're ready to create your pull request! Click Propose New File button, which will take you to the confirmation page: Click Create Pull Request You're done! We'll either add your content or get back to you soon! If this is too complicated \u00b6 If this is just too much, send us an email and we'll post your item for you.","title":"Submit MATSim News"},{"location":"submit-news/#submit-matsim-related-news","text":"{% capture today %}{{'now' | date: '%Y-%m-%d'}}{% endcapture %} CREATE ITEM \u00bb ON GITHUB \u00bb We welcome MATSim-related news items, job postings, and event announcements for our front page. To submit news, create a pull request on Github.com with the content of your news item in Markdown format. Here's how to do that:","title":"Submit MATSim-related news"},{"location":"submit-news/#instructions-for-posting-news-via-github","text":"You'll need a free account on Github to post items Click the Create item on Github button above, to draft a new item in the _posts directory of our site. Edit the file name , author , title , and summary lines. The summary will be shown on the front page as a \"teaser\" blurb. The file name becomes part of the URL, so please don't call it just \"news-item\", but give it a specific name. Add your remaining content in standard Markdown format Preview your post using the Preview pane, and when done... You're ready to create your pull request! Click Propose New File button, which will take you to the confirmation page: Click Create Pull Request You're done! We'll either add your content or get back to you soon!","title":"Instructions for posting news via GitHub"},{"location":"submit-news/#if-this-is-too-complicated","text":"If this is just too much, send us an email and we'll post your item for you.","title":"If this is too complicated"},{"location":"the-book/","text":"The MATSim Book is the official reference and user documentation for MATSim. Topics Covered \u00b6 The book is divided into four parts, covering a broad range of topics on more than 600 pages: Part I is an introduction on how to use MATSim, using only the functionality that MATSim brings out-of-the-box. Part II first explains the different data sets needed to run MATSim, and then introduces a number of extensions which add additional functionality to MATSim. Part III provides a lot of insight into the theoretical background of MATSim. Part IV finally presents over 40 use cases from around the world where MATSim was or still is used. Availability \u00b6 Current version \u00b6 Since the book keeps getting older, every year along with the MATSim class at TU Berlin we update the most important chapters, make them available here , and call it the User Guide. Edition 2016 \u00b6 The full book remains at the status of 2016. Download as PDF or eBook: available at Ubiquity Press Print on Demand: available at Ubiquity Press The book is published and available unter the CC-BY 4.0 license. Preferred Citation \u00b6 If you use MATSim and write a scientific paper about it, please cite the book as reference to MATSim. Horni, A., Nagel, K. and Axhausen, K.W. (eds.) 2016 The Multi-Agent Transport Simulation MATSim . London: Ubiquity Press. DOI: http://dx.doi.org/10.5334/baw . License: CC-BY 4.0","title":"MATSim Book"},{"location":"the-book/#topics-covered","text":"The book is divided into four parts, covering a broad range of topics on more than 600 pages: Part I is an introduction on how to use MATSim, using only the functionality that MATSim brings out-of-the-box. Part II first explains the different data sets needed to run MATSim, and then introduces a number of extensions which add additional functionality to MATSim. Part III provides a lot of insight into the theoretical background of MATSim. Part IV finally presents over 40 use cases from around the world where MATSim was or still is used.","title":"Topics Covered"},{"location":"the-book/#availability","text":"","title":"Availability"},{"location":"the-book/#current-version","text":"Since the book keeps getting older, every year along with the MATSim class at TU Berlin we update the most important chapters, make them available here , and call it the User Guide.","title":"Current version"},{"location":"the-book/#edition-2016","text":"The full book remains at the status of 2016. Download as PDF or eBook: available at Ubiquity Press Print on Demand: available at Ubiquity Press The book is published and available unter the CC-BY 4.0 license.","title":"Edition 2016"},{"location":"the-book/#preferred-citation","text":"If you use MATSim and write a scientific paper about it, please cite the book as reference to MATSim. Horni, A., Nagel, K. and Axhausen, K.W. (eds.) 2016 The Multi-Agent Transport Simulation MATSim . London: Ubiquity Press. DOI: http://dx.doi.org/10.5334/baw . License: CC-BY 4.0","title":"Preferred Citation"},{"location":"about/about-matsim/","text":"Agent-Based Transport Simulations \u00b6 MATSim provides a framework to implement large-scale agent-based transport simulations. The framework consists of several modules which can be combined or used stand-alone. Modules can be replaced by custom implementations to test single aspects of your own work. Currently, MATSim offers a framework for demand-modeling, agent-based mobility-simulation (traffic flow simulation), re-planning, a controler to iteratively run simulations as well as methods to analyze the output generated by the modules. Key Features of MATSim \u00b6 Fast Dynamic and Agent-Based Traffic Simulation Simulate whole days within minutes Private and Public Traffic Both private cars and transit traffic can be simulated Supports Large Scenarios MATSim can simulate millions of agents or huge, detailed networks Versatile Analyses and Simulation Output E.g. compare simulated data to real-world counting stations Modular Approach Easily extended with your own algorithms Open Source You get the Java Source Code, which runs on all major operating systems Active Development The international MATSim community constantly adds new features and improves current ones Start using MATSim! \u00b6 To learn more, look at the documentation or at the scenario gallery to see how others use MATSim.","title":"About MATSim"},{"location":"about/about-matsim/#agent-based-transport-simulations","text":"MATSim provides a framework to implement large-scale agent-based transport simulations. The framework consists of several modules which can be combined or used stand-alone. Modules can be replaced by custom implementations to test single aspects of your own work. Currently, MATSim offers a framework for demand-modeling, agent-based mobility-simulation (traffic flow simulation), re-planning, a controler to iteratively run simulations as well as methods to analyze the output generated by the modules.","title":"Agent-Based Transport Simulations"},{"location":"about/about-matsim/#key-features-of-matsim","text":"","title":"Key Features of MATSim"},{"location":"about/about-matsim/#start-using-matsim","text":"To learn more, look at the documentation or at the scenario gallery to see how others use MATSim.","title":"Start using MATSim!"},{"location":"about/about-us/","text":"MATSim Community \u00b6 MATSim is currently a joint effort by various groups and persons. The two main drivers for the development of MATSim are: Transport Systems Planning and Transport Telematics at the Institute for Land and Sea Transport Systems, Technische Universit\u00e4t Berlin, led by Prof. Dr. Kai Nagel Transport Planning at the Institute for Transport Planning and Systems (IVT), Swiss Federal Institute of Technology Zurich, led by Prof. Dr. Kay W. Axhausen In addition, the following groups and companies contribute regularly, or have so in the past, to the development of MATSim: Senozon , a company in Switzerland with subsidiaries in Germany and Austria, founded by former PhD and research students. Simunto , another company in Switzerland, founded by a former PhD and research student. Center for Transport Development at the University of Pretoria, especially the group led by Prof. Dr. Johan Joubert. Future Cities Laboratory , part of the Singapore-ETH Centre. Department of Transport Systems at Poznan University of Technology (Poland), especially Micha\u0142 Maciejewski. In addition, we stay in close contact to other research groups using and extending MATSim, for example in Toronto (Canada), KIT Karlsruhe and DLR Berlin (both Germany). After all, MATSim is an open source project, feel free to join us on user meetings, conferences or submit patches and pull requests to gain some glory within the MATSim community! While the development is mostly advanced by current research projects, there is a MATSim Committee that acts as a steering group for organizational and strategic issues. Attendants of the conceptual meeting in 2012: Some members of the MATSim Core Development Group in Fall 2011 during the yearly core developer meeting: Attendants of the first MATSim User Meeting 2009 in Berlin:","title":"MATSim Community"},{"location":"about/about-us/#matsim-community","text":"MATSim is currently a joint effort by various groups and persons. The two main drivers for the development of MATSim are: Transport Systems Planning and Transport Telematics at the Institute for Land and Sea Transport Systems, Technische Universit\u00e4t Berlin, led by Prof. Dr. Kai Nagel Transport Planning at the Institute for Transport Planning and Systems (IVT), Swiss Federal Institute of Technology Zurich, led by Prof. Dr. Kay W. Axhausen In addition, the following groups and companies contribute regularly, or have so in the past, to the development of MATSim: Senozon , a company in Switzerland with subsidiaries in Germany and Austria, founded by former PhD and research students. Simunto , another company in Switzerland, founded by a former PhD and research student. Center for Transport Development at the University of Pretoria, especially the group led by Prof. Dr. Johan Joubert. Future Cities Laboratory , part of the Singapore-ETH Centre. Department of Transport Systems at Poznan University of Technology (Poland), especially Micha\u0142 Maciejewski. In addition, we stay in close contact to other research groups using and extending MATSim, for example in Toronto (Canada), KIT Karlsruhe and DLR Berlin (both Germany). After all, MATSim is an open source project, feel free to join us on user meetings, conferences or submit patches and pull requests to gain some glory within the MATSim community! While the development is mostly advanced by current research projects, there is a MATSim Committee that acts as a steering group for organizational and strategic issues. Attendants of the conceptual meeting in 2012: Some members of the MATSim Core Development Group in Fall 2011 during the yearly core developer meeting: Attendants of the first MATSim User Meeting 2009 in Berlin:","title":"MATSim Community"},{"location":"about/impressum/","text":"The website of the Technische Universit\u00e4t Berlin consists of numerous offers from various institutions. The editorial responsibility lies with the respective bodies such as faculties, institutes, central institutions, administrative bodies, etc. or persons who have created the pages. If you have any questions about a page, please contact the author responsible for the page in question (information given at the bottom of each page). Central address of the TU Berlin \u00b6 Berlin University of Technology The President Prof. Dr. Christian Thomsen Stra\u00dfe des 17. Juni 135 10623 Berlin www.tu-berlin.de Legal Supervision \u00b6 The Governing Mayor of Berlin Senate Chancellery Sales tax identification number \u00b6 VAT ID No.: DE 811 231 089 Contact person \u00b6 The TU Berlin websites are organized in a decentralized manner and are maintained by the individual institutions themselves. If you have any questions or suggestions, please contact the responsible office listed at the bottom of the page. Further contact options can be found at Contact . Publisher \u00b6 Office of Communications, Events and Alumni Stra\u00dfe des 17. Juni 135 10623 Berlin Phone: +49 (0)30 314-23922 or -22919 Fax: +49 (0)30 314-23909 www.pressestelle.tu-berlin.de Technical implementation \u00b6 Central Campus Management (ZECM) www.campusmanagement.tu-berlin.de IT Guidelines of the TU Berlin \u00b6 Online-Styleguide : Design rules and rules for the CD-compliant development of the TU Berlin website (TU internal access only) Draft of the rights concept for TYPO3@TUB (November 2007) Framework for the information technology facilities of the TU Berlin (January 2007) Avoiding Copyright Infringements (August 1999) Framework Regulations for the Internet Service WWW (August 1996) Disclaimer. \u00b6 Content of the online offer \u00b6 The contents of this website are researched and implemented with the greatest possible care. Nevertheless, errors in the editing process cannot be ruled out. Please send any comments or corrections to the press office. The publisher accepts no responsibility for the topicality, correctness, completeness or quality of the information provided. Liability claims against the publisher, which refer to damages of a material or non-material nature, which were caused by the use or non-use of the information provided or by the use of incorrect and incomplete information, are fundamentally excluded, insofar as there is no demonstrable intentional or grossly negligent fault on the part of the publisher. All offers are subject to change and non-binding. The publisher expressly reserves the right to change, supplement or delete parts of the pages or the entire offer without prior notice or to discontinue publication temporarily or permanently. References and links \u00b6 The publisher is not responsible for any contents linked or referred to from his pages - unless he has full knowledge of illegal contents and would be able to prevent the visitors of his site fromviewing those pages. The publisher hereby expressly declares that at the time of linking, no illegal content was recognizable on the linked pages. The publisher has no influence on the current and future design, content or authorship of the linked pages. Therefore, he hereby expressly dissociates himself from all contents of all linked pages that were changed after the link was set. This statement applies to all links and references set within the own Internet offer as well as to external entries in guest books, discussion forums, link directories, mailing lists and all other forms of databases set up by the author, to whose content external write access is possible. For illegal, incorrect or incomplete contents and especially for damages resulting from the use or non-use of such information, only the provider of the site referred to is liable, not the one who has linked to the respective publication. Copyright and trademark law \u00b6 The publisher endeavors to observe the copyrights of the images, graphics, sound and video documents as well as texts used in all publications, to use images, graphics, sound and video documents as well as texts created by himself or to use license-free graphics, sound and video documents as well as texts. All brand names and trademarks mentioned on the website and possibly protected by third parties are subject without restriction to the provisions of the applicable trademark law and the ownership rights of the respective registered owners. The mere mention of a trademark does not imply that it is not protected by the rights of third parties! The copyright for published content and objects created by the publisher himself remains solely with the publisher of the pages. Any duplication, processing, storage or use of objects such as diagrams, sounds or texts in other electronic or printed publications is not permitted without the author's agreement. This does not affect copying and downloading for private, scientific and non-commercial use. We expressly permit and welcome the citation of our documents and web pages as well as the setting of links to our website. Data protection \u00b6 If the opportunity for the input of personal or business data (email addresses, name, addresses) is given, the input of these data takes place voluntarily. The use and payment of all offered services are permitted - if and so far technically possible and reasonable - without specification of any personal data or under specification of anonymized data or an alias. The use of published postal addresses, telephone or fax numbers and email addresses for marketing purposes is prohibited, offenders sending unwanted spam messages will be punished. We expressly reserve the right to take legal action against the senders of so-called spam mails in the event of violations of this prohibition. Further information on data protection at the TU Berlin: Privacy Policy Data Protection Officer Legality of this disclaimer \u00b6 This disclaimer is to be regarded as part of the internet publication which you were referred from. If sections or individual terms of this statement are not legal or correct, the content or validity of the other parts remain uninfluenced by this fact.","title":"Impressum"},{"location":"about/impressum/#central-address-of-the-tu-berlin","text":"Berlin University of Technology The President Prof. Dr. Christian Thomsen Stra\u00dfe des 17. Juni 135 10623 Berlin www.tu-berlin.de","title":"Central address of the TU Berlin"},{"location":"about/impressum/#legal-supervision","text":"The Governing Mayor of Berlin Senate Chancellery","title":"Legal Supervision"},{"location":"about/impressum/#sales-tax-identification-number","text":"VAT ID No.: DE 811 231 089","title":"Sales tax identification number"},{"location":"about/impressum/#contact-person","text":"The TU Berlin websites are organized in a decentralized manner and are maintained by the individual institutions themselves. If you have any questions or suggestions, please contact the responsible office listed at the bottom of the page. Further contact options can be found at Contact .","title":"Contact person"},{"location":"about/impressum/#publisher","text":"Office of Communications, Events and Alumni Stra\u00dfe des 17. Juni 135 10623 Berlin Phone: +49 (0)30 314-23922 or -22919 Fax: +49 (0)30 314-23909 www.pressestelle.tu-berlin.de","title":"Publisher"},{"location":"about/impressum/#technical-implementation","text":"Central Campus Management (ZECM) www.campusmanagement.tu-berlin.de","title":"Technical implementation"},{"location":"about/impressum/#it-guidelines-of-the-tu-berlin","text":"Online-Styleguide : Design rules and rules for the CD-compliant development of the TU Berlin website (TU internal access only) Draft of the rights concept for TYPO3@TUB (November 2007) Framework for the information technology facilities of the TU Berlin (January 2007) Avoiding Copyright Infringements (August 1999) Framework Regulations for the Internet Service WWW (August 1996)","title":"IT Guidelines of the TU Berlin"},{"location":"about/impressum/#disclaimer","text":"","title":"Disclaimer."},{"location":"about/impressum/#content-of-the-online-offer","text":"The contents of this website are researched and implemented with the greatest possible care. Nevertheless, errors in the editing process cannot be ruled out. Please send any comments or corrections to the press office. The publisher accepts no responsibility for the topicality, correctness, completeness or quality of the information provided. Liability claims against the publisher, which refer to damages of a material or non-material nature, which were caused by the use or non-use of the information provided or by the use of incorrect and incomplete information, are fundamentally excluded, insofar as there is no demonstrable intentional or grossly negligent fault on the part of the publisher. All offers are subject to change and non-binding. The publisher expressly reserves the right to change, supplement or delete parts of the pages or the entire offer without prior notice or to discontinue publication temporarily or permanently.","title":"Content of the online offer"},{"location":"about/impressum/#references-and-links","text":"The publisher is not responsible for any contents linked or referred to from his pages - unless he has full knowledge of illegal contents and would be able to prevent the visitors of his site fromviewing those pages. The publisher hereby expressly declares that at the time of linking, no illegal content was recognizable on the linked pages. The publisher has no influence on the current and future design, content or authorship of the linked pages. Therefore, he hereby expressly dissociates himself from all contents of all linked pages that were changed after the link was set. This statement applies to all links and references set within the own Internet offer as well as to external entries in guest books, discussion forums, link directories, mailing lists and all other forms of databases set up by the author, to whose content external write access is possible. For illegal, incorrect or incomplete contents and especially for damages resulting from the use or non-use of such information, only the provider of the site referred to is liable, not the one who has linked to the respective publication.","title":"References and links"},{"location":"about/impressum/#copyright-and-trademark-law","text":"The publisher endeavors to observe the copyrights of the images, graphics, sound and video documents as well as texts used in all publications, to use images, graphics, sound and video documents as well as texts created by himself or to use license-free graphics, sound and video documents as well as texts. All brand names and trademarks mentioned on the website and possibly protected by third parties are subject without restriction to the provisions of the applicable trademark law and the ownership rights of the respective registered owners. The mere mention of a trademark does not imply that it is not protected by the rights of third parties! The copyright for published content and objects created by the publisher himself remains solely with the publisher of the pages. Any duplication, processing, storage or use of objects such as diagrams, sounds or texts in other electronic or printed publications is not permitted without the author's agreement. This does not affect copying and downloading for private, scientific and non-commercial use. We expressly permit and welcome the citation of our documents and web pages as well as the setting of links to our website.","title":"Copyright and trademark law"},{"location":"about/impressum/#data-protection","text":"If the opportunity for the input of personal or business data (email addresses, name, addresses) is given, the input of these data takes place voluntarily. The use and payment of all offered services are permitted - if and so far technically possible and reasonable - without specification of any personal data or under specification of anonymized data or an alias. The use of published postal addresses, telephone or fax numbers and email addresses for marketing purposes is prohibited, offenders sending unwanted spam messages will be punished. We expressly reserve the right to take legal action against the senders of so-called spam mails in the event of violations of this prohibition. Further information on data protection at the TU Berlin: Privacy Policy Data Protection Officer","title":"Data protection"},{"location":"about/impressum/#legality-of-this-disclaimer","text":"This disclaimer is to be regarded as part of the internet publication which you were referred from. If sections or individual terms of this statement are not legal or correct, the content or validity of the other parts remain uninfluenced by this fact.","title":"Legality of this disclaimer"},{"location":"content/2016-matsim-class-tu-berlin-matsim-version-08x/","text":"2016: MATSim class at TU Berlin (matsim version 0.8.x) \u00b6 This is a summary of tutorials of the MATSim class at TU Berlin which is held each year during the summer term. The tutorials provide a step-by-step installation and usage guide for creating your own scenario and policy cases. It does not always go too much into detail (as it is usually taught in a very responsive way in a classroom), so if you need more details about a certain topic, please also consult the MATSim book . All code snippets in this tutorial are direct links to the GitHub repository of MATSim release 0.8.0 (June 2016). It is not recommended to use any other MATSim version with this tutorial. Access: The tutorial lies within TU Berlin's e-learning system ISIS but is open for guests. > Click here to get to the course < To access as a guest, click \"Als Gast\" and accept the Terms & Conditions, just as in the following two pictures:","title":"2016 MATSim class at TU Berlin (matsim version 0.8.x)"},{"location":"content/2016-matsim-class-tu-berlin-matsim-version-08x/#2016-matsim-class-at-tu-berlin-matsim-version-08x","text":"This is a summary of tutorials of the MATSim class at TU Berlin which is held each year during the summer term. The tutorials provide a step-by-step installation and usage guide for creating your own scenario and policy cases. It does not always go too much into detail (as it is usually taught in a very responsive way in a classroom), so if you need more details about a certain topic, please also consult the MATSim book . All code snippets in this tutorial are direct links to the GitHub repository of MATSim release 0.8.0 (June 2016). It is not recommended to use any other MATSim version with this tutorial. Access: The tutorial lies within TU Berlin's e-learning system ISIS but is open for guests. > Click here to get to the course < To access as a guest, click \"Als Gast\" and accept the Terms & Conditions, just as in the following two pictures:","title":"2016: MATSim class at TU Berlin (matsim version 0.8.x)"},{"location":"content/2017-matsim-class-tu-berlin-matsim-version-09x/","text":"2017: MATSim class at TU Berlin (matsim version 0.9.x) \u00b6 This is a summary of tutorials of the MATSim class at TU Berlin which is held each year during the summer term. The tutorials provide a step-by-step installation and usage guide for creating your own scenario and policy cases. It does not always go too much into detail (as it is usually taught in a very responsive way in a classroom), so if you need more details about a certain topic, please also consult the MATSim book . All code snippets in this tutorial are direct links to the GitHub repository of MATSim release 0.9.0 (Summer 2017). It is not recommended to use any other MATSim version with this tutorial. Access: The tutorial lies within TU Berlin's e-learning system ISIS but is open for guests. To access as a guest, click \"Log in as guest\". Unfortunately, from then on it continues in German, no matter what you do. You will have accept the Site Policy Agreement, called \"Nutzungsbedingungen\" in German. The pictures below give some idea, but the layout of the site keeps changing. > Click here to get to the course <","title":"2017 MATSim class at TU Berlin (matsim version 0.9.x)"},{"location":"content/2017-matsim-class-tu-berlin-matsim-version-09x/#2017-matsim-class-at-tu-berlin-matsim-version-09x","text":"This is a summary of tutorials of the MATSim class at TU Berlin which is held each year during the summer term. The tutorials provide a step-by-step installation and usage guide for creating your own scenario and policy cases. It does not always go too much into detail (as it is usually taught in a very responsive way in a classroom), so if you need more details about a certain topic, please also consult the MATSim book . All code snippets in this tutorial are direct links to the GitHub repository of MATSim release 0.9.0 (Summer 2017). It is not recommended to use any other MATSim version with this tutorial. Access: The tutorial lies within TU Berlin's e-learning system ISIS but is open for guests. To access as a guest, click \"Log in as guest\". Unfortunately, from then on it continues in German, no matter what you do. You will have accept the Site Policy Agreement, called \"Nutzungsbedingungen\" in German. The pictures below give some idea, but the layout of the site keeps changing. > Click here to get to the course <","title":"2017: MATSim class at TU Berlin (matsim version 0.9.x)"},{"location":"content/2018-matsim-class-tu-berlin-matsim-version-010x/","text":"2018: MATSim class at TU Berlin (matsim version 0.10.x) \u00b6 This is a summary of tutorials of the MATSim class at TU Berlin which is held each year during the summer term. The tutorials provide a step-by-step installation and usage guide for creating your own scenario and policy cases. It does not always go too much into detail (as it is usually taught in a very responsive way in a classroom), so if you need more details about a certain topic, please also consult the MATSim book . All code snippets in this tutorial are direct links to the GitHub repository of MATSim release 0.10.0 (Summer 2018). It is not recommended to use any other MATSim version with this tutorial. Access: The tutorial lies within TU Berlin's e-learning system ISIS but is open for guests. To access as a guest, click \"Log in as guest\". > Click here to get to the course <","title":"2018 MATSim class at TU Berlin (matsim version 0.10.x)"},{"location":"content/2018-matsim-class-tu-berlin-matsim-version-010x/#2018-matsim-class-at-tu-berlin-matsim-version-010x","text":"This is a summary of tutorials of the MATSim class at TU Berlin which is held each year during the summer term. The tutorials provide a step-by-step installation and usage guide for creating your own scenario and policy cases. It does not always go too much into detail (as it is usually taught in a very responsive way in a classroom), so if you need more details about a certain topic, please also consult the MATSim book . All code snippets in this tutorial are direct links to the GitHub repository of MATSim release 0.10.0 (Summer 2018). It is not recommended to use any other MATSim version with this tutorial. Access: The tutorial lies within TU Berlin's e-learning system ISIS but is open for guests. To access as a guest, click \"Log in as guest\". > Click here to get to the course <","title":"2018: MATSim class at TU Berlin (matsim version 0.10.x)"},{"location":"content/2019-matsim-class-tu-berlin-matsim-version-11x/","text":"2019: MATSim class at TU Berlin (matsim version 11.x) \u00b6 This is a summary of tutorials of the MATSim class at TU Berlin which is held each year during the summer term. The tutorials provide a step-by-step installation and usage guide for creating your own scenario and policy cases. It does not always go too much into detail (as it is usually taught in a very responsive way in a classroom), so if you need more details about a certain topic, please also consult the MATSim book . All code snippets in this tutorial are direct links to the GitHub repository of MATSim release 11.0 (Summer 2019). It is not recommended to use any other MATSim version with this tutorial. Access: The tutorial lies within TU Berlin's e-learning system ISIS but is open for guests. To access as a guest, click \"Log in as guest\". > Click here to get to the course <","title":"2019 MATSim class at TU Berlin (matsim version 11.x)"},{"location":"content/2019-matsim-class-tu-berlin-matsim-version-11x/#2019-matsim-class-at-tu-berlin-matsim-version-11x","text":"This is a summary of tutorials of the MATSim class at TU Berlin which is held each year during the summer term. The tutorials provide a step-by-step installation and usage guide for creating your own scenario and policy cases. It does not always go too much into detail (as it is usually taught in a very responsive way in a classroom), so if you need more details about a certain topic, please also consult the MATSim book . All code snippets in this tutorial are direct links to the GitHub repository of MATSim release 11.0 (Summer 2019). It is not recommended to use any other MATSim version with this tutorial. Access: The tutorial lies within TU Berlin's e-learning system ISIS but is open for guests. To access as a guest, click \"Log in as guest\". > Click here to get to the course <","title":"2019: MATSim class at TU Berlin (matsim version 11.x)"},{"location":"content/2020-matsim-class-tu-berlin-matsim-version-12x/","text":"2020: MATSim class at TU Berlin (matsim version 12.x) \u00b6 This is a summary of tutorials of the MATSim class at TU Berlin which is held each year during the summer term. The tutorials provide a step-by-step installation and usage guide for creating your own scenario and policy cases. It does not always go too much into detail (as it is usually taught in a very responsive way in a classroom), so if you need more details about a certain topic, please also consult the MATSim book . All code snippets in this tutorial are direct links to the GitHub repository of MATSim release 12.0 (Summer 2020). It is not recommended to use any other MATSim version with this tutorial. Access: The tutorial lies within TU Berlin's e-learning system ISIS but is open for guests. To access as a guest, click \"Log in as guest\". ==> Click here to get to the course ==<","title":"2020 MATSim class at TU Berlin (matsim version 12.x)"},{"location":"content/2020-matsim-class-tu-berlin-matsim-version-12x/#2020-matsim-class-at-tu-berlin-matsim-version-12x","text":"This is a summary of tutorials of the MATSim class at TU Berlin which is held each year during the summer term. The tutorials provide a step-by-step installation and usage guide for creating your own scenario and policy cases. It does not always go too much into detail (as it is usually taught in a very responsive way in a classroom), so if you need more details about a certain topic, please also consult the MATSim book . All code snippets in this tutorial are direct links to the GitHub repository of MATSim release 12.0 (Summer 2020). It is not recommended to use any other MATSim version with this tutorial. Access: The tutorial lies within TU Berlin's e-learning system ISIS but is open for guests. To access as a guest, click \"Log in as guest\". ==> Click here to get to the course ==<","title":"2020: MATSim class at TU Berlin (matsim version 12.x)"},{"location":"content/developer-resources/","text":"Developer Resources \u00b6 Below is a list of several links that contain information about the development process of MATSim. Some of the linked pages may be useful, while others are just \"for fun\". Most of the pages are updated once a day during the night. Build Server \u00b6 The MATSim Build Server (sometimes also called \"Continuous Integration Server\") regularly checks out the source code of MATSim, compiles the code and runs the tests. The build server has detailed statistics about the code and tests. Issue Tracker \u00b6 Found a bug? Then file a bug-report! Have a feature request? Enter it here! Nothing to do anymore? Fix a bug or implement a feature request! Javadoc \u00b6 Doxygen \u00b6 Test results archive \u00b6 We regularly archive some test results, such as plots of fundamental diagrams.","title":"Developer Resources"},{"location":"content/developer-resources/#developer-resources","text":"Below is a list of several links that contain information about the development process of MATSim. Some of the linked pages may be useful, while others are just \"for fun\". Most of the pages are updated once a day during the night.","title":"Developer Resources"},{"location":"content/developer-resources/#build-server","text":"The MATSim Build Server (sometimes also called \"Continuous Integration Server\") regularly checks out the source code of MATSim, compiles the code and runs the tests. The build server has detailed statistics about the code and tests.","title":"Build Server"},{"location":"content/developer-resources/#issue-tracker","text":"Found a bug? Then file a bug-report! Have a feature request? Enter it here! Nothing to do anymore? Fix a bug or implement a feature request!","title":"Issue Tracker"},{"location":"content/developer-resources/#javadoc","text":"","title":"Javadoc"},{"location":"content/developer-resources/#doxygen","text":"","title":"Doxygen"},{"location":"content/developer-resources/#test-results-archive","text":"We regularly archive some test results, such as plots of fundamental diagrams.","title":"Test results archive"},{"location":"content/matsim-book-and-users-guide/","text":"MATSim Book and User's Guide \u00b6 The MATSim book is a comprehensive introduction into MATSim. Since books are a bit static, and software is dynamic, we provide an extract of some chapters as a user's guide . In contrast to the book, these chapters are regularly updated in conjunction with our annual MATSim class at TU Berlin, running from March until July every year.","title":"MATSim Book and User's Guide"},{"location":"content/matsim-book-and-users-guide/#matsim-book-and-users-guide","text":"The MATSim book is a comprehensive introduction into MATSim. Since books are a bit static, and software is dynamic, we provide an extract of some chapters as a user's guide . In contrast to the book, these chapters are regularly updated in conjunction with our annual MATSim class at TU Berlin, running from March until July every year.","title":"MATSim Book and User's Guide"},{"location":"content/zz_archive/matsim-example-project/","text":"MATSim Example Project \u00b6 There is a MATSim example project on GitHub . It allows to use all of the matsim main distribution as well as the contribs as maven-includes. The setup allows both release versions and nightly snapshot version. It is almost certainly the best way to go if you are somewhat familiar with maven and want to program against MATSim (i.e. use matsim as a library).","title":"MATSim Example Project"},{"location":"content/zz_archive/matsim-example-project/#matsim-example-project","text":"There is a MATSim example project on GitHub . It allows to use all of the matsim main distribution as well as the contribs as maven-includes. The setup allows both release versions and nightly snapshot version. It is almost certainly the best way to go if you are somewhat familiar with maven and want to program against MATSim (i.e. use matsim as a library).","title":"MATSim Example Project"},{"location":"content/zz_archive/quickstart/","text":"Quickstart \u00b6 (0) Download the release and unzip it. (1) Go the the directory where you find matsim-*.jar . (2) Double click on the MATSim jar file. What opens is what we call the MATSim GUI. Then type (if you opened the directory on explorer you need to open the command line and type the following command in there) java -Xmx2000m -cp matsim-0.7.0.jar org.matsim.run.Controler examples/tutorial/config/example5-config.xml This should produce a new output directory. Meaning of the parameters: -Xmx2000m : Increases the Java heap space to 2000MB of memory. If you have less memory, try smaller values, but the Java default is too small. -cp matsim-0.7.0.jar : The jar file (Java library) which contains MATSim. The release number of the jar file you downloaded might be different from the one in this example (0.7.0), so make sure you type in a release number that corresponds to the version you downloaded. org.matsim.run.Controler : The class where the main method for running \"iterations\" resides. ~~ ~~examples/tutorial/config/example5-config.xml : The xml file that contains all of the configuration of the run. The file can be edited. Note: if you run the above \"org.matsim.run.Controler\" line again, you first need to erase the contents of the output directory. (3) Now it is time to have a look at the output. When the simulation ran, many files were created in its output directory. Note that the GUI has a button to reach the output directory. One of the files is a so-called events file, typically generated for every 10th iteration. The events file for the first iteration is located in output/ITERS/it.0/run0.0.events.xml.gz . This contains a lot of information that can be visualized. Now, when you start the visualizer (called Via, a free version is available for download , you should see a large, black area. This is where the traffic will be visualized. On the left side of this area, you see a smaller area with 4 icons on the top (\"Controls\"). Click the first icon (Data Sources). Now you can either drag and drop files into this section (e.g. a network.xml , or events.xml.gz ), or click the \"+\" at the bottom to select a file to be added. Use either option to add first network.xml to the list of available data and then events.xml.gz . Now the visualizer knows about our data, and we can tell it how to visualize it. Next, click on the second icon (\"Layers\") in the Controls section. Initially, you will see only the background layer listed. Click on the '+' to select the data you want to have displayed. It should already suggest to visualize the network with the loaded network.xml , so just click \"Add\". After a short moment, the network should be shown in the visualization area. Click the '+' again, but this time choose Vehicles as layer type. The events.xml.gz file will be already pre-selected. Click on \"Add\". As any layer depending on the events, a \"Load Data\" button will appear at the bottom of the layer tag. Click it to extract the vehicles' positions from the events. (4) The logfile, with the above example in output/example5/logfile.log contains, between a lot of other information, also a dump of a the full matsim configuration. If there are interesting parameters, you could try to copy then into your own config file, modify them, and re-run. In my (kn's) view, one can actually get quite far in this way, i.e. by just editing the config file. The main problem is how to obtain the network and in particular the so-called initial demand for your own scenario. If you can't get that from somewhere else, it is probably better to go through the tutorial.","title":"Quickstart"},{"location":"content/zz_archive/quickstart/#quickstart","text":"(0) Download the release and unzip it. (1) Go the the directory where you find matsim-*.jar . (2) Double click on the MATSim jar file. What opens is what we call the MATSim GUI. Then type (if you opened the directory on explorer you need to open the command line and type the following command in there) java -Xmx2000m -cp matsim-0.7.0.jar org.matsim.run.Controler examples/tutorial/config/example5-config.xml This should produce a new output directory. Meaning of the parameters: -Xmx2000m : Increases the Java heap space to 2000MB of memory. If you have less memory, try smaller values, but the Java default is too small. -cp matsim-0.7.0.jar : The jar file (Java library) which contains MATSim. The release number of the jar file you downloaded might be different from the one in this example (0.7.0), so make sure you type in a release number that corresponds to the version you downloaded. org.matsim.run.Controler : The class where the main method for running \"iterations\" resides. ~~ ~~examples/tutorial/config/example5-config.xml : The xml file that contains all of the configuration of the run. The file can be edited. Note: if you run the above \"org.matsim.run.Controler\" line again, you first need to erase the contents of the output directory. (3) Now it is time to have a look at the output. When the simulation ran, many files were created in its output directory. Note that the GUI has a button to reach the output directory. One of the files is a so-called events file, typically generated for every 10th iteration. The events file for the first iteration is located in output/ITERS/it.0/run0.0.events.xml.gz . This contains a lot of information that can be visualized. Now, when you start the visualizer (called Via, a free version is available for download , you should see a large, black area. This is where the traffic will be visualized. On the left side of this area, you see a smaller area with 4 icons on the top (\"Controls\"). Click the first icon (Data Sources). Now you can either drag and drop files into this section (e.g. a network.xml , or events.xml.gz ), or click the \"+\" at the bottom to select a file to be added. Use either option to add first network.xml to the list of available data and then events.xml.gz . Now the visualizer knows about our data, and we can tell it how to visualize it. Next, click on the second icon (\"Layers\") in the Controls section. Initially, you will see only the background layer listed. Click on the '+' to select the data you want to have displayed. It should already suggest to visualize the network with the loaded network.xml , so just click \"Add\". After a short moment, the network should be shown in the visualization area. Click the '+' again, but this time choose Vehicles as layer type. The events.xml.gz file will be already pre-selected. Click on \"Add\". As any layer depending on the events, a \"Load Data\" button will appear at the bottom of the layer tag. Click it to extract the vehicles' positions from the events. (4) The logfile, with the above example in output/example5/logfile.log contains, between a lot of other information, also a dump of a the full matsim configuration. If there are interesting parameters, you could try to copy then into your own config file, modify them, and re-run. In my (kn's) view, one can actually get quite far in this way, i.e. by just editing the config file. The main problem is how to obtain the network and in particular the so-called initial demand for your own scenario. If you can't get that from somewhere else, it is probably better to go through the tutorial.","title":"Quickstart"},{"location":"contributing/","text":"Contributing / Writing Code \u00b6 The most important rules: Committed Code must compile with Java 8 (current system requirements by MATSim) Only commit to your personal playground, unless you are a contrib maintainer or you have been given the rights to commit in other locations. The following sections contain more information for writing code for MATSim: Coding Conventions Naming Conventions Committing to the Repository Data in the source repository Configuration conventions Documenting your code IDE Configuration Java-related Information MATSim Extensions Prefer composition / delegation over inheritance Using Generics","title":"Contributing / Writing Code"},{"location":"contributing/#contributing-writing-code","text":"The most important rules: Committed Code must compile with Java 8 (current system requirements by MATSim) Only commit to your personal playground, unless you are a contrib maintainer or you have been given the rights to commit in other locations. The following sections contain more information for writing code for MATSim: Coding Conventions Naming Conventions Committing to the Repository Data in the source repository Configuration conventions Documenting your code IDE Configuration Java-related Information MATSim Extensions Prefer composition / delegation over inheritance Using Generics","title":"Contributing / Writing Code"},{"location":"contributing/extensions/","text":"Important Note \u00b6 The following text is no longer up to date and needs to be revised. We now say that \"extensions\" is everything that extends MATSim, but there are three categories of extensions: \"extensions which are part of the MATSim main distribution \"contribs\", which are outside the MATSim main distribution, but inside the MATSim main repository \"other extensions\", which are maintained outside the MATSim main repository. This category again splits into two subcategories extensions hosted at github.com/matsim-org but not in the MATSim main repository other extensions. VIA is the most prominent example here. So please read the following text with care; quite often it says \"extension\" but means \"contrib\". Introduction \u00b6 As a lot of functionality in MATSim is created by PhD students, there is often a problem maintaining this functionality after the respective students finished their work and leave university. In order to better communicate which features are \"standard MATSim\" which will (and have to) be maintained by the MATSim core developers, and which features are just \"single-developer functionality\", MATSim introduces the concept of \" MATSim core \" and \" MATSim extensions \". The core will be maintained by the core developers, and should contain central functionality which is likely to stay in MATSim forever. Extensions can provide new, but stable, functionality developed to solve specific problems which can be of interest to others in the MATSim community. Extensions will\u2014as long as they compile and pass all tests\u2014also be packaged for releases and be thus optional parts of MATSim releases. This requires that extensions follow certain guidelines, also in order to keep code maintenance and user support in reasonable bounds. Requirements \u00b6 You feel responsible for your extension Document the functionality of your extension Document the usage of your extension. This documentation should cover topics like (a) How to use it, (b) How to configure it, (c) if it has any special system requirements, (d) optionally have a small tutorial with sample data to demonstrate the functionality. If your code offers one or more main classes, make sure to provide useful error message to the user in the case the user submits no or wrong arguments If your code offers functionality to other code (e.g. special algorithms and data structures), such classes/interfaces should be well-documented using Javadoc comments. You will maintain the code in the case that some updates in MATSim-Core break some functionality in your extension You are wiling to assist interested users in the case something is not working as described by your documentation. Creating your own extension \u00b6 Create the code in your playground or private repository Make sure you meet the code requirements outline above Talk to a member of the MATSim committee to request a new contrib-project for your code. If the committee agrees to your request, they will create a contrib-project for you, where you can move your code to. Write documentation about your extension to comply with the above-mentioned documentation requirements. Once all the code and documentation requirements are met, your extension will be included in future releases and nightly builds will be created for it. Documenting extensions in the contrib section \u00b6 Extensions in the contrib section are stand-alone documentations. The entry points are under matsim.org/javadoc . Always please do the following: Provide an example \"script in java\" with a name RunXxx somewhere inside that extension package, and add documentation to enable others to use it. Also see How to provide coding examples ? Additional options depend on personal style. Some options are Populate src/main/javadoc/overview.html with html text. Look at at the minibus contrib for an example. The content will show up at the entry point of the documentation. Javadoc can link into the listing by something like <a href=\"{@docRoot}/src-html/org/matsim/contrib/emissions/example/RunEmissionToolOnlineExample.html\">here</a> into the java source listing.","title":"MATSim Extensions"},{"location":"contributing/extensions/#important-note","text":"The following text is no longer up to date and needs to be revised. We now say that \"extensions\" is everything that extends MATSim, but there are three categories of extensions: \"extensions which are part of the MATSim main distribution \"contribs\", which are outside the MATSim main distribution, but inside the MATSim main repository \"other extensions\", which are maintained outside the MATSim main repository. This category again splits into two subcategories extensions hosted at github.com/matsim-org but not in the MATSim main repository other extensions. VIA is the most prominent example here. So please read the following text with care; quite often it says \"extension\" but means \"contrib\".","title":"Important Note"},{"location":"contributing/extensions/#introduction","text":"As a lot of functionality in MATSim is created by PhD students, there is often a problem maintaining this functionality after the respective students finished their work and leave university. In order to better communicate which features are \"standard MATSim\" which will (and have to) be maintained by the MATSim core developers, and which features are just \"single-developer functionality\", MATSim introduces the concept of \" MATSim core \" and \" MATSim extensions \". The core will be maintained by the core developers, and should contain central functionality which is likely to stay in MATSim forever. Extensions can provide new, but stable, functionality developed to solve specific problems which can be of interest to others in the MATSim community. Extensions will\u2014as long as they compile and pass all tests\u2014also be packaged for releases and be thus optional parts of MATSim releases. This requires that extensions follow certain guidelines, also in order to keep code maintenance and user support in reasonable bounds.","title":"Introduction"},{"location":"contributing/extensions/#requirements","text":"You feel responsible for your extension Document the functionality of your extension Document the usage of your extension. This documentation should cover topics like (a) How to use it, (b) How to configure it, (c) if it has any special system requirements, (d) optionally have a small tutorial with sample data to demonstrate the functionality. If your code offers one or more main classes, make sure to provide useful error message to the user in the case the user submits no or wrong arguments If your code offers functionality to other code (e.g. special algorithms and data structures), such classes/interfaces should be well-documented using Javadoc comments. You will maintain the code in the case that some updates in MATSim-Core break some functionality in your extension You are wiling to assist interested users in the case something is not working as described by your documentation.","title":"Requirements"},{"location":"contributing/extensions/#creating-your-own-extension","text":"Create the code in your playground or private repository Make sure you meet the code requirements outline above Talk to a member of the MATSim committee to request a new contrib-project for your code. If the committee agrees to your request, they will create a contrib-project for you, where you can move your code to. Write documentation about your extension to comply with the above-mentioned documentation requirements. Once all the code and documentation requirements are met, your extension will be included in future releases and nightly builds will be created for it.","title":"Creating your own extension"},{"location":"contributing/extensions/#documenting-extensions-in-the-contrib-section","text":"Extensions in the contrib section are stand-alone documentations. The entry points are under matsim.org/javadoc . Always please do the following: Provide an example \"script in java\" with a name RunXxx somewhere inside that extension package, and add documentation to enable others to use it. Also see How to provide coding examples ? Additional options depend on personal style. Some options are Populate src/main/javadoc/overview.html with html text. Look at at the minibus contrib for an example. The content will show up at the entry point of the documentation. Javadoc can link into the listing by something like <a href=\"{@docRoot}/src-html/org/matsim/contrib/emissions/example/RunEmissionToolOnlineExample.html\">here</a> into the java source listing.","title":"Documenting extensions in the contrib section"},{"location":"devguide/build-release/","text":"Building a (personal / nightly) release \u00b6 Note: We are currently deprecating the concept of playgrounds. If you are a new MATSim user, please use MATSim as a regular Java library, and package your package as you would package any other package. The following information gives instructions how to package a playground with its dependencies, often used to upload it to another machine to execute a compute job. Playgrounds are subfolders in a shared repository, where people host their custom projects. Creating a release of a playground \u00b6 Prerequisite: Make sure you have the file assembly-release.xml in your playground at src/main/assembly . If you are missing this file, you can copy it from playgrounds/_template/src/main/assembly . # install matsim, contribs and playgrounds to local maven repository # (from matsim repository root directory) mvn clean mvn install -DskipTests=true # from your playground mvn clean mvn -Prelease -DskipTests=true This will create a file myPlayground-0.x.0-SNAPSHOT-r#####.zip in your contrib's or playground's target directory containing the release. Unzip it to use it. Verification for Contrib and Playgrounds \u00b6 calling java -cp myplayground.jar org.matsim.run.ReleaseInfo should show some useful build information (revision number and timestamp). Running your code from the release \u00b6 If you unzip the created release-zip-file, you'll find a jar-file of your contrib/playground, and a \"libs\" directory. To run your code, simple call java -cp myplayground.jar playground.myPlayground.my.MainClass arg1 arg2 arg3 (naturally, replacing the filename, classname and actual arguments with correct values). Notes \u00b6 The Manifest for the release-jars may be special and must be configured in the plugin-configuration in the pom, thus the release profile ( -Prelease ) is used for the generation of the final zip. This is also the reason why it is important to clean before building the release, as Maven might not recompile the jar when just the profile changes, leading to missing entries in the Manifest of the packaged jar-file. To see the content of the generated zip file, use the following command to unzip it: unzip target/matsim-0.x.0-SNAPSHOT-release.zip -d target/release Adding revision information and timestamp is possible with the buildnumber-plugin, but it needs quite some customization. Using the buildnumber-properties in filtered files seems only to work if the buildnumber-plugin is NOT configured in a profile, but in the main part of the pom.","title":"Build a release"},{"location":"devguide/build-release/#building-a-personal-nightly-release","text":"Note: We are currently deprecating the concept of playgrounds. If you are a new MATSim user, please use MATSim as a regular Java library, and package your package as you would package any other package. The following information gives instructions how to package a playground with its dependencies, often used to upload it to another machine to execute a compute job. Playgrounds are subfolders in a shared repository, where people host their custom projects.","title":"Building a (personal / nightly) release"},{"location":"devguide/build-release/#creating-a-release-of-a-playground","text":"Prerequisite: Make sure you have the file assembly-release.xml in your playground at src/main/assembly . If you are missing this file, you can copy it from playgrounds/_template/src/main/assembly . # install matsim, contribs and playgrounds to local maven repository # (from matsim repository root directory) mvn clean mvn install -DskipTests=true # from your playground mvn clean mvn -Prelease -DskipTests=true This will create a file myPlayground-0.x.0-SNAPSHOT-r#####.zip in your contrib's or playground's target directory containing the release. Unzip it to use it.","title":"Creating a release of a playground"},{"location":"devguide/build-release/#verification-for-contrib-and-playgrounds","text":"calling java -cp myplayground.jar org.matsim.run.ReleaseInfo should show some useful build information (revision number and timestamp).","title":"Verification for Contrib and Playgrounds"},{"location":"devguide/build-release/#running-your-code-from-the-release","text":"If you unzip the created release-zip-file, you'll find a jar-file of your contrib/playground, and a \"libs\" directory. To run your code, simple call java -cp myplayground.jar playground.myPlayground.my.MainClass arg1 arg2 arg3 (naturally, replacing the filename, classname and actual arguments with correct values).","title":"Running your code from the release"},{"location":"devguide/build-release/#notes","text":"The Manifest for the release-jars may be special and must be configured in the plugin-configuration in the pom, thus the release profile ( -Prelease ) is used for the generation of the final zip. This is also the reason why it is important to clean before building the release, as Maven might not recompile the jar when just the profile changes, leading to missing entries in the Manifest of the packaged jar-file. To see the content of the generated zip file, use the following command to unzip it: unzip target/matsim-0.x.0-SNAPSHOT-release.zip -d target/release Adding revision information and timestamp is possible with the buildnumber-plugin, but it needs quite some customization. Using the buildnumber-properties in filtered files seems only to work if the buildnumber-plugin is NOT configured in a profile, but in the main part of the pom.","title":"Notes"},{"location":"devguide/commit-rules/","text":"Commit Rules \u00b6 Code to be committed must compile. Use UTF-8 as file encoding. Otherwise it may not compile on all machines. By default, only commit to your personal contrib . Do not commit to org.matsim.* unless you are the maintainer of a package/module in org.matsim.* . Create Pull-Requests for changes in org.matsim.* . Do not directly commit to org.matsim.* , but create a pull request with the changes you want to apply. Write your commit messages in English. Write useful commit messages. A short header line, followed by a blank line, followed by text explaining the change is standard Git practice. Do not commit personal data (=non-code) files to the repository. Exception is data for test cases, which must be committed to test/input/* . See the detailed discussion of this topic.","title":"Commit rules"},{"location":"devguide/commit-rules/#commit-rules","text":"Code to be committed must compile. Use UTF-8 as file encoding. Otherwise it may not compile on all machines. By default, only commit to your personal contrib . Do not commit to org.matsim.* unless you are the maintainer of a package/module in org.matsim.* . Create Pull-Requests for changes in org.matsim.* . Do not directly commit to org.matsim.* , but create a pull request with the changes you want to apply. Write your commit messages in English. Write useful commit messages. A short header line, followed by a blank line, followed by text explaining the change is standard Git practice. Do not commit personal data (=non-code) files to the repository. Exception is data for test cases, which must be committed to test/input/* . See the detailed discussion of this topic.","title":"Commit Rules"},{"location":"devguide/configuration-conventions/","text":"Configuration Conventions \u00b6 For non-programmers, MATSim is configured via the config file. (For extensions, we have not yet found a good solution.) If you make your code configurable, please observe the following hints. Avoid automagic \u00b6 Examples for automagic are: If the code finds a file of a certain type, then do something special. If the code finds a config module of a certain type, then do something special. If some values are overwritten then some other values are cleared. The problem with such automagic is that it is nearly impossible to write code that is robust against typoes. As a result, one gets warnings such as \"File of certain type not found, thus assuming ...\" (This may either be a deliberate user decision, or a typo on the filename.) \"Config module of a certain type not found, thus assuming ...\" (This may either be a deliberate user decision, or a type in the module name.) \"Config module of a certain type found, thus assuming ...\" (This may be a leftover module from some other experiments.) \"When you are overwriting value X please remember that this also affects values Y and Z.\" (Which may be what the user wants, or not.) If a user is not able to switch off warnings, she or he will eventually start to ignore them. Which is not good. In that sense: Avoid warnings that cannot be switched off \u00b6 If a user is not able to switch off warnings, she or he will eventually start to ignore them. Two aspects: Automagic should be avoided (see above). If the user is doing something non-standard/not-recommended, this may lead to a warning. It would make sense to provide a switch to disable such warnings. (Makes the configuration file a lot longer, though.)","title":"Configuration conventions"},{"location":"devguide/configuration-conventions/#configuration-conventions","text":"For non-programmers, MATSim is configured via the config file. (For extensions, we have not yet found a good solution.) If you make your code configurable, please observe the following hints.","title":"Configuration Conventions"},{"location":"devguide/configuration-conventions/#avoid-automagic","text":"Examples for automagic are: If the code finds a file of a certain type, then do something special. If the code finds a config module of a certain type, then do something special. If some values are overwritten then some other values are cleared. The problem with such automagic is that it is nearly impossible to write code that is robust against typoes. As a result, one gets warnings such as \"File of certain type not found, thus assuming ...\" (This may either be a deliberate user decision, or a typo on the filename.) \"Config module of a certain type not found, thus assuming ...\" (This may either be a deliberate user decision, or a type in the module name.) \"Config module of a certain type found, thus assuming ...\" (This may be a leftover module from some other experiments.) \"When you are overwriting value X please remember that this also affects values Y and Z.\" (Which may be what the user wants, or not.) If a user is not able to switch off warnings, she or he will eventually start to ignore them. Which is not good. In that sense:","title":"Avoid automagic"},{"location":"devguide/configuration-conventions/#avoid-warnings-that-cannot-be-switched-off","text":"If a user is not able to switch off warnings, she or he will eventually start to ignore them. Two aspects: Automagic should be avoided (see above). If the user is doing something non-standard/not-recommended, this may lead to a warning. It would make sense to provide a switch to disable such warnings. (Makes the configuration file a lot longer, though.)","title":"Avoid warnings that cannot be switched off"},{"location":"devguide/conventions/","text":"Coding Conventions \u00b6 For a project the size of MATSim, we need a minimal set of guidelines to insure the stability of MATSim and enable its further development. We try to keep this list as short as possible. We try to follow the Java Code Conventions This includes the Naming Conventions (Classes start with capital letters, variables with lowercase letters, ...), the usage of braces in if statements and other stuff. A notable exception are line lengths (we have no problem with lines up to 132 characters). Also, source code should only contain ASCII characters in code. Non-ascii in comments are ok; non-ascii in Strings should be avoided but sometimes cannot (e.g. file readers). More detailed Naming Conventions for MATSim are also available. Indentation MATSim Source code is indented with tabs, not spaces. Code is consistent and compiles! Code committed to the repository has to compile - always. If you want to try out some stuff, do it somewhere else or do not commit it. Classes in org.matsim.* do not reference other classes outside of the org.matsim.* -package except for classes provided by third-party libraries. Especially, org.matsim.* -classes must not reference tutorial and contrib -classes. All our code files have the MATSim-specific GPL-Header In Eclipse, you could add the header to the code template, so every new Java file has this header set by default. To do this, go to the global Preferences in Eclipse (Menu: Window > Preferences), navigate to Java > Code Style > Code Templates. Choose \"Code > New Java files\" and click on \"Edit...\". Paste there the following text: /* *********************************************************************** * * project: org.matsim.* * *********************************************************************** * * * * copyright : (C) ${ year } by the members listed in the COPYING, * * LICENSE and WARRANTY file. * * email : info at matsim dot org * * * * *********************************************************************** * * * * This program is free software; you can redistribute it and/or modify * * it under the terms of the GNU General Public License as published by * * the Free Software Foundation; either version 2 of the License, or * * (at your option) any later version. * * See also COPYING, LICENSE and WARRANTY file * * * * *********************************************************************** */ ${ filecomment } ${ package_declaration } ${ typecomment } ${ type_declaration } We use meaningful commit-messages Commit messages help to rule out quickly some revision of a file when looking for specific changes that, for example, may have introduced a bug in the code. Useless or empty commit messages make it more cumbersome, as the file itself must be looked at in each revision. Additionally, we write commit-messages (as well as comments in the code) in English, as development takes place in many different areas, and not only in german-speaking Countries. Do not commit personal test-data Use another repository if you want to version your personal test-data. We often work with data we are not allowed to share, and our code repository is open to anyone. It is a bad idea to store test-data in this repository, because sooner or later somebody will commit confidental data to the repository which cannot be removed! Some simple test-data is available in the directory examples , which is maintained by the core developers \u2013 please contact them if you want to add your own examples to this directory.","title":"Conventions"},{"location":"devguide/conventions/#coding-conventions","text":"For a project the size of MATSim, we need a minimal set of guidelines to insure the stability of MATSim and enable its further development. We try to keep this list as short as possible. We try to follow the Java Code Conventions This includes the Naming Conventions (Classes start with capital letters, variables with lowercase letters, ...), the usage of braces in if statements and other stuff. A notable exception are line lengths (we have no problem with lines up to 132 characters). Also, source code should only contain ASCII characters in code. Non-ascii in comments are ok; non-ascii in Strings should be avoided but sometimes cannot (e.g. file readers). More detailed Naming Conventions for MATSim are also available. Indentation MATSim Source code is indented with tabs, not spaces. Code is consistent and compiles! Code committed to the repository has to compile - always. If you want to try out some stuff, do it somewhere else or do not commit it. Classes in org.matsim.* do not reference other classes outside of the org.matsim.* -package except for classes provided by third-party libraries. Especially, org.matsim.* -classes must not reference tutorial and contrib -classes. All our code files have the MATSim-specific GPL-Header In Eclipse, you could add the header to the code template, so every new Java file has this header set by default. To do this, go to the global Preferences in Eclipse (Menu: Window > Preferences), navigate to Java > Code Style > Code Templates. Choose \"Code > New Java files\" and click on \"Edit...\". Paste there the following text: /* *********************************************************************** * * project: org.matsim.* * *********************************************************************** * * * * copyright : (C) ${ year } by the members listed in the COPYING, * * LICENSE and WARRANTY file. * * email : info at matsim dot org * * * * *********************************************************************** * * * * This program is free software; you can redistribute it and/or modify * * it under the terms of the GNU General Public License as published by * * the Free Software Foundation; either version 2 of the License, or * * (at your option) any later version. * * See also COPYING, LICENSE and WARRANTY file * * * * *********************************************************************** */ ${ filecomment } ${ package_declaration } ${ typecomment } ${ type_declaration } We use meaningful commit-messages Commit messages help to rule out quickly some revision of a file when looking for specific changes that, for example, may have introduced a bug in the code. Useless or empty commit messages make it more cumbersome, as the file itself must be looked at in each revision. Additionally, we write commit-messages (as well as comments in the code) in English, as development takes place in many different areas, and not only in german-speaking Countries. Do not commit personal test-data Use another repository if you want to version your personal test-data. We often work with data we are not allowed to share, and our code repository is open to anyone. It is a bad idea to store test-data in this repository, because sooner or later somebody will commit confidental data to the repository which cannot be removed! Some simple test-data is available in the directory examples , which is maintained by the core developers \u2013 please contact them if you want to add your own examples to this directory.","title":"Coding Conventions"},{"location":"devguide/custom-gui/","text":"Build a custom GUI runner \u00b6 Since version 0.8.0, MATSim comes with a simple GUI that starts upon double-clicking the matsim.jar file. The GUI requests a config file, and then lets users run a simulation by starting org.matsim.run.Controler with the specified config file as argument. Contribs are able to re-use the GUI infrastructure to provide a version of the GUI that starts their own, specialized Controler. How to create a GUI that runs a special class \u00b6 Prepare your main class that should be started to run your simulation: public class MySuperSimulation { public static void main ( String [] args ) { String configFilename = args [ 0 ] ; Controler controler = new Controler () ; // setup controler or do other custom stuff controler . run ( configFilename ) ; } } Create a new class, acting as the main class when double-clicking the jar-file. This class essentially only runs one command to start the GUI and specifies which main class should be started by the GUI: import org.matsim.run.gui.Gui ; public class MySuperSimulationGUI { public static void main ( String [] args ) { Gui . show ( \"MATSim: My Super Simulation\" , MySuperSimulation . class ); } } Modify the pom.xml in your contrib to include the following settings. Make sure to specify the correct class name for your GUI class. <build> <plugins> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-jar-plugin </artifactId> <configuration> <archive> <manifest> <mainClass> org.matsim.contribs.mySuperContrib.MySuperSimulationGUI </mainClass> </manifest> </archive> </configuration> </plugin> </plugins> </build> And then, build a release. First, make sure that all required dependencies (including MATSim-core) are maven-installed, e.g. do mvn install -DskipTests=true for all required dependencies. Then change to the directory of your project, e.g. cd /path/to/matsim/contribs/mySuperContrib/ . Perform a Maven clean ( mvn clean ) first, followed by mvn -Prelease -DskipTests=true . This will result in a zip file in the target-directory which includes the clickable jar-file.","title":"Custom GUI"},{"location":"devguide/custom-gui/#build-a-custom-gui-runner","text":"Since version 0.8.0, MATSim comes with a simple GUI that starts upon double-clicking the matsim.jar file. The GUI requests a config file, and then lets users run a simulation by starting org.matsim.run.Controler with the specified config file as argument. Contribs are able to re-use the GUI infrastructure to provide a version of the GUI that starts their own, specialized Controler.","title":"Build a custom GUI runner"},{"location":"devguide/custom-gui/#how-to-create-a-gui-that-runs-a-special-class","text":"Prepare your main class that should be started to run your simulation: public class MySuperSimulation { public static void main ( String [] args ) { String configFilename = args [ 0 ] ; Controler controler = new Controler () ; // setup controler or do other custom stuff controler . run ( configFilename ) ; } } Create a new class, acting as the main class when double-clicking the jar-file. This class essentially only runs one command to start the GUI and specifies which main class should be started by the GUI: import org.matsim.run.gui.Gui ; public class MySuperSimulationGUI { public static void main ( String [] args ) { Gui . show ( \"MATSim: My Super Simulation\" , MySuperSimulation . class ); } } Modify the pom.xml in your contrib to include the following settings. Make sure to specify the correct class name for your GUI class. <build> <plugins> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-jar-plugin </artifactId> <configuration> <archive> <manifest> <mainClass> org.matsim.contribs.mySuperContrib.MySuperSimulationGUI </mainClass> </manifest> </archive> </configuration> </plugin> </plugins> </build> And then, build a release. First, make sure that all required dependencies (including MATSim-core) are maven-installed, e.g. do mvn install -DskipTests=true for all required dependencies. Then change to the directory of your project, e.g. cd /path/to/matsim/contribs/mySuperContrib/ . Perform a Maven clean ( mvn clean ) first, followed by mvn -Prelease -DskipTests=true . This will result in a zip file in the target-directory which includes the clickable jar-file.","title":"How to create a GUI that runs a special class"},{"location":"devguide/data-in-source-repository/","text":"Data in the Source Reporsitory \u00b6 Some questions occurred about committing data to the MATSim project. To clarify what kind of data is allowed to commit and where to put it, here a short guideline: Only commit source files in src and its subdirectories. Do not commit any data files under src ! If you need to use data during the development and you want to keep that data on a save place, please use internal storages of you institution (e.g. internal SVN/Git repositories, internal shared folders, etc.) When you write JUnit test cases under test/src , you are allowed to add required data to test/input or test/scenario . Then please follow the following constraints: Use\u2014if possible\u2014already existing scenario data sets in test/scenario . Add only small data sets (some KBytes to max. 2 MBytes) to test/input or test/scenario . Note that bigger files may be compressed with gzip since MATSim supports reading and writing gzipped files with org.matsim.utils.io.IOUtils.getBufferedReader() and IOUtils.getBufferedWriter() respectively. Use artificial or falsified data in test cases and put them under test/input or test/scenario .","title":"Data in source repository"},{"location":"devguide/data-in-source-repository/#data-in-the-source-reporsitory","text":"Some questions occurred about committing data to the MATSim project. To clarify what kind of data is allowed to commit and where to put it, here a short guideline: Only commit source files in src and its subdirectories. Do not commit any data files under src ! If you need to use data during the development and you want to keep that data on a save place, please use internal storages of you institution (e.g. internal SVN/Git repositories, internal shared folders, etc.) When you write JUnit test cases under test/src , you are allowed to add required data to test/input or test/scenario . Then please follow the following constraints: Use\u2014if possible\u2014already existing scenario data sets in test/scenario . Add only small data sets (some KBytes to max. 2 MBytes) to test/input or test/scenario . Note that bigger files may be compressed with gzip since MATSim supports reading and writing gzipped files with org.matsim.utils.io.IOUtils.getBufferedReader() and IOUtils.getBufferedWriter() respectively. Use artificial or falsified data in test cases and put them under test/input or test/scenario .","title":"Data in the Source Reporsitory"},{"location":"devguide/development-environment/","text":"Getting and Building the Code \u00b6 In addition to the resources listed below, the Downloads page contains additional information about getting the source code of MATSim. Most people will only need the information in \"Using Eclipse\". Using Eclipse Build a custom GUI runner Run Eclipse with a JDK Working behind a Proxy","title":"Development environment"},{"location":"devguide/development-environment/#getting-and-building-the-code","text":"In addition to the resources listed below, the Downloads page contains additional information about getting the source code of MATSim. Most people will only need the information in \"Using Eclipse\". Using Eclipse Build a custom GUI runner Run Eclipse with a JDK Working behind a Proxy","title":"Getting and Building the Code"},{"location":"devguide/documenting-your-code/","text":"Documenting your Code \u00b6 Every public class should have the following items: For every class, a statement what it is meant for. For every class, a very rough description of what it does. For every class, the author should be specified with the @author-tag All these items should be written in a Javadoc block atop of the class.","title":"Documenting your code"},{"location":"devguide/documenting-your-code/#documenting-your-code","text":"Every public class should have the following items: For every class, a statement what it is meant for. For every class, a very rough description of what it does. For every class, the author should be specified with the @author-tag All these items should be written in a Javadoc block atop of the class.","title":"Documenting your Code"},{"location":"devguide/ide-configuration/","text":"IDE Configuration \u00b6 MATSim is developed by several persons on different platforms. So we need a basic set of settings to work successfully together. Namely, source code files should use UTF-8 as encoding and Unix-style line endings. Eclipse \u00b6 Text File Encoding \u00b6 In the Eclipse Preferences, please set the Text File Encoding to \"UTF-8\", and the New Text File Line Delimiter to \"Unix\" (in General > Workspace).","title":"IDE configuration"},{"location":"devguide/ide-configuration/#ide-configuration","text":"MATSim is developed by several persons on different platforms. So we need a basic set of settings to work successfully together. Namely, source code files should use UTF-8 as encoding and Unix-style line endings.","title":"IDE Configuration"},{"location":"devguide/ide-configuration/#eclipse","text":"","title":"Eclipse"},{"location":"devguide/ide-configuration/#text-file-encoding","text":"In the Eclipse Preferences, please set the Text File Encoding to \"UTF-8\", and the New Text File Line Delimiter to \"Unix\" (in General > Workspace).","title":"Text File Encoding"},{"location":"devguide/java/","text":"Java-related information \u00b6 MATSim is written in Java. While Java is widely known, from time to time we stumble over certain features or specialities we'd like to highlight. This is the place to collect interesting and informative stuff about Java which might (or might not) have some relation to our code. Problems with HashMap, HashSet and Iterator \u00b6 HashSet and HashMap do not specify in which order elements are iterated, possibly resulting in different results if the same code is run multiple times. This can lead to tests that randomly fail, further making debugging very hard. Use LinkedHashSet/LinkedHashMap instead. Those can be iterated over insertion order, leading to deterministic behavior. Random Numbers \u00b6 Introduction to random numbers \u00b6 Our simulations depend heavily on random numbers. But despite using random numbers, we still want the simulations to be deterministic, so that results can be reproduced by running the same scenario a second time. Usually, random numbers in Java are generated by calling Math.random() : double d = Math . random () ; While this method returns a random number, the number is indeed random such as that in a second run of the same scenario, other random numbers would result and the simulation would no longer be deterministic. To overcome this problem, an instance of java.util.Random can be generated and initialized with a custom random seed: Random random = new Random () ; random . setSeed ( 1234 ) ; ... double d = random . nextDouble () ; In this case, everytime the code is run, we get the same random numbers. As drawing random numbers is widely used in the code, MATSim offers a global instance of Random , which is automatically initialized with the seed specified in the configuration file: import org.matsim.core.gbl.MatsimRandom ; ... double d = MatsimRandom . random . nextDouble (); Choosing a random seed \u00b6 What value should be used as random seed? Is a value of 1 better than the value 86294 ? As both numbers have the same probability to be chosen in the range from 0 to Integer.MAX_VALUE , any value is equally good for a random seed. But this is only half of the story. We all know, that these random numbers are only pseudo-random\u2014and they depend on the chosen seed! Using Random numbers in PlanAlgorithms \u00b6 PlanAlgorithm s could be executed in parallel in multiple threads, e.g. during replanning. As the exact order of execution with multiple threads is not deterministic, the usage of MatsimRandom.random would lead to non-deterministic results. Instead, every instance of a PlanAlgorithm should have its own random number generator. The best way to realize that is that PlanAlgorithm s that use random numbers have a constructor where an object of type java.util.Random can be passed. When instantiating PlanAlgorithm s, one can use MatsimRandom.getLocalInstance() to obtain a Random -object that can be passed to the PlanAlgorithm . A Random object received by getLocalInstance() is already correctly initialized to return useful random numbers (see below). Problems when setting the random seed \u00b6 In our code, we set the random seed at the start of every iteration, so that we can restart a simulation at any iteration. The code was similar to the example code below: int baseSeed ; // the random seed specified in the configuration file ... for ( int iteration = 0 ; iteration < 1000; iteration++) { MatsimRandom . random . setSeed ( baseSeed + iteration ) ; ... } After running several iterations we realized that the first agent was never chosen for re-planning (remember, they get \"randomly\" chosen for re-planning). A little bit of research revealed that the first random number drawn after setting the random seed depends heavily on the random seed! Only a slight change in the random seed (in our case always +1 for each iteration) resulted in only a slight change in the value of the random number. The following figure shows the distribution of the first and second drawn random number after setting different random seeds. As can be clearly seen, the first drawn number only moves in a very small range. The second drawn numbers have a better distribution when the seed is only changed a little. distribution of random numbers with differrent random seed To overcome this problem, we decided that after setting a random seed, we draw one random number and immediately throw it away, as it seems not enough random.","title":"Java"},{"location":"devguide/java/#java-related-information","text":"MATSim is written in Java. While Java is widely known, from time to time we stumble over certain features or specialities we'd like to highlight. This is the place to collect interesting and informative stuff about Java which might (or might not) have some relation to our code.","title":"Java-related information"},{"location":"devguide/java/#problems-with-hashmap-hashset-and-iterator","text":"HashSet and HashMap do not specify in which order elements are iterated, possibly resulting in different results if the same code is run multiple times. This can lead to tests that randomly fail, further making debugging very hard. Use LinkedHashSet/LinkedHashMap instead. Those can be iterated over insertion order, leading to deterministic behavior.","title":"Problems with HashMap, HashSet and Iterator"},{"location":"devguide/java/#random-numbers","text":"","title":"Random Numbers"},{"location":"devguide/java/#introduction-to-random-numbers","text":"Our simulations depend heavily on random numbers. But despite using random numbers, we still want the simulations to be deterministic, so that results can be reproduced by running the same scenario a second time. Usually, random numbers in Java are generated by calling Math.random() : double d = Math . random () ; While this method returns a random number, the number is indeed random such as that in a second run of the same scenario, other random numbers would result and the simulation would no longer be deterministic. To overcome this problem, an instance of java.util.Random can be generated and initialized with a custom random seed: Random random = new Random () ; random . setSeed ( 1234 ) ; ... double d = random . nextDouble () ; In this case, everytime the code is run, we get the same random numbers. As drawing random numbers is widely used in the code, MATSim offers a global instance of Random , which is automatically initialized with the seed specified in the configuration file: import org.matsim.core.gbl.MatsimRandom ; ... double d = MatsimRandom . random . nextDouble ();","title":"Introduction to random numbers"},{"location":"devguide/java/#choosing-a-random-seed","text":"What value should be used as random seed? Is a value of 1 better than the value 86294 ? As both numbers have the same probability to be chosen in the range from 0 to Integer.MAX_VALUE , any value is equally good for a random seed. But this is only half of the story. We all know, that these random numbers are only pseudo-random\u2014and they depend on the chosen seed!","title":"Choosing a random seed"},{"location":"devguide/java/#using-random-numbers-in-planalgorithms","text":"PlanAlgorithm s could be executed in parallel in multiple threads, e.g. during replanning. As the exact order of execution with multiple threads is not deterministic, the usage of MatsimRandom.random would lead to non-deterministic results. Instead, every instance of a PlanAlgorithm should have its own random number generator. The best way to realize that is that PlanAlgorithm s that use random numbers have a constructor where an object of type java.util.Random can be passed. When instantiating PlanAlgorithm s, one can use MatsimRandom.getLocalInstance() to obtain a Random -object that can be passed to the PlanAlgorithm . A Random object received by getLocalInstance() is already correctly initialized to return useful random numbers (see below).","title":"Using Random numbers in PlanAlgorithms"},{"location":"devguide/java/#problems-when-setting-the-random-seed","text":"In our code, we set the random seed at the start of every iteration, so that we can restart a simulation at any iteration. The code was similar to the example code below: int baseSeed ; // the random seed specified in the configuration file ... for ( int iteration = 0 ; iteration < 1000; iteration++) { MatsimRandom . random . setSeed ( baseSeed + iteration ) ; ... } After running several iterations we realized that the first agent was never chosen for re-planning (remember, they get \"randomly\" chosen for re-planning). A little bit of research revealed that the first random number drawn after setting the random seed depends heavily on the random seed! Only a slight change in the random seed (in our case always +1 for each iteration) resulted in only a slight change in the value of the random number. The following figure shows the distribution of the first and second drawn random number after setting different random seeds. As can be clearly seen, the first drawn number only moves in a very small range. The second drawn numbers have a better distribution when the seed is only changed a little. distribution of random numbers with differrent random seed To overcome this problem, we decided that after setting a random seed, we draw one random number and immediately throw it away, as it seems not enough random.","title":"Problems when setting the random seed"},{"location":"devguide/naming-conventions/","text":"Naming Conventions \u00b6 We follow the Naming Conventions from Oracle's Java Code Conventions . Short version: Use CamelCase in general, with: Classes and Interfaces starting with uppercase letters Methods, packages and variables/members starting with lowercase letters Constants use all-uppercase letters together with underscores (\"_\"). Abbreviations should be avoided: getTravTime() >> getTravelTime() getDist() >> getDistance() Id is an abbreviation for Identifier, the 'd' is thus usually a lowercase letter. Factory methods are named create*() , e.g. createLink() . newLink() or other names should be avoided. Abstract classes should start with Abstract , e.g. AbstractPersonAlgorithm . Interfaces are not specially marked in their name, e.g. there is no pre- or suffix I like SomeInterfaceI . Default Implementations of interfaces end on Impl , if no more specific class-name is suitable, e.g. PlanImpl implements Plan .","title":"Naming conventions"},{"location":"devguide/naming-conventions/#naming-conventions","text":"We follow the Naming Conventions from Oracle's Java Code Conventions . Short version: Use CamelCase in general, with: Classes and Interfaces starting with uppercase letters Methods, packages and variables/members starting with lowercase letters Constants use all-uppercase letters together with underscores (\"_\"). Abbreviations should be avoided: getTravTime() >> getTravelTime() getDist() >> getDistance() Id is an abbreviation for Identifier, the 'd' is thus usually a lowercase letter. Factory methods are named create*() , e.g. createLink() . newLink() or other names should be avoided. Abstract classes should start with Abstract , e.g. AbstractPersonAlgorithm . Interfaces are not specially marked in their name, e.g. there is no pre- or suffix I like SomeInterfaceI . Default Implementations of interfaces end on Impl , if no more specific class-name is suitable, e.g. PlanImpl implements Plan .","title":"Naming Conventions"},{"location":"devguide/prefer-composition-and-delegation-over-inheritance/","text":"Prefer composition / delegation over inheritance \u00b6 Inheritance is not very robust \u00b6 There are numerous hints that inheritance is not very stable under refactoring; see, for example, Bloch, \"Effective Java\". The short version \u00b6 If you think you need to use inheritance, restrict it to a package. This can be achieved by making classes and methods only package-visible (no public/protected). Having it within a package makes the situation very local, and thus much better to manage. If you think you need to use inheritance beyond package limits, observe the following rule of thumb: Public or protected methods should be final or empty. (Which implies: If you are extending a class from elsewhere, you should make all of your public or protected methods final.) The long version \u00b6 The problem \u00b6 The problem has something to do with the sequence of program execution. Assume class Base { run () { partA (); partB (); } partA () { do1 (); do2 (); } partB () { do3 (); do4 (); } ... and some derived code class Derived extends Base { partA () { do1 (); doMyOwnStuff (); do2 (); } ... Now assume that the maintainer of the base class decides that do3() should be done before do2() . Thus (for example): class Base { ... partA () { do1 (); do3 (); do2 (); } partB () { do4 (); } ... Now the derived code will not execute do3() at all. One may argue that this is a consequence of bad design of the base class, e.g. that run() should call the doX() methods directly, or the designer should know beforehand in which sequence something needs to be done. In practice, these arguments do not work: Levels of abstraction are difficult to get right from the start; and there may be situations where sequences of execution originally do not matter, and when it later turns out that they matter, they may be in the wrong sequence. One may also argue that this is a consequence of bad design of the derived class, i.e. the programmer who overrides methods that have content should always call the super-method. That is class Derived extends Base { partA () { super . partA (); doMyOwnStuff (); } ... (Note that this is not the same thing as above.) However, the base class maintainers cannot enforce that class users (those who extend the base class) do this. One may argue that this is the problem of the class users, but in our setup test failures resulting from such issues are, as a tendency, the responsibility of the base class maintainer (since her or his code change broke the tests). Use delegation in Eclipse \u00b6 We therefore suggest to prefer composition (=delegation) over inheritance where this is possible. It is only possible when the class that one wants to inherit from implements an interface. In that case, the following is possible (with Eclipse): Write a class skeleton as follows: class MyClass implements XXXInterface { private XXXInterface delegate = new XXXImplementation (...); } In Eclipse, go to menu \"Source\"/\"Generate delegate methods\" and follow the instructions. [[Somebody please add a screenshot here. thanks. kai]] This will delegate all method calls to MyClass to the delegate. Now you can modify some of the delegate methods as you like. (This sometimes seems to provide less access than inheritance, but I don't think this is true as long as you assume that internal variables/fields are always private.) The typical example \u00b6 It is called \"composition\" since you can do this with more than one interface/delegate. The classical example is something like class MyCar implements HasSteering , HasBrakes , HasGears { private HasSteering steeringDelegate = new PowerSteering (...) ; private HasBrakes brakesDelegate = new SimpleBrakes (...) ; private HasGears gearsDelegate = new ElectronicGears (...) ; } where Eclipse's \"Generate delegate methods\" will produce methods such as public void steerToRight(double value) { steeringDelegate.steerToRight(value); } ... public void brake(double value) { brakesDelegate.brake(value); } As one can see, this now allows operations such as MyCar car ... ... car.brake(3.); car.steerToRight(0.3); that is, the car is now composed of its internals. Exposing the delegates \u00b6 In MATSim, we often expose the delegation, that is, the syntax is car.getBrakes().brake(3.); car.getSteering().steerToRight(0.3); This has the advantage that, if you extend the interfaces, you do not need to adapt every implementation. It is, clearly, not an option if you want to write a class (such as a PlanStrategy ) that is later inserted into the code \u2013 that has to fulfill the contract defined by the interface.","title":"Composition vs inheritance"},{"location":"devguide/prefer-composition-and-delegation-over-inheritance/#prefer-composition-delegation-over-inheritance","text":"","title":"Prefer composition / delegation over inheritance"},{"location":"devguide/prefer-composition-and-delegation-over-inheritance/#inheritance-is-not-very-robust","text":"There are numerous hints that inheritance is not very stable under refactoring; see, for example, Bloch, \"Effective Java\".","title":"Inheritance is not very robust"},{"location":"devguide/prefer-composition-and-delegation-over-inheritance/#the-short-version","text":"If you think you need to use inheritance, restrict it to a package. This can be achieved by making classes and methods only package-visible (no public/protected). Having it within a package makes the situation very local, and thus much better to manage. If you think you need to use inheritance beyond package limits, observe the following rule of thumb: Public or protected methods should be final or empty. (Which implies: If you are extending a class from elsewhere, you should make all of your public or protected methods final.)","title":"The short version"},{"location":"devguide/prefer-composition-and-delegation-over-inheritance/#the-long-version","text":"","title":"The long version"},{"location":"devguide/prefer-composition-and-delegation-over-inheritance/#the-problem","text":"The problem has something to do with the sequence of program execution. Assume class Base { run () { partA (); partB (); } partA () { do1 (); do2 (); } partB () { do3 (); do4 (); } ... and some derived code class Derived extends Base { partA () { do1 (); doMyOwnStuff (); do2 (); } ... Now assume that the maintainer of the base class decides that do3() should be done before do2() . Thus (for example): class Base { ... partA () { do1 (); do3 (); do2 (); } partB () { do4 (); } ... Now the derived code will not execute do3() at all. One may argue that this is a consequence of bad design of the base class, e.g. that run() should call the doX() methods directly, or the designer should know beforehand in which sequence something needs to be done. In practice, these arguments do not work: Levels of abstraction are difficult to get right from the start; and there may be situations where sequences of execution originally do not matter, and when it later turns out that they matter, they may be in the wrong sequence. One may also argue that this is a consequence of bad design of the derived class, i.e. the programmer who overrides methods that have content should always call the super-method. That is class Derived extends Base { partA () { super . partA (); doMyOwnStuff (); } ... (Note that this is not the same thing as above.) However, the base class maintainers cannot enforce that class users (those who extend the base class) do this. One may argue that this is the problem of the class users, but in our setup test failures resulting from such issues are, as a tendency, the responsibility of the base class maintainer (since her or his code change broke the tests).","title":"The problem"},{"location":"devguide/prefer-composition-and-delegation-over-inheritance/#use-delegation-in-eclipse","text":"We therefore suggest to prefer composition (=delegation) over inheritance where this is possible. It is only possible when the class that one wants to inherit from implements an interface. In that case, the following is possible (with Eclipse): Write a class skeleton as follows: class MyClass implements XXXInterface { private XXXInterface delegate = new XXXImplementation (...); } In Eclipse, go to menu \"Source\"/\"Generate delegate methods\" and follow the instructions. [[Somebody please add a screenshot here. thanks. kai]] This will delegate all method calls to MyClass to the delegate. Now you can modify some of the delegate methods as you like. (This sometimes seems to provide less access than inheritance, but I don't think this is true as long as you assume that internal variables/fields are always private.)","title":"Use delegation in Eclipse"},{"location":"devguide/prefer-composition-and-delegation-over-inheritance/#the-typical-example","text":"It is called \"composition\" since you can do this with more than one interface/delegate. The classical example is something like class MyCar implements HasSteering , HasBrakes , HasGears { private HasSteering steeringDelegate = new PowerSteering (...) ; private HasBrakes brakesDelegate = new SimpleBrakes (...) ; private HasGears gearsDelegate = new ElectronicGears (...) ; } where Eclipse's \"Generate delegate methods\" will produce methods such as public void steerToRight(double value) { steeringDelegate.steerToRight(value); } ... public void brake(double value) { brakesDelegate.brake(value); } As one can see, this now allows operations such as MyCar car ... ... car.brake(3.); car.steerToRight(0.3); that is, the car is now composed of its internals.","title":"The typical example"},{"location":"devguide/prefer-composition-and-delegation-over-inheritance/#exposing-the-delegates","text":"In MATSim, we often expose the delegation, that is, the syntax is car.getBrakes().brake(3.); car.getSteering().steerToRight(0.3); This has the advantage that, if you extend the interfaces, you do not need to adapt every implementation. It is, clearly, not an option if you want to write a class (such as a PlanStrategy ) that is later inserted into the code \u2013 that has to fulfill the contract defined by the interface.","title":"Exposing the delegates"},{"location":"devguide/proxy-configuration/","text":"Working behind a Proxy \u00b6 Things are getting a bit cumbersome if you are behind a proxy server. Apparently, Java ignores your system wide proxy settings (checked on Linux Mint 16, Windows Server 2008, Mac OS 10.9), that is, you need to configure each piece of software that is involved in your build process separately. Usually, this includes Eclipse and Maven. Eclipse \u00b6 Go to Preferences > General > Network Connections and enter your proxy settings. Set Active Provider to Manual . The Native option did never work for me (JI apr'14). Users report that one should leave the SOCKS field empty. You may need to restart Eclipse. Maven \u00b6 Edit your maven settings file (or create if not existing) ~/.m2/settings.xml to look like that: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <settings xmlns= \"http://maven.apache.org/SETTINGS/1.1.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd\" > <proxies> <proxy> <active> true </active> <protocol> http </protocol> <host> localhost </host> <port> 3128 </port> <nonProxyHosts> 127.0.0.1 </nonProxyHosts> </proxy> </proxies> </settings> If neccessary, add <username> and <password> fields (see also here ). Double check that Eclipse is using the correct settings file ( Preferences > Maven > User Settings ). NTLM Authentification \u00b6 Things are getting even worse, if you are behind a proxy that uses NTLM authentification (usually Windows based networks). As far as my experience goes (JI apr'14) none of the above java tools can talk to a NTLM based proxy. The only work around is to run a local NTLM-capable proxy on your machine that handles the authentification. There is cntlm which works flawlessly for me (JI apr'14), or Java NTLM Proxy and NTLMaps (both I have not tested).","title":"Proxy configuration"},{"location":"devguide/proxy-configuration/#working-behind-a-proxy","text":"Things are getting a bit cumbersome if you are behind a proxy server. Apparently, Java ignores your system wide proxy settings (checked on Linux Mint 16, Windows Server 2008, Mac OS 10.9), that is, you need to configure each piece of software that is involved in your build process separately. Usually, this includes Eclipse and Maven.","title":"Working behind a Proxy"},{"location":"devguide/proxy-configuration/#eclipse","text":"Go to Preferences > General > Network Connections and enter your proxy settings. Set Active Provider to Manual . The Native option did never work for me (JI apr'14). Users report that one should leave the SOCKS field empty. You may need to restart Eclipse.","title":"Eclipse"},{"location":"devguide/proxy-configuration/#maven","text":"Edit your maven settings file (or create if not existing) ~/.m2/settings.xml to look like that: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <settings xmlns= \"http://maven.apache.org/SETTINGS/1.1.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd\" > <proxies> <proxy> <active> true </active> <protocol> http </protocol> <host> localhost </host> <port> 3128 </port> <nonProxyHosts> 127.0.0.1 </nonProxyHosts> </proxy> </proxies> </settings> If neccessary, add <username> and <password> fields (see also here ). Double check that Eclipse is using the correct settings file ( Preferences > Maven > User Settings ).","title":"Maven"},{"location":"devguide/proxy-configuration/#ntlm-authentification","text":"Things are getting even worse, if you are behind a proxy that uses NTLM authentification (usually Windows based networks). As far as my experience goes (JI apr'14) none of the above java tools can talk to a NTLM based proxy. The only work around is to run a local NTLM-capable proxy on your machine that handles the authentification. There is cntlm which works flawlessly for me (JI apr'14), or Java NTLM Proxy and NTLMaps (both I have not tested).","title":"NTLM Authentification"},{"location":"devguide/using-generics/","text":"Using Generics \u00b6 Generics can be quite powerful, but also very cumbersome if used wrongly. Thus, respect the following rules: Using Generics: that's okay, e.g. when using the Java collection classes Providing Generics (i.e. introducing Generics in our own classes): only sparingly if you know exactly what you do. If you are not sure, do not use Generics!","title":"Using Generics"},{"location":"devguide/using-generics/#using-generics","text":"Generics can be quite powerful, but also very cumbersome if used wrongly. Thus, respect the following rules: Using Generics: that's okay, e.g. when using the Java collection classes Providing Generics (i.e. introducing Generics in our own classes): only sparingly if you know exactly what you do. If you are not sure, do not use Generics!","title":"Using Generics"},{"location":"devguide/eclipse/","text":"Using Eclipse \u00b6 The following sections explain how to install and setup Eclipse Mars (4.5, released June 2015) or newer to work with MATSim. Prerequisites \u00b6 You must have the following software installed and ready to use: Java 11 or newer To use MATSim, you need to have a Java SDK (JDK) installed and not only a Java Runtime Environment (JRE). Best is to download and install JDK 11 from adoptopenjdk.net . Eclipse Download Eclipse from eclipse.org , the package \"Eclipse IDE for Java Developers\" is enough for MATSim. Unzip the downloaded file and place it on some suitable location on your harddisk. Eclipse does not require any special installation. Experience shows that on Windows it's best to install Eclipse at a location that does not require administrative rights. Configure Eclipse Use UTF8 as File-Encoding . Make sure Eclipse is running from a JDK Configure Eclipse to use a JDK Cloning the MATSim project to Eclipse \u00b6 \"Cloning\" refers to the task of getting a copy of the MATSim source code from the server that keeps the most current and official source code version. The copy will be placed on your computer and allows you to work with the source code. To clone the MATSim source code to your computer, start Eclipse, then: choose menu File > Import\u2026 , and there Git > Projects from Git . Click Next . select Clone URI and click Next . Enter the following URI: https://github.com/matsim-org/matsim.git . Choose the master branch and click Next . Specify a location on your computer, where the source code should be saved. Eclipse makes a suggestion on where to put the data. It's okay to use that, but make sure you'll remember the location as we will need it later again! When you click on Next , Eclipse will start downloading the source code. Depending on your internet connection, this may take some minutes. After all the source code has been downloaded, Eclipse will ask you how to import the source code. Choose Import as general project and click Next . Name the project matsim-all . Important: Name it matsim-all , and not just \"matsim\" as proposed! You should now end up with a project matsim-all in Eclipse. Choose menu File > Import , then Maven > Existing Maven Projects . Click Next . Navigate to the directory, where you stored the MATSim source code (see some steps above). Once you've selected the right directory, it should list the matsim project, and all the contribs. Select the matsim project and those contribs that you need. If you are unsure, just start with the matsim project. These last two steps can be repeated any time when you need additional contrib. Click on Finish . Eclipse will now add the selected parts as projects to Eclipse. Depending on the number of contribs you selected, this might take a moment.","title":"Eclipse"},{"location":"devguide/eclipse/#using-eclipse","text":"The following sections explain how to install and setup Eclipse Mars (4.5, released June 2015) or newer to work with MATSim.","title":"Using Eclipse"},{"location":"devguide/eclipse/#prerequisites","text":"You must have the following software installed and ready to use: Java 11 or newer To use MATSim, you need to have a Java SDK (JDK) installed and not only a Java Runtime Environment (JRE). Best is to download and install JDK 11 from adoptopenjdk.net . Eclipse Download Eclipse from eclipse.org , the package \"Eclipse IDE for Java Developers\" is enough for MATSim. Unzip the downloaded file and place it on some suitable location on your harddisk. Eclipse does not require any special installation. Experience shows that on Windows it's best to install Eclipse at a location that does not require administrative rights. Configure Eclipse Use UTF8 as File-Encoding . Make sure Eclipse is running from a JDK Configure Eclipse to use a JDK","title":"Prerequisites"},{"location":"devguide/eclipse/#cloning-the-matsim-project-to-eclipse","text":"\"Cloning\" refers to the task of getting a copy of the MATSim source code from the server that keeps the most current and official source code version. The copy will be placed on your computer and allows you to work with the source code. To clone the MATSim source code to your computer, start Eclipse, then: choose menu File > Import\u2026 , and there Git > Projects from Git . Click Next . select Clone URI and click Next . Enter the following URI: https://github.com/matsim-org/matsim.git . Choose the master branch and click Next . Specify a location on your computer, where the source code should be saved. Eclipse makes a suggestion on where to put the data. It's okay to use that, but make sure you'll remember the location as we will need it later again! When you click on Next , Eclipse will start downloading the source code. Depending on your internet connection, this may take some minutes. After all the source code has been downloaded, Eclipse will ask you how to import the source code. Choose Import as general project and click Next . Name the project matsim-all . Important: Name it matsim-all , and not just \"matsim\" as proposed! You should now end up with a project matsim-all in Eclipse. Choose menu File > Import , then Maven > Existing Maven Projects . Click Next . Navigate to the directory, where you stored the MATSim source code (see some steps above). Once you've selected the right directory, it should list the matsim project, and all the contribs. Select the matsim project and those contribs that you need. If you are unsure, just start with the matsim project. These last two steps can be repeated any time when you need additional contrib. Click on Finish . Eclipse will now add the selected parts as projects to Eclipse. Depending on the number of contribs you selected, this might take a moment.","title":"Cloning the MATSim project to Eclipse"},{"location":"devguide/eclipse/jdk/","text":"Run Eclipse with a JDK \u00b6 Maven requires Eclipse using a JDK, i.e. Java Development Kit, instead of a Java Runtime Environment (JRE). The main difference is that a JDK also contains a Java Compiler and other tools to develop Java Code, while the JRE is only able to run compiled Java applications. To check with what Java version (JRE or JDK) Eclipse is running, do the following: Open the menu item Help > About Eclipse . (On the Mac, it's in the Eclipse-menu, not the Help-menu) Click on Installation Details . Switch to the tab Configuration Search for a line that starts with -vm . The line following it shows which Java binary is used. Depending on the name and location of the used Java binary one can figure out if a JRE or a JDK is used: If the path contains \"jre\" (e.g. as in C:\\Program Files\\Java\\jre6\\bin\\client\\jvm.dll ) it is a JRE If the path contains \"jdk\" (e.g. as in C:\\Program Files\\Java\\jdk1.6.0_31\\bin\\javaw.exe ) it is a JDK. If no JDK is used for Eclipse, change it: Quit Eclipse if it is running Go to the Eclipse installation directory and open the file eclipse.ini in a text editor. Search for the line -vmargs Before the line -vmargs , add two lines: On the first line, write -vm On the second line, write the path to your JDK installation (usually something like: C:\\Program Files\\Java\\jdk1.6.0_31\\bin\\javaw.exe on Windows)","title":"Eclipse JDK"},{"location":"devguide/eclipse/jdk/#run-eclipse-with-a-jdk","text":"Maven requires Eclipse using a JDK, i.e. Java Development Kit, instead of a Java Runtime Environment (JRE). The main difference is that a JDK also contains a Java Compiler and other tools to develop Java Code, while the JRE is only able to run compiled Java applications. To check with what Java version (JRE or JDK) Eclipse is running, do the following: Open the menu item Help > About Eclipse . (On the Mac, it's in the Eclipse-menu, not the Help-menu) Click on Installation Details . Switch to the tab Configuration Search for a line that starts with -vm . The line following it shows which Java binary is used. Depending on the name and location of the used Java binary one can figure out if a JRE or a JDK is used: If the path contains \"jre\" (e.g. as in C:\\Program Files\\Java\\jre6\\bin\\client\\jvm.dll ) it is a JRE If the path contains \"jdk\" (e.g. as in C:\\Program Files\\Java\\jdk1.6.0_31\\bin\\javaw.exe ) it is a JDK. If no JDK is used for Eclipse, change it: Quit Eclipse if it is running Go to the Eclipse installation directory and open the file eclipse.ini in a text editor. Search for the line -vmargs Before the line -vmargs , add two lines: On the first line, write -vm On the second line, write the path to your JDK installation (usually something like: C:\\Program Files\\Java\\jdk1.6.0_31\\bin\\javaw.exe on Windows)","title":"Run Eclipse with a JDK"},{"location":"gallery/","text":"Scenario Gallery \u00b6 MATSim is used all over the world! Have a look how others use MATSim and in what regions they apply it. Learn what data they used and how they prepared their data and processed the output. Some scenario data is freely available. Have a look! Do you have a scenario and wish to present it here as well? Please contact us so we can add it!","title":"Scenario Gallery"},{"location":"gallery/#scenario-gallery","text":"MATSim is used all over the world! Have a look how others use MATSim and in what regions they apply it. Learn what data they used and how they prepared their data and processed the output. Some scenario data is freely available. Have a look! Do you have a scenario and wish to present it here as well? Please contact us so we can add it!","title":"Scenario Gallery"},{"location":"gallery/air-traffic/","text":"In this scenario, air traffic over Europe is simulated using MATSim. The model was created by VSP, TU Berlin based on data provided by OAG Aviation. It can be nicely seen how air traffic increases around 5:00 A.M. (GMT), which corresponds to 6 A.M. in most central European countries: the time the ban on night flights is lifted at many airports. The model is currently being improved to take capacity constraints at airports, like runway capacities, into account.","title":"Air Traffic over Europe"},{"location":"gallery/aliaga/","text":"{% include image.html image=page.image1 %} In this study, evacuation simulations are carried out for Aliaga, the industrial zone of Izmir, Turkey, where petro-chemical companies such as Petkim and Tupras are active. The scenario is based on an explosion in the acrylonitrile (ACN) factory in Petkim. The risk zone is determined considering the features of ACN, the wind speed and the direction of the wind. Simulations are executed via MATSim and a mesoscopic simulation software called Cube Avenue. The aim of using two simulation softwares is to be able to compare evacuation time estimates and to obtain reliable results from evacuation simulations which are crucial and critical in creating emergency plans. {% include image.html image=page.image2 %} Network is converted from OpenStreetMap and modified manually for both softwares. Three different scenarios have been identified for the evacuation simulation with an assumption that all evacuees are at home. The selection of these three scenarios is mainly based on the location of the destination zones and traffic demand. Free spaces which are close to the risk zone are designated as gathering-areas. The aim is to provide the arrival of evacuees to health care centers and gathering areas according to distance to explosion area, within a minimum time. The simulations based on these scenarios allow to choose the most useful scenario to be implemented in real case. Research Paper \u00b6 Evacuation plan of an industrial zone: Case study of a chemical accident in Aliaga, Turkey and the comparison of two different simulation softwares Safety Science, Volume 60, December 2013, Pages 123-130 Pelin Onelcin*, Mehmet Metin Mutlu, Yalcin Alver Department of Civil Engineering, Ege University, 35100 Bornova, Izmir, Turkey Paper Link","title":"Aliaga, Turkey"},{"location":"gallery/aliaga/#research-paper","text":"Evacuation plan of an industrial zone: Case study of a chemical accident in Aliaga, Turkey and the comparison of two different simulation softwares Safety Science, Volume 60, December 2013, Pages 123-130 Pelin Onelcin*, Mehmet Metin Mutlu, Yalcin Alver Department of Civil Engineering, Ege University, 35100 Bornova, Izmir, Turkey Paper Link","title":"Research Paper"},{"location":"gallery/berlin/","text":"Berlin, the capital of Germany, has more than 3 million inhabitants. Together with the people living in the surrounding Brandenburg area, a total population of nearly 6 million people is accounted for in this scenario, which covers an area of 150 x 250 kilometers. {% include image.html image=page.image1 %} A first approach for a model of Berlin was started in 2006. The road network used was originally developed by the planning department of the city of Berlin. It consists of more than 10,000 nodes and almost 30,000 links. As the scenario has its focus on the urban area of Berlin, this part of the region is represented with a much higher level of detail and accuracy than Brandenburg. The travel demand was based on intermediary output generated by the so called \"Kutter-Model\" for Berlin (also known as \"Berliner Personenverkehrs-Modell\"), an agent-based demand generation model. To speed up computational performance, only a 10% sample of car drivers was simulated, resulting in over 160,000 simulated agents. Due to problems with the input data, the scenario was only in use for a short time. In 2010, a new scenario for Berlin and its surroundings was created on behalf of the Berlin transit company BVG, together with PTV. This new model is based on extensive survey data for creating a good replication of the travel behaviour in the Berlin area. It also includes the complete public transit services (hundreds of bus lines, dozends of tram lines, trains, subways and even a few ferries). Based on that model, a forecasting model for 2015 was created.","title":"Berlin, Germany"},{"location":"gallery/caracas/","text":"{% include image.html image=page.image1 %} The commercial and industrial zone \"Los Ruices y Los Cortijos de Lourdes\" in Caracas is one of the most transited zones on the east side of the city. The network was created by using data from OpenStreetMap, but then manually modified (e.g. setting correct speed, capacity attributes) based on information delievered by a company doing a prior study in the same area. Demand was given in a O/D matrix by the same company, but only for the morning period. As the area researched is mainly a consuming zone in the morning, and a producing zone in the afternoon, the values from the O/D matrix were used to create dayplans for the agents. An initial departure around 7:30 time was assigned to the plans. Several scenarios with different replanning rates were run to test how much agents have to change their departure time in the morning such that the network can accomodate all of the travel demand. The screenshots above show how the traffic jam builds up in the scenario in which the simulated demand matches the values of real-world traffic counts best. The model and research was done by Daniel Ampuero Anca and Jes\u00fas Francisco G\u00f3mez Ort\u00edz during their Bachelor's study at Universidad Central de Venezuela. The work was tutored by Prof. H\u00e9ctor Navarro. Special thanks to URBISA SA and its founder \u00d3scar Anzola.","title":"Caracas, Venezuela"},{"location":"gallery/dakar/","text":"The modal of Dakar, Senegal, was created during the D4D challenge (Data for Development). The travel demand is created using mobile phone data, and simulated on a network extracted from OpenStreetMap (OSM). The process is implemented in a prototype software called SPOT (Spatial Planning simulation and Optimization Technologies), which uses MATSim for the traffic simulation. Additional information is available in: Serigne Gueye, Babacar M. Ndiaye, Didier Josselin, Michael Poss, Roger M. Faye, Philippe Michelon, Cyrille Genre-Grandpierre, and Francesco Ciari. Using mobile phone data for Spatial Planning simulation and Optimization Technologies (SPOT) Download PDF version of paper","title":"Dakar, Senegal"},{"location":"gallery/gauteng/","text":"Gauteng is the smallest province in South Africa, accounting for around 2% of the land surface, but contributes more than a third of the country's Gross Domestic Product (GDP). Due to high urbanization (the three metropolitan cities of Johannesburg, Tshwane (Pretoria) and Ekurhuleni form part of Gauteng) the province has around 11 million inhabitants. The scenario is currently built by researchers led by Prof. Johan W. Joubert at the Department of Industrial and Systems Engineering at the University of Pretoria in South Africa. The groundwork for the scenario was laid during a two-month stay of a Master student (Pieter J. Fourie) from South Africa in Berlin during 2008, where the essential steps of preparing the network, travel demand, and traffic counts for validation, were done. Network data and zonal information was imported from GIS Shapefiles. Travel demand is based on census information. In an initial step, only travelers commuting via private car were simulated, leading to the well-recognizable morning and evening rush hours. The model has since been extended ( Joubert et al., 2010 ) to include freight agent activity chains, allowing for traffic throughout the day. Recently the model was used to evaluate the impact of the Gauteng Freeway Improvement Project (GFIP) . Specifically, the South African National Roads Agency Limited (SANRAL) was interested in the MATSim capability to model detailed diversion patterns given different road pricing strategies. The video shown starts with the GFIP network shaded as gray. The road pricing scheme modelled here includes various discount structures, for example time-of-day, whether the vehicle is equipped with an eTag, public transport vehicles, and the vehicle class. The population for the toll diversion study included private cars (only home-work-home trips); commercial vehicles (complete activity chains as in Joubert et al., 2010 ); public transport vehicles and external traffic from the original Saturn model used by SANRAL. From the video one can see the peak spreading as a result of the toll. Specifically, there is an increase in the overall traffic across the province between 05:15 and 06:00 when the pre-peak discount for all vehicle classes ends. The major diversion from the GFIP network is expected from commercial vehicles, and specifically during off-peak periods (see 09:00 - 15:00). One of the reasons is that the secondary road network is less congested during the off-peak period, and is hence available to commercial vehicles as an alternative. Files Poster presented at Winter Simulation Conference (WSC) 2008 (PDF) Paper presented at Southern African Transport Conference 2010 (PDF)","title":"Gauteng, South Africa"},{"location":"gallery/germany/","text":"The video \u2014 make sure to watch it in HD on Vimeo \u2014 shows a sub-sample of 500K agents from the MATSim Germany national scenario for private car travel. The full scenario counts 4 million agents generated from a random realization of the national German travel survey (Mobilit\u00e4t in Deutschland 2008), calibrated against 2500 count stations and OD-flows of navigation devices. The network of major roads (360 K links) as well as more than 4 million activity locations are extracted from openstreetmap.org. The scenario consists of full-day travel plans with activities of type home, work, edu, shop, leisure and miscellaneous. Created by Johannes Illenberger, DB Mobility Logistics AG, Frankfurt am Main, Germany.","title":"Germany"},{"location":"gallery/ile_de_france/","text":"The MATSim model of \u00cele-de-France is open and reproducible. It is based entirely on open data and open software and can therefore be used by any researcher to start analyses on the synthetic population itself or on downstream MATSim simulations. The methodology is documented in detail in the following publication: H\u00f6rl, S. and M. Balac (2021) Synthetic population and travel demand for Paris and \u00cele-de-France based on open and publicly available data , Transportation Research Part C , 130 , 103291. Instructions on how to reproduce and run the simulations are available online on Github: An open synthetic population of \u00cele-de-France . While the scenario covers the \u00cele-de-France region around Paris, it can easily be adapted to other regions and cities of France. First attempts have been made for Toulouse and Lille.","title":"Open \u00cele-de-France, France"},{"location":"gallery/izmir/","text":"{% include image.html image=page.image1 %} A simulation for existing urban transportation, and three simulations for gulf crossing scenarios, for Izmir, Turkey are made using MATSim. Simulation results for existing urban transportation are compared to count station results to determine verification ratios. Simulation results for gulf crossing scenarios are used to determine the effects of different scenarios to existing traffic. {% include image.html image=page.image2 %} Road network is converted from OpenStreetMap and modified manually. Analyzed TAZs, land use and urban automobile traffic data is obtained from Izmir Metropolitan Municipality transportation master plan. Izmir urban traffic is distributed to 47 internal zones according to land use information. Best gulf crossing scenario is determined using simulation results, choosing the crossing which has minimum negative effects (increasing volume) to links which it is connected to and maximum positive effects (decreasing volume) to links which are at upper limits of their capacities, taking infrastructural investment requirements into consideration. Research paper \u00b6 MATSim-T Urban Traffic Simulation for Izmir, TURKEY. MUTLU, M. Metin, Graduation Thesis in Civil Engineering. Supervisor: ALVER, Yal\u00e7\u0131n, Assistant Prof. Dr., February 2010","title":"Izmir, Turkey"},{"location":"gallery/izmir/#research-paper","text":"MATSim-T Urban Traffic Simulation for Izmir, TURKEY. MUTLU, M. Metin, Graduation Thesis in Civil Engineering. Supervisor: ALVER, Yal\u00e7\u0131n, Assistant Prof. Dr., February 2010","title":"Research paper"},{"location":"gallery/joinville/","text":"Joinville is a mid-sized industrial city in the south of Brazil with around 550.000 inhabitants. It has a large workforce, including from its neighbouring cities. As it has an intense industrial activity profile, companies work often in three shifts, which cause peculiar traffic patterns. Besides this, it is common to have people with 12-hour routines considering work and higher education. The Joinville traffic model was built as an initial step of a project that intends to simulate the entire northeast region of Santa Catarina State, including air traffic, shipping, state highways and neighbouring cities. The aim of the project is a wide comprehension of people and freight movement on the region. The urban Joinville model is on its first version now and was produced as a graduation thesis at the Federal University of Santa Catarina (UFSC) , course of Transportation and Logistics Engineering . The scenario population was generated with data from the 2010 Brazilian census combined with demographic information from the city's travel survey. Travel demand was generated from the same travel survey. Both were designed to fit into MATSim using Tutorial classes (with some adaptations). The network was produced with vector data provided by the local Urban Sustainable Planning Institute of Joinville (IPPUJ). The data came as a shapefile with many connectivity problems. We were able to fix them using scripts in Python with the NetworkX module . Transforming was performed from the vector data into a graph, fixing the issues with the help of QGIS and finally writing as the MATSim XML network format. The facilities were produced from land-use data provided from the city government. For now the model runs only with cars. The model used a full sample of the population. From the available data we inferred 135.652 agents that did their routines by car, the rest were removed of the simulation. Figure 1 shows a screenshot of the Events using Via . Figure 1. Events using Via Figure 2 shows the comparison between simulated and count data for 20 links in the morning peak from 7 to 8 AM. The count data available for comparison is still sparse which could not provide us with a good measure of success. We know that calibration is needed for the next versions of the model. The good news is that the local authorities are installing over a hundred counting stations throughout the city within the next couple months and a new travel survey will be held this year. Figure 2. Comparison of Joinville simulated and count data","title":"Joinville, Brazil"},{"location":"gallery/munich/","text":"The MATSim scenarion for the Munich metropolitan area was set up during the year 2010. The goal is, among others, a simulation of local and global air pollutant and greenhouse gas emissions and how these levels change with respect to different policy measures. Network information from VISUM was linked to travel demand from different sources: an activity-based demand for inner-urban traffic came from the survey \"Mobility in Germany\" (MiD, 2002). Commuters and reverse commuters are modeled based on data provided by the German Federal Employment Office. Freight traffic is also introduced in the model by using data from the German Ministry for Transport. Emissions are calculated every time a vehicle leaves a street, and is dependent on the engine type, age, cubic capacity as well as the traffic state (free flow or stop & go). This video shows, for the city of Munich, a spatial distribution of NO2 exhaust emissions over time of day. Emission levels are calculated for every street and aggregated for 30 minutes time bins. Using a Gaussian smoothing function allows to identify areas with the highest emission levels. For publications related to the Munich scenario see here .","title":"Munich, Germany"},{"location":"gallery/padang/","text":"With MATSim it is possible to simulate large-scale evacuation scenarios. In a running project Last-Mile Evacuation we are developing an evacuation simulation for the Indonesian city of Padang, which faces a high risk of being hit by a tsunami. The estimated advance warning time before an earthquake-triggered tsunami reaches the shore line is about 30 minutes. That means the evacuation needs to be very fast. A realistic simulation of the evacuation process would help to give an estimate of the evacuation time, to detect bottlenecks in advance and to identify highly endangered areas, where a vertical evacuation seems the only way. The movie shows preliminary results of the evacuation simulation. The simulation starts 28 min before the tsunami reaches the shore line. It is assumed that all people are at home (\u201cevacuation at 3 a.m.\u201d).","title":"Padang, Indonesia"},{"location":"gallery/paris/","text":"The MATSim model of Paris was built by GeoTwin for the CityMakers challenge . Most of the data sources used for the model are available as OpenData, including network (from OpenStreetMap), population census, commuter matrix and travel diary. The model covers the city of Paris as well as parts of the surrounding region of \u00cele-de-France. About 10 mio. people live in the modelled area, of which a 10% sample was simulated. The model includes private cars, public transport, walk and bike (both teleportation-only), and also includes a fixed taxi-demand as well as freefloating car-sharing as technical proof-of-concepts for the aforementioned challenge. The model will be improved and expanded in the future to allow the planning of sophisticated new mobility patterns.","title":"Paris, France"},{"location":"gallery/poznan/","text":"Poznan, with its population of over 550,000, is the 5th largest city in Poland. Together with the neighbouring districts, it makes up an agglomeration of nearly 1 million people. The development of the MATSim scenario for the Poznan region began in 2012, with the primary goal of creating a 24-hour multi-agent simulation of the city and the surrounding districts. The road network was generated based on OpenStreetMap data and consists of over 13,600 nodes and over 32,000 links. The travel demand was derived from a static (1-hour morning peak) model created in PTV VISUM by the Poznan city planning department. The current version of the simulation covers the whole morning peak, 5 A.M. to 12 Noon. In parallel with the work on the Poznan model, there is ongoing research on dynamic taxi fleet routing. The process of dispatching taxis is carried out on-line. New requests may be submitted at any time and often no assumptions can be made about future demand. Moreover, since only historic approximations of travel times are known, trips may last longer or shorter than expected due to the day-to-day changes in traffic flow and the limited precision of the estimates themselves. The optimization algorithm dynamically reacts to changes in the current state concerning both supply and demand. Currently, in the first version of the simulation, there are 1,000 taxis (represented as light red rectangles in the video) moving around and serving 5000 taxi trips. Taxi trips are 2% of all 250,000 PrT trips during the morning peak.","title":"Poznan, Poland"},{"location":"gallery/quito/","text":"The Metropolitan District of Quito (DMQ) is Ecuador's capital where currently more than two million people are living. It has grown quickly in recent years, causing traffic congestion and pollution. Our research integrates evolutionary computation, public and private mobility and emission simulation and data mining tools to gain a better understanding of complex mobility problems in the city. The geographical area of study is the business district which covers approximately 5\u00d78 km2. A first scenario dealt with the optimization of 70 traffic signals with 20.000 agents moving in two main trips. The plans are designed so that all the agents move first from each home location to different points along the zone. The network comes from OpenStreetMap and includes the primary and secondary pathways, represented in total by 8192 links. The evolutionary algorithm (EA) together with MATSim found the optimal signal setting of the DMQ Scenario, minimizing average travel time. We implemented several genetic operators and designed and tested several experiments to find a proper configuration that allows fluid traffic flow through proper coordination between signals. Using data mining techniques, we group the optimal solutions in clusters. Finally, we analyze the effects of traffic signal settings in respect to the environmental impact using the output data from the MATSim emission module. {% include image.html image=page.image1 %} A second approach examines traffic density levels in urban transportation. The EA searches the combinations of a number of private/public transport users, capacity and headways of Bus Rapid Transit (BRT) of five main corridors on DMQ Scenario. The traffic density is influenced by the proportions of the population that use public (NPt) and private transportation and implies a bi-level optimization problem. Different proportions and configurations impact the traffic density, travel time and fuel consumption. Those criteria are in conflict with each other; we developed a framework to minimize simultaneously the three objectives, coupling a multi-objective EA with MATSim. {% include image.html image=page.image2 %} We acknowledge the support of Shinshu University (Japan) and Senescyt (Ecuador). Thanks to Senozon for the visualising software . Quito, Ecuador from MATSim page on Vimeo . More information about the scenario and the work can be found in the following publications: R. Armas, H. Aguirre and K. Tanaka, \u201cMulti-Objective Optimization of Level of Service in Urban Transportation\u201d, The Genetic and Evolutionary Computation Conference (GECCO) , Berlin, 2017, to appear. R. Armas, H. Aguirre, F. Daolio and K. Tanaka, \"An effective EA for short term evolution with small population for traffic signal optimization\", 2016 IEEE Symposium Series on Computational Intelligence (SSCI) , Athens, 2016, pp. 1-8. doi: 10.1109/SSCI.2016.7850099 R. Armas, H. Aguirre, F. Daolio and K. Tanaka, \"Traffic signal optimization and coordination using neighborhood mutation\", 2016 IEEE Congress on Evolutionary Computation (CEC) , Vancouver, BC, 2016, pp. 395-402. doi: 10.1109/CEC.2016.7743821 R. Armas, and H. Aguirre, 2016. Quito Metropolitan District. In: Horni, A, Nagel, K and Axhausen, K W. (eds.) The Multi-Agent Transport Simulation MATSim, pp. 473-476. London: Ubiquity Press. DOI: http://dx.doi.org/10.5334/baw.80 License: CC-BY 4.0 R. Armas, H. Aguirre, S. Zapotecas-Mart\u00ednez and K. Tanaka (2016) Traffic Signal Optimization: Minimizing Travel Time and Fuel Consumption. In: Bonnevay S., Legrand P., Monmarch\u00e9 N., Lutton E., Schoenauer M. (eds) Artificial Evolution. EA 2015. Lecture Notes in Computer Science, vol 9554. Springer, Cham R. Armas, H. Aguirre and K. Tanaka (2014) Effects of Mutation and Crossover Operators in the Optimization of Traffic Signal Parameters. In: Dick G. et al. (eds) Simulated Evolution and Learning. SEAL 2014. Lecture Notes in Computer Science, vol 8886. Springer, Cham","title":"Quito, Ecuador"},{"location":"gallery/santiago/","text":"Santiago, the capital city of Chile, has a total population of 6 million people in an area of 641 square kilometers, which makes it by far the most populated city of Chile. The city suffers from air pollution due to emissions from fixed and mobile sources, which particularly in the winter season concentrate in the Santiago Valley. The MATSim Santiago scenario was built upon three open data sources: Car network information from OpenStreetMap, Public transport supply data in Google Transit Feed Specification (GTFS), and Travel diaries from Santiago's 2012 Origin-Destination Survey. In its first part, the simulation video shows the activities of the 1% population being carried out in each time, where red dots represents \u201chome\u201d activities while blue dots represents \u201cwork\u201d, two of the most important ones. Secondly, the video shows the movement of the car and public transport vehicles along the network of the scenario. Different runnable versions of the scenario are available under https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/scenarios/countries/cl/santiago/ . It is planned that the latest version will be continuously improved by MATSim community researchers. Recent improvements include: Usage of population expansion factors from the 2012 Origin-Destination Survey to generate a 1% and a 10% sample population. Randomizing activity locations of the expanded agents, using official land registry data. Generating more variability in the agents\u2019 trip start times, using smartcard transit data (known as Bip!). Integrating tolls on the tolled highways. Integrating shared taxis (colectivos) into the simulation. The scenario is typically calibrated with respect to modal split and traffic volumes using manual and automatic calibration methods. The sole use of open data sources and the continuous stepwise scenario improvement process makes MATSim Santiago one of the most complete scenarios that are freely available for researchers worldwide. It might become a role model for administrations all around the world to realize the power of open data initiatives when it comes to transparent decisionmaking and the stimulation of innovation activity in the private sector.","title":"Santiago, Chile"},{"location":"gallery/seoul/","text":"The MATSim model of Seoul Metropolitan was developed in 2012 as a result of long-term research collaboration between the University of Seoul (Prof. Seungjae Lee) & ETH Z\u00fcrich (Prof. Kay W. Axhausen), with additional support from Senozon. The model is updated on a yearly basis and the demand is generated based on 2012 Household Travel Survey Data (HHTSD). The study area covers the Seoul Metropolitan Area. A population synthesizer was developed to generate the MATSim input demand, based on HHTS 2012. Total population of SMA is 21.5 million; therefore, a 10% sample was generated and simulated (2.15 million agents). A detailed network of nodes and links was generated capturing all the details (16 384 nodes and 32 768 links) for railways, highways, arterials, pedestrians, expressways and bus-only lanes. A more detailed description of the scenario can be found in the MATSim book.","title":"Seoul, South Korea"},{"location":"gallery/singapore/","text":"The future cities laboratory (FCL) was established by ETH Zurich and Singapore's National Research Foundation (NRF). The FCL is a transdisciplinary research centre focused on urban sustainability, located in Singapore. As part of the research, a MATSim complete model for Singapore is being built. The following video shows the simulation output of the second MATSim model for Singapore. The initial demand modeling is based on diverse sources such as the Household Interview Travel Survey shared by Land Transport Authority (LTA), land use information from Urban Redevelopment Authority (URA), NAVTEQ and diverse web resources. The simulation covers both public and private transport and their interactions. This video is purely a product of research and has no immediate relevance to policy and planning. Pieter Fourie is responsible for the demand modeling, Sergio Ord\u00f3\u00f1ez took care of the network modeling, Michael van Eggermond collected the facilities data, Artem Chakirov tested the public transport simulation, Mohit Shah prepared the ERP, traffic count and special trip information and Lijun Sun investigated boarding and alighting process times, all coordinated by Alex Erath. We acknowledge LTA and URA for providing the underlying data and Senozon (senozon.com) for the visualising software. Additional videos of the MATSim model for Singapore can be found on FCL's Vimeo channel .","title":"Singapore"},{"location":"gallery/sioux-falls/","text":"{% include image.html image=page.image1 %} Advances in transport demand modeling require the use of well-known test scenarios --- demand and supply descriptions that allow rapid testing, demonstration and comparison of new algorithms, methods, and policies. A simplified road network based on the city of Sioux Falls, South Dakota, became very popular within the transport research community, as it was readily available. The conventional Sioux Falls scenario presents static origin-destination matrices, as presented in LeBlanc et al. (1975), and is unsuitable for agent-based simulation. Consequently, Chakirov and Fourie (2014) transformed the original scenario into an enriched, agent-based scenario with dynamic demand and an integrated public transport system. The new scenario therefore makes it possible to rapidly test the full feature set of the MATSim framework in an integrated fashion. The scenario aims to provide a realistic, fully dynamic demand with heterogeneous socio-demographic users and a high degree of spatial resolution. Real world survey and land-use data is used to generate a diverse synthetic population and accurate activity locations. The socio-demographic characteristics include age and sex on individual and income on household levels. Car ownership was assigned using the ordered probit model of Giuliano and Dargay (2006) . The assignment of home and work locations employs land-use and building information, census data from the City of Sioux Falls, South Dakota as well as commonly used static OD-matrices from LeBlanc et al. (1975) . It is important to note that the scenario does not aim to replicate the real City of Sioux Falls, SD, and remains a fictitious test-case scenario. The developers acknowledge the City of Sioux Falls GIS division for kindly proving data on the current land-use and Ihab Kaddoura and Benjamin Kickhoefer from TU Berlin, who provided feedback on potential bugs during the scenario generation and testing process. They also thank Prof. Kay Axhausen and Dr. Alexander Erath (IVT, ETH Zurich) for valuable input to the generation of this scenario. Where to find the scenario data \u00b6 The scenario data ships in MATSim XML format, ready to use, with every checkout of MATSim. See the Download section for details. After checking out, check matsim/examples/siouxfalls2014/config.xml to see where all the individual scenario components reside. The original tables used to generate the MATSim XML demand description, as well as the MATSim input data and the simulation results analyzed in Chakirov and Fourie (2014), can be found on the Transportation Test Problems page of the Ben-Gurion University of the Negev, maintained by Hillel Bar-gera.","title":"Sioux Falls, SD, USA"},{"location":"gallery/sioux-falls/#where-to-find-the-scenario-data","text":"The scenario data ships in MATSim XML format, ready to use, with every checkout of MATSim. See the Download section for details. After checking out, check matsim/examples/siouxfalls2014/config.xml to see where all the individual scenario components reside. The original tables used to generate the MATSim XML demand description, as well as the MATSim input data and the simulation results analyzed in Chakirov and Fourie (2014), can be found on the Transportation Test Problems page of the Ben-Gurion University of the Negev, maintained by Hillel Bar-gera.","title":"Where to find the scenario data"},{"location":"gallery/south-africa/","text":"In this example, we generated a synthetic population of commercial vehicles (mainly freight) on a national scale in South Africa. The activity chains were generated using a path-dependent complex network of connectivity (paper pending). The concept of using complex networks to describe commercial vehicle movement was originally addressed in Joubert & Axhausen (2013) .","title":"Freight in South Africa"},{"location":"gallery/sweden/","text":"The MATSim model for Sweden focuses on depicting long distance road transport in the country. It depicts both passenger and freight transport. The model has been set up by converting results of the two existing static models (SAMGODS for freight and SAMPERS for passengers) into MATSim demand. The network is OSM based and the public transport supply origins from GTFS. The primary goal of the model is to research the effects of a mass electrification of transport, including Electric Road Systems. But the model may also be used for different purposes. Currently, a ten percent version of the model is publicly available. It can be accessed via Github .","title":"Sweden"},{"location":"gallery/telaviv/","text":"The MATSim model for Tel Aviv, Israel, was built for a study exploring the possibility of integrating an operational activity-based model and a dynamic traffic assignment framework. It generates the travel demand directly from an activity-based model generated for the Tel Aviv area, without falling back to OD matrices. The Tel Aviv activity-based model system comprises a hierarchy of logit and nested logit models for the main stop of a tour, while intermediate stops are modeled conditionally on the basis of the main stop. The primary data source is the Israel National Travel Habits Survey from 1996. The network used was converted from a static EMME/2 model which exists for the modeled region. In the future, the model will be updated with improved secondary activity locations (shown last in the video) and location choice will be enabled in the simulation in order to try to achieve better travel time and travel distance distributions for secondary activities.","title":"Tel Aviv, Israel"},{"location":"gallery/toronto/","text":"MATSim in Greater Toronto Work on the GTA MATSim scenario started in fall 2008. Due to the availability of an agent-based demand generation model for the Greater Toronto area, the first scenario run in MATSim could be completed within one week of joint work of two Master students from Toronto with the MATSim groups in Berlin and Zurich. The road network was converted from an EMME/2 network, while the travel demand is based on the output of TASHA (Travel Activity Scheduler for Household Agents), an agent-based demand generation already available for the Greater Toronto area. The scenario is currently further improved by extending the information exchange between TASHA and MATSim. There are plans that TASHA may be used as a replanning module for MATSim in the future, allowing for sophisticated activity replanning. In 2011, work started to integrate the public transport services into the model.","title":"Toronto, Canada"},{"location":"gallery/usa-nationwide/","text":"This research is aimed at simulating road travel for the entire continental United States using agent-level activity profiles derived from smartphone-based geospatial big data. The expansive spatial scope of this work allows for the estimation of travel demand for an entire nation in one go. This work may be of value to transportation and planning agencies who are interested in estimating and predicting the system-wide travel demand. The above figure shows the nationwide road congestion at 9 AM EST. Most of the east coast in the United States is busy with activity and the same holds for the Central time zone. However, activity levels are only higher in the big population centers on the West Coast as it is 6 AM for them. Research paper \u00b6 Additional information can be found in the research paper : Sashikanth Gurram, Vijayaraghavan Sivaraman, Jonathan T. Apple, Abdul R. Pinjari. Agent-based modeling to simulate road travel using Big Data from smartphone GPS: An application to the continental United States . 2019. Abstract \u00b6 Growing concerns about urban sustainability, economic and public health vitality, and climate change are common features across the world. Transportation is often inextricably linked to these concerns and this necessitates the development of robust and scalable tools that can assist in timely understanding of the agent-system interactions. Such expedient but accurate analyses are critical for policymaking, especially in the current environment where urban mobility is witnessing a rapid transformation. To support such analyses, we demonstrate a novel methodology that implements a top-down large-scale agent-based simulation of urban travel using Global Positioning System (GPS) derived raw sightings. Specifically, we constructed the daily activity and travel patterns of devices (i.e. agents) using GPS data for a single day (Wednesday, March 6, 2019) for the entire continental United States. Data filtering techniques were applied to identify approximately 2.7 million smart devices (out of a daily total of 30.5 million) that were highly visible and mobile. We sourced roadway network data for the entire North America from Open Street Maps (OSM). We then fed the daily activity and travel records of agents along with the roadway network data into MATSim, an agent-based travel simulator, to produce highly spatiotemporally resolved agent activities along with their estimated travel trajectories. We processed these travel trajectories (1.5 billion records) to estimate vehicle miles traveled (VMT) for each U.S. state and modeled vehicle volumes per roadway link in the continental U.S. Overall, we found strong rank correlations between our results and Federal Highway Administration\u2019s VMT estimates, although absolute measures displayed a higher variability. We observed similar trends (i.e. low rank correlation errors but higher absolute errors) at the disaggregate roadway link level when comparing our extrapolated traffic volumes against roadway count station data from a select state (Florida). Finally, root mean squared error of our roadway volume estimates are comparatively similar to those for Florida\u2019s regionwide travel demand models indicating a satisfactory model performance. The proposed methodology in our study demonstrates that such big data-powered large-scale agent-based simulations may provide value in estimating and predicting travel demand.","title":"USA"},{"location":"gallery/usa-nationwide/#research-paper","text":"Additional information can be found in the research paper : Sashikanth Gurram, Vijayaraghavan Sivaraman, Jonathan T. Apple, Abdul R. Pinjari. Agent-based modeling to simulate road travel using Big Data from smartphone GPS: An application to the continental United States . 2019.","title":"Research paper"},{"location":"gallery/usa-nationwide/#abstract","text":"Growing concerns about urban sustainability, economic and public health vitality, and climate change are common features across the world. Transportation is often inextricably linked to these concerns and this necessitates the development of robust and scalable tools that can assist in timely understanding of the agent-system interactions. Such expedient but accurate analyses are critical for policymaking, especially in the current environment where urban mobility is witnessing a rapid transformation. To support such analyses, we demonstrate a novel methodology that implements a top-down large-scale agent-based simulation of urban travel using Global Positioning System (GPS) derived raw sightings. Specifically, we constructed the daily activity and travel patterns of devices (i.e. agents) using GPS data for a single day (Wednesday, March 6, 2019) for the entire continental United States. Data filtering techniques were applied to identify approximately 2.7 million smart devices (out of a daily total of 30.5 million) that were highly visible and mobile. We sourced roadway network data for the entire North America from Open Street Maps (OSM). We then fed the daily activity and travel records of agents along with the roadway network data into MATSim, an agent-based travel simulator, to produce highly spatiotemporally resolved agent activities along with their estimated travel trajectories. We processed these travel trajectories (1.5 billion records) to estimate vehicle miles traveled (VMT) for each U.S. state and modeled vehicle volumes per roadway link in the continental U.S. Overall, we found strong rank correlations between our results and Federal Highway Administration\u2019s VMT estimates, although absolute measures displayed a higher variability. We observed similar trends (i.e. low rank correlation errors but higher absolute errors) at the disaggregate roadway link level when comparing our extrapolated traffic volumes against roadway count station data from a select state (Florida). Finally, root mean squared error of our roadway volume estimates are comparatively similar to those for Florida\u2019s regionwide travel demand models indicating a satisfactory model performance. The proposed methodology in our study demonstrates that such big data-powered large-scale agent-based simulations may provide value in estimating and predicting travel demand.","title":"Abstract"},{"location":"gallery/vorarlberg/","text":"The Austrian Institute of Technology's (AIT) business unit Dynamic Transportation Systems (Mobility Department) has developed a new MATSim model for Vorarlberg, the westernmost state of Austria with a size of 2,600 km\u00b2 and about 380,000 inhabitants in 2015. The model area covers the whole state of Vorarlberg and takes into account the trips of all inhabitants. Freight transport and holiday traffic are excluded in the current model. The work has been developed within the project SmartCityRheintal , a research project funded by the Climate and Energy Fund Austria . The network graph has been derived from OpenStreetMap and enhanced using specialized methods to (1) make it routable and (2) provide each link with its specific parameters like capacity and free-flow speed. The population was generated based on the traffic survey \u201cMobilit\u00e4t in Vorarlberg 2013\u201d, the land use plan, and the places of interest (\"POI\") database of Vorarlberg, as well as sociodemographic data. To supply the agents\u2019 plans with a transport mode, an external mode choice model using a maximum likelihood approach was developed. The MATSim simulation of the existing situation was run twice, first with 10% and finally with 100% of the population. Based on this model, three scenarios were simulated with a 10% sample: (1) improvements in the public transport schedule, (2) traffic impacts of urban development projects, and (3) location and distribution of charging stations for e-mobility. The simulation video above includes 100% of the population of Vorarlberg and shows the motorized individual traffic of the basic model - without holiday traffic and commuters travelling to Vorarlberg from other regions. Each colored dot represents a single, simulated vehicle where the color green represents high velocity / free speed and red represents low velocity. Scenario description and video provided by Gernot Lenz, AIT, Mobility DTS Files SmartCityRheintal Endbericht Verkehrsmodell (german only)","title":"Vorarlberg, Austria"},{"location":"gallery/zurich/","text":"Zurich is the largest city of Switzerland with around 380,000 inhabitants (June 2008). More than 1 million people live in the metropolitan area of Zurich, which is much larger than the city itself, while Switzerland has a total population of about 7.5 million people. Zurich was one of the first real-world scenarios that was created for MATSim, as the development of MATSim itself started in Zurich. The scenario was later extended to cover all of Switzerland. Over the years, more and more data could be collected for Switzerland or Zurich, leading to improved scenarios for all of Switzerland as well as for Zurich. The newest Zurich scenario currently uses a Swiss regional planning network consisting of over 24,000 nodes and more than 60,000 unidirectional links, covering all of Switzerland as well as major European transit corridors. The travel demand is based on a synthetic population for Switzerland, generated out of different data (e.g. Swiss national census, micro census, enterprise census). All travellers have complete daily activity patterns, individual activity durations, and an initial mode choice. Simulation results can be compared to nearly 160 traffic counting stations in the region of Zurich, or over 500 such counting stations in whole Switzerland. In the simulation shown in the movie above, all travelers from the synthetic population of whole Switzerland were included that, when driving a car, would be at least once inside an imaginary boundary around Zurich during their day as part of their routing. The boundary is defined as a circle with radius 30 kilometres (around 18.6 miles) and with its center at \"Bellevue\", a central place in Zurich. In order to obtain a higher computational speed, a random 10% sample was chosen for simulation, resulting in 181,484 agents. Those agents could decide during the simulation if they travel with a car or make use of a non-car transportation mode. The movie starts with a general view of a large part of Switzerland, then zooming in to the Zurich metropolitan area, zooming further in to the city in the afternoon hours, and finally returning back to an overview of Switzerland in the evening hours. Each colored dot represents a single, simulated vehicle (green = high velocity, red = low velocity)","title":"Zurich, Switzerland"},{"location":"news/","text":"Latest MATSim News \u00b6 For older entries, see the News Archive to the left!","title":"Latest MATSim News"},{"location":"news/#latest-matsim-news","text":"For older entries, see the News Archive to the left!","title":"Latest MATSim News"},{"location":"news/2019-10-04-matsim-user-meeting/","text":"Dear MATSim community, this year the annual MATSim user meeting will be in Warsaw, Poland. The meeting occurs on April 6th, just a day before the ANT conference, which begins on Tuesday, April 7th. http://cs-conferences.acadiau.ca/ant-20/ We are now accepting submissions for the User Meeting from both Science and Industry. Submissions for the User Meeting should take the form of an abstract (< 1000 words), and are to be submitted before 29th February 2020, through EasyChair. MATSim-related submissions to the main conference will as well be considered for inclusion in the User Meeting program. Please feel free to forward this information to any of your contacts, by sharing the link to the EasyChair call for papers: https://easychair.org/cfp/matsim2020 Registration for the User Meeting will be announced in the close future. We are looking forward to seeing you in Warsaw! Thibaut Dubernet Stefano Penazzi","title":"Announcing MATSim User Meeting 2020: April 6th at ANT in Warsaw, Poland"},{"location":"news/2019-10-28-vrije-univ-brussels/","text":"The Vrije Universiteit Brussels has currently an open position for pursuing a PhD in the domain of freight transport with a strong focus on transport externalities. For details please see https://jobs.vub.be/job/Elsene-PhD-Scholarship-MOBI/563948201/ . For any possible questions you may contact me at Koen.Mommens@vub.be .","title":"Ph.D. at MOBI (Vrije Universiteit Brussel Belgium)"},{"location":"news/2019-11-25-tel-aviv-univ/","text":"The Geosimulation and Spatial Analysis Laboratory , Porter School of the Environment and Earth Sciences, Faculty of Exact Sciences, Tel Aviv University, Israel have an immediate open position for a postdoc expert in MATSim and Transportation Modeling. The position is for a period of 1.5-2 years with an annual scholarship of 16,500-20,500 euros, depending on the qualification. We are looking for a suitable candidate which holds a PhD on agent-based traffic modeling with the MATSim. The accepted candidate will join our team for building, calibration and validating A MATSim scenario for the Jerusalem metropolitan area based on cellular phone data and assessing the transportation future of Jerusalem. You will work at Tel Aviv, University, hand in hand with the transportation authority of Jerusalem. You should have: Technical experience and proficiency in Computer Science/Data Science/Statistics/Mathematics. Excellent JAVA/Object-oriented programming skills. Big data analysis. Experience with statistical analysis with R/ Stata/other . Experience with Geographic Information Systems and Agent-Based Modelling . MATSim experience (mandatory) . Bonuses: Fleet assignment, dispatching, pooling and optimizations (a bonus). Experience of mobile phone data analysis (a bonus) The Geosimulation lab is looking for a strongly motivated candidate who can work both independently and in a team. The applicant will actively participate in the different phases of the research process, from its conception to writing for publication. Excellent command of English is necessary. For any other inquires please contact Prof. Itzhak Benenson, bennya@tauex.tau.ac.il","title":"MATSim-related Post-Doc Position in Tel-Aviv University, Israel"},{"location":"news/2019-12-02-routing-mode/","text":"We (Kai Nagel, Gregor Leich) just merged the branch routingMode5 into the development head master branch ( https://github.com/matsim-org/matsim/pull/738 ). Summary: \u00b6 all legs now have an attribute \u201croutingMode\u201d the MainModeIdentifier is only used to retrofit old plans without routingMode (automatic in PrepareForSimImpl), it won\u2019t be used in ModeStatsControlerListener (overwrite AnalysisMainModeIdentifier instead) several helper walk modes such as \u201ctransit_walk\u201d, \u201cnon_network_walk\u201d, \u201caccess_walk\u201d, \u201cdrt_walk\u201d, \u201cdrt_fallback\u201d were replaced by normal TransportMode.walk (automatic retrofit in PrepareForSimImpl), more precisely by calls to the RoutingModule for TransportMode.walk. This replaced many custom *walk routers and will allow routing \u201cwalk\u201d over the network in the future. This is a pretty old topic ( https://matsim.atlassian.net/browse/MATSIM-26 ), partly solves several Jira issues, e.g. ( https://matsim.atlassian.net/browse/MATSIM-943 , https://matsim.atlassian.net/browse/MATSIM-856 , https://matsim.atlassian.net/browse/MATSIM-473 ) and makes life easier for intermodal trips. The content is our long-discussed \"routing mode\", i.e. that trips memorize the router from which they were generated. The prime example is a trip which currently may have mode transit_walk ; in the future, it would have mode walk and routing mode pt . This also means that \"MainModeIdentifier\" will no longer be necessary. (We will keep it to retrofit older plans files.) In general, we are not using non_network_walk or transit_walk or drt_walk . The reasoning is that teleported bicycle is bike , not non_network_bike , and we have always done it like that. In consequence, if the walk router called from, say, the pt router is a teleportation router, it will still return plain walk . The only exception is a network-based walk router: In that case, we indeed have non_network_walk access to the walk network, then a walk leg along the network, and a non_network_walk to the final destination. The implementation currently is via Attributable . Since there is no trip, we attach it to every leg. Trips that have inconsistent routing modes in their legs will lead to an error. We should probably consider to elevate the routing mode to a typed argument with a future population file. \u201cnon_network_walk\u201c will now only be used by the walk router if walk is routed over the network and only for access/egress to the walk network. It is some kind of fallback layer to access the network. All other modes can use the walk router to access the network. Per default the walk router is still a pure teleportation router NOT routing over the network. So in the end what was a non_network_walk \u2192 pt interaction \u2192 pt \u2192 pt interaction \u2192 non_network_walk trip will now per default be a walk \u2192 pt interaction \u2192 pt \u2192 pt interaction \u2192 walk trip with the plansCalcRoute and scoring parameters of walk !. Keep in mind that what was previously a direct walk \u201ctransit_walk\u201d is now a walk leg with routingMode pt and has the same scoring and plansCalcRoute parameters as walk with routingMode walk, so mode shift from one to the other does not necessarily mean a real change (that problem already existed before as the default for transit_walk was to copy parameters from walk). Similar issues apply to the other fallback modes ( drt_walk , drt_fallback ). Previously we had only the MainModeIdentifier which was used for two rather incompatible purposes (see https://matsim.atlassian.net/browse/MATSIM-26 for details): to identify the correct routing module to identify the main mode according to transportation planning. One example where this becomes clear are the somewhat weird \"main mode\" definition in the German travel survey ... which just has an arbitrary hierarchy for multi-modal trips. So this varies from country to country, and maybe even from survey to survey. We now split them up: is now explictly saved in the attribute routingMode ( and uses MainModeIdentifier for retrofitting old plans) AnalysisMainModeIdentifier binding, defaults to routingMode for backwards compatibility, but can be overwritten separately from MainModeIdentifier with something more useful for mode share analysis. This is only an analysis problem, you can now plug in an AnalysisMainModeIdentifier to fix this in analysis, e.g. overwrite the default with an hierachical MainModeIdentifier such as TransportPlanningMainModeIdentifier .","title":"Routing mode + (helper) walk modes"},{"location":"news/2019-12-02-routing-mode/#summary","text":"all legs now have an attribute \u201croutingMode\u201d the MainModeIdentifier is only used to retrofit old plans without routingMode (automatic in PrepareForSimImpl), it won\u2019t be used in ModeStatsControlerListener (overwrite AnalysisMainModeIdentifier instead) several helper walk modes such as \u201ctransit_walk\u201d, \u201cnon_network_walk\u201d, \u201caccess_walk\u201d, \u201cdrt_walk\u201d, \u201cdrt_fallback\u201d were replaced by normal TransportMode.walk (automatic retrofit in PrepareForSimImpl), more precisely by calls to the RoutingModule for TransportMode.walk. This replaced many custom *walk routers and will allow routing \u201cwalk\u201d over the network in the future. This is a pretty old topic ( https://matsim.atlassian.net/browse/MATSIM-26 ), partly solves several Jira issues, e.g. ( https://matsim.atlassian.net/browse/MATSIM-943 , https://matsim.atlassian.net/browse/MATSIM-856 , https://matsim.atlassian.net/browse/MATSIM-473 ) and makes life easier for intermodal trips. The content is our long-discussed \"routing mode\", i.e. that trips memorize the router from which they were generated. The prime example is a trip which currently may have mode transit_walk ; in the future, it would have mode walk and routing mode pt . This also means that \"MainModeIdentifier\" will no longer be necessary. (We will keep it to retrofit older plans files.) In general, we are not using non_network_walk or transit_walk or drt_walk . The reasoning is that teleported bicycle is bike , not non_network_bike , and we have always done it like that. In consequence, if the walk router called from, say, the pt router is a teleportation router, it will still return plain walk . The only exception is a network-based walk router: In that case, we indeed have non_network_walk access to the walk network, then a walk leg along the network, and a non_network_walk to the final destination. The implementation currently is via Attributable . Since there is no trip, we attach it to every leg. Trips that have inconsistent routing modes in their legs will lead to an error. We should probably consider to elevate the routing mode to a typed argument with a future population file. \u201cnon_network_walk\u201c will now only be used by the walk router if walk is routed over the network and only for access/egress to the walk network. It is some kind of fallback layer to access the network. All other modes can use the walk router to access the network. Per default the walk router is still a pure teleportation router NOT routing over the network. So in the end what was a non_network_walk \u2192 pt interaction \u2192 pt \u2192 pt interaction \u2192 non_network_walk trip will now per default be a walk \u2192 pt interaction \u2192 pt \u2192 pt interaction \u2192 walk trip with the plansCalcRoute and scoring parameters of walk !. Keep in mind that what was previously a direct walk \u201ctransit_walk\u201d is now a walk leg with routingMode pt and has the same scoring and plansCalcRoute parameters as walk with routingMode walk, so mode shift from one to the other does not necessarily mean a real change (that problem already existed before as the default for transit_walk was to copy parameters from walk). Similar issues apply to the other fallback modes ( drt_walk , drt_fallback ). Previously we had only the MainModeIdentifier which was used for two rather incompatible purposes (see https://matsim.atlassian.net/browse/MATSIM-26 for details): to identify the correct routing module to identify the main mode according to transportation planning. One example where this becomes clear are the somewhat weird \"main mode\" definition in the German travel survey ... which just has an arbitrary hierarchy for multi-modal trips. So this varies from country to country, and maybe even from survey to survey. We now split them up: is now explictly saved in the attribute routingMode ( and uses MainModeIdentifier for retrofitting old plans) AnalysisMainModeIdentifier binding, defaults to routingMode for backwards compatibility, but can be overwritten separately from MainModeIdentifier with something more useful for mode share analysis. This is only an analysis problem, you can now plug in an AnalysisMainModeIdentifier to fix this in analysis, e.g. overwrite the default with an hierachical MainModeIdentifier such as TransportPlanningMainModeIdentifier .","title":"Summary:"},{"location":"news/2019-12-05-matsim-news-now-on-github/","text":"The blog on Confluence is now deprecated. Due to continued breakages caused by Atlassian/Confluence changes, we\u2019ve decided to move the MATSim news blog directly onto the MATSim website. We have been mirroring these posts onto the website for a long time anyway, so now everything will be in one place. We continue to welcome MATSim-related news items, job postings, and event announcements. Now, you\u2019ll submit news by creating a pull request on Github.com with the content of your news item in Markdown format. Explicit directions for submitting news items: see https://matsim.org/submit-news And if those instructions aren\u2019t clear enough just let us know! Thank you! Hopefully this transition will be straightforward.","title":"MATSim news is now on matsim.org"},{"location":"news/2019-12-20-matsim-user-meeting-registration/","text":"Registration for the user meeting is now open on the page of the event , until February 27th, 2020. We encourage you to register at your earliest convenience, even if you do not yet know whether you will be able to come . This will help make sure we have enough seats and food for all participants, and you will have the possibility to pay only when you are sure to come.","title":"Registration for the User Meeting is now open"},{"location":"news/2020-01-13-jobPostSBB/","text":"The SBB business development team, located in Berne, Switzerland, is looking for a Simulation expert. The position has one focus on transport simulations, including MATSim, and their applications in strategical company planning. More information can be found here.","title":"Job Posting: Mobility Expert at SBB"},{"location":"news/2020-02-13-events-comparison-in-tests/","text":"There are many tests that at some point run EventsFileComparator.compare( filename1, filename2 ) I have now, somewhat as an experiment, added coordinates into the person arrival events. This will break the strict events comparison. I have therefore made the events comparison somewhat more flexible; you can now write new EventsFileComparator() .setIgnoringCoordinates(true) .runComparison(filename1, filename2) This will then ignore the coordinates in the comparison, and thus make the test pass again (if nothing else is broken). Since we are planning to play around a bit more with this (in the context of visualization), I would recommend to use this switch rather than replacing the reference events files.","title":"Events comparison in regression tests"},{"location":"news/2020-02-19-itm-seattle-2020/","text":"The organizers of the upcoming TRB Innovations in Travel Modeling conference reached out to me directly to solicit any MATSim-related \"late-breaking research\". They are keen to include MATSim on the program. Specifically there are some \"gaps\" in the content that they think MATSim talks could fill: New approaches for representing network supply Approaches to understanding and representing shared mobilities The organizers are considering a \"special issue\" of TRR (Transportation Research Record) so that submissions have a place to be published -- which is specifically being done to encourage academic contributions this time. More details below: Did you want to be on the program for the TRB Innovations in Travel Modeling Conference but didn't have anything to submit back when the call for content was out last summer? Are you working on something new and interesting that we should know about? Do you have \"something to say\" about one of these specific topics that we are building sessions around: Machine learning applications in travel analysis Approaches utilized for considering uncertainty in forecasts and case studies for the considering uncertainty in decision-making. Modeling methodologies to address dynamics in travel behavior and demand Approaches to understanding and representing shared mobilities Generalizable travel model construction methodologies and strategies New approaches for representing network supply Travel analysis and research workflow examples (aka we can be efficient and effective at our jobs) Travel analysis \"software stack\" examples (aka what tools do you use) A data standards that the industry should know about and use The Innovations in Travel Modeling Conference Planning Team is seeking limited content submissions thru March 3rd. Submissions can be made online at: https://forms.gle/KDkG9V6qJXdiTxQe6 These will have a quick turn-around in order to meet the Early Bird Registration Deadline of March 15th For more general conference information and to get your Early Bird Registration squared away, please visit the conference website . Cheers! Elizabeth Sall, on behalf of the TRB ITM 2020 Innovations in Travel Modeling Conference Planning Team","title":"TRB Innovations in Travel Modeling - call for late breaking research"},{"location":"news/2020-03-12-mum-cancelled/","text":"The MATSim User Meeting , which was to take place in Warsaw, Poland, on April 6th, had to be cancelled due to travel restrictions in the context of the containment measures for the current coronavirus outbreak. The date for the next user meeting is not fixed yet, and will be communicated in due time. We apologize for this inconvenience, and hope to see you again in the next user meetings.","title":"MATSim User Meeting Cancelled"},{"location":"news/2020-07-15-matsim-12-released/","text":"We released MATSim 12.0 last month, bringing various improvements and optimizations to MATSim. There were some API changes, e.g. how we handle undefined times. So if you write code yourself that uses MATSim, you might need to adapt it in some places when upgrading. Download the latest version of MATSim now!","title":"MATSim 12.0 released"},{"location":"news/2020-10-08-episim-berlin/","text":"Dear MATSim-Community, In this post we want to shortly present MATSim-EpiSim of the MATSim group in Berlin. Episim is an open source framework which can be used to simulate, based on MATSim events, an epidemic outbreak. In EpiSim we attach an infection model to the already existing mobility model. Agents can infect each other if they are simultaneously in the same facility or vehicle. If two agents have contact, the probability of infection depends on the following parameters: duration (comes directly from mobility model) contact intensity (depends on room size and air exchange) mask usage location: indoors or outdoors For COVID-19, EpiSim uses a disease progression model taken from literature. This means that an infected agent may transition to showing symptoms or requiring hospital or intensive care with certain probabilities and that agents can go into quarantine. EpiSim can be used to investigate the effects of non pharmaceutical interventions. These include the reduction of out-of-home activities (for example closing of schools), reduced use of public transport, wearing of masks, contact tracing and reduced disease import. Current simulation results for Berlin can be found here: https://covid-sim.info For more details, see the following preprint: https://doi.org/10.1101/2020.07.22.20160093 .","title":"EpiSim with MATSim"},{"location":"news/2020-10-08-open-positions-politechnique-montreal/","text":"MATSim Positions available at Polytechnique Montreal at the PhD/PostDoc level. Various topics available including: continuous calibration, integration of machine learning techniques, epidemic modeling. If interested please contact me at francesco.ciari@polymtl.ca","title":"MATSim Positions available at Polytechnique Montreal"},{"location":"news/2020-10-30-hermes/","text":"1. Introduction As means of transportation evolve, as the preferences of individuals change, and as the population increases, we need to understand what changes are required to our transportation networks in order to provide optimal service. One key element towards delivering this is large-scale simulation. However, the state-of-the-art tools we currently have at hand are unable to support such magnitudes (e.g. country-wide level such as Switzerland). For instance, using its default simulator, QSim, MATSim is expected to require roughly 116 days to carry out 1000 simulation iterations of Switzerland at 100% population. It is obvious that such execution times make large-scale scenarios impractical. After analyzing MATSim, we have found that the main scalability inhibitors are the data structures and algorithms in the simulation core, QSim. To this extent, we propose a novel, high-performance, scalable simulator for MATSim called Hermes. 2. Hermes Overview Hermes is a high-performance simulator which supports large-scale scenarios and repetitive what-if runs. It focuses on efficiently implementing the concepts behind transport simulation, and functions as an alternative to QSim. Figure 1 shows the new MATSim architecture with Hermes as its simulation core. Fig. 1: MATSim Architecture with the Hermes Simulator Hermes is built around one critical observation: in large-scale simulations, at every iteration, events are concentrated around a sparse set of areas in the graph. Hence, traversing the entire graph is wasteful. Hermes capitalizes on this point by exploiting an event-driven execution, where only the events taking place at a specific iteration are processed. This is in opposition to QSim's approach of processing each link and agent at each iteration. Hermes also introduces additional improvements, such as: optimized code paths for common events, optimized data structures, pre-computation and memoization, as well as efficient code which makes extensive use of primitive types. These features, together with the event-driven approach, enable Hermes to deliver efficient, large-scale simulations. It should be noted that Hermes does not compromise on extensibility, and allows users to plug in experimental events into the simulation. To the best of our knowledge, this is the only extension in the MATSim ecosystem which is both scalable and abides to the ecosystem's principles of extensibility and community-driven development. Quite notably, Hermes does not provide all the functionality that QSim has to offer, but focuses on the core, \"standard\" functionality. Different vehicle types and both private and public transport can be simulated in a similar way as with QSim. Special extensions such as dynamic vehicle routing, within-day replanning or traffic signals are however not supported. Nevertheless, a dual use of Hermes and QSim is in theory possible, where Hermes is used for some iterations and Qsim for others. 3. Hermes Architecture and Workflow Hermes' architecture consists of three main stages: Scenario Importer, Simulation Core, and Event Manager, as shown in Figure 1. We further describe what each stage does. Scenario Setup: Prepares the data structures used by the Simulation Core. These structures refer to the links that form the network, the agents that participate in the simulation, as well as other helpful data structures. Considering that an event defines what , when and how something happens in the network, and that we can readily extract the what and how from an agent plan, it follows that we can pre-compute all the events during the simulation by initially omitting the when . This latter piece of information is added at simulation time. Simulation Core: Performs the simulation itself using an event-driven algorithm. In its implementation, this stage employs a set of optimizations, which refer to: Avoiding Objectification, Avoiding Non-Contiguous Data Structures, Avoiding Polymorphism, and striving for Compact Hot-Code Paths . Event Processor: Processes events generated by the Simulation Core, and converts them to MATSim compatible structures. 4. Results Hermes has already been adopted by the SBB where it is being used in production. Here, we perform a simulation of Switzerland with 10% population (roughly 1M agents and 1.5M network links) over 301 iterations. We use a machine equipped with a Xeon Platinum 8168 (48 cores in total) at 2.70GHz, and 768GBs of RAM. Hermes uses 48 threads, while QSim uses 18 threads during simulation. Both simulations only use 130GBs of RAM. The average iteration time in Hermes is 3:33 minutes, while in QSim it is 8:45 minutes. This is a 2.5x speedup . The total simulation runtime is reduced by 40% , and is now dominated by MATSim's Replanning Step. Due to the differences in Hermes' and QSim's logic, the simulation results are not identical. These discrepancies are however very slight, and do not affect the overall quality of the results. For instance, transfer times and road congestion times in Hermes are marginally higher. Transportation mode distributions can also be subject to small differences, such as lower car usage in Hermes (around 1%), as can be seen in Figure 2. 5. Usage Hermes is part of the current MATSim snapshots and weekly releases and can be used out of the box by setting the \"mobsim\" parameter in the Controller Config-Group to \"hermes\". There is an additional Hermes Config Group, where some parameters should be set, many of them are similar to those in QSim: <module name=\"hermes\" > <!-- Simulation End Time --> <param name=\"endTime\" value=\"32:00:00\" /> <param name=\"flowCapacityFactor\" value=\"0.25\" /> <param name=\"mainMode\" value=\"car\" /> <param name=\"storageCapacityFactor\" value=\"0.25\" /> <!-- time in seconds. Time after which the frontmost vehicle on a link is called `stuck' if it does not move. Set to Integer.MAX_VALUE to disable this behavior --> <param name=\"stuckTime\" value=\"30\" /> <!-- treats PT as deterministic. PT vehicles will run with a steady speed according to their timetable. --> <param name=\"useDeterministicPt\" value=\"true\" /> </module> In addition to that, the event handling needs to be set to oneThreadPerHandler <module name=\"parallelEventHandling\" > \u2026 <param name=\"oneThreadPerHandler\" value=\"true\" /> \u2026 </module> Note: The FlowCapacityFactor setting should be set in accordance with the population sample size. The storageCapacityFactor might be set a little bit higher for small sample sizes (=< 10%). Hermes supports different vehicle types and PCUs. If PT is used on a congested network, the PCU equivalent for the transit vehicles should be defined in accordance with the sample size (i.e., for a 10% sample, a PT vehicle's PCUe should be set to 10%). For all other vehicles, an automatic scaling is performed. 6. Conclusions We have presented Hermes, a novel simulator for MATSim, which delivers high-performance and scalability using an event-driven design and numerous optimizations to the code and the data structures. We have shown Hermes' improved efficiency over QSim through production-level results. Moreover, Hermes is currently being successfully used in production by the SBB to simulate transportation networks within Switzerland. The simulator is currently integrated in MATSim, and is available via the latest weekly releases of MATSim 13 ( https://matsim.org/downloads/ ). 7. Acknowledgements We would like to thank the SBB for their generous support towards funding the project as part of the Mobility Initiative, and for the many fruitful discussions we have had the SBB Planning team. We would also like to thank Dr. Michel M\u00fcller (ETH), Dr. Marcel Rieser (SBB/Simunto), Prof. Gustavo Alonso (ETH), Prof. Torsten Hoefler (ETH) and Wolfgang Scherr (SBB) for their many contributions and ideas on this project.","title":"Introducing HERMES"},{"location":"news/2020-12-07-news-item/","text":"Under the project \u201cSustainable Transport Under Pandemic Context\u201d, University of Littoral has an immediate position for a postdoc researcher to work on MATsim. The project is related to transport modeling in the North of France with a focus on the improvement of calibration techniques and the implementation of epidemiological model. The position is for a period of 12 months with a net salary about 2,200 \u20ac per month. We are seeking a candidate who is familiar with agent-based traffic modelling, who have and experience with MATsim (or similar simulators). The selection will be based on the main criteria: technical skills in transport modeling, data gathering and processing (databases) model calibration output analysis and experience with MATsim (or similar tools) motivation to work on transport modeling familiarities with Java/Eclipse environment ability to process XML files Other criteria that will be considered: * skills in the manipulation of geographical information systems * big data and statistical analysis * knowledge of epidemiological models * experience with mathematical optimisation methods For more information please contact Prof Moez KILANI moez.kilani@univ-littoral.fr or Prof Daniel DE WOLF daniel.dewolf@univ-littoral.fr .","title":"Postdoc position"},{"location":"news/2021-01-05-ulco-murdasp/","text":"Under the project \u201cSustainable Transport Under Pandemic Context\u201d, University of Littoral has an immediate position for a postdoc researcher to work on MATsim. The project is related to transport modeling in the North of France with a focus on the improvement of calibration techniques and the implementation of epidemiological model. The position is for a period of 12 months with a net salary about 2,200 \u20ac per month. We are seeking a candidate who is familiar with agent-based traffic modelling, who have and experience with MATsim (or similar simulators). Selection criteria \u00b6 The selection will be based on the main criteria: technical skills in transport modeling, data gathering and processing (databases) model calibration output analysis and experience with MATsim (or similar tools) motivation to work on transport modeling familiarities with Java/Eclipse environment ability to process XML files Other criteria that will be considered: * skills in the manipulation of geographical information systems * big data and statistical analysis * knowledge of epidemiological models * experience with mathematical optimisation methods Contact \u00b6 For more information please contact Prof Moez KILANI moez.kilani@univ-littoral.fr or Prof Daniel DE WOLF daniel.dewolf@univ-littoral.fr .","title":"Postdoc position at University of Littoral (Dunkerque)"},{"location":"news/2021-01-05-ulco-murdasp/#selection-criteria","text":"The selection will be based on the main criteria: technical skills in transport modeling, data gathering and processing (databases) model calibration output analysis and experience with MATsim (or similar tools) motivation to work on transport modeling familiarities with Java/Eclipse environment ability to process XML files Other criteria that will be considered: * skills in the manipulation of geographical information systems * big data and statistical analysis * knowledge of epidemiological models * experience with mathematical optimisation methods","title":"Selection criteria"},{"location":"news/2021-01-05-ulco-murdasp/#contact","text":"For more information please contact Prof Moez KILANI moez.kilani@univ-littoral.fr or Prof Daniel DE WOLF daniel.dewolf@univ-littoral.fr .","title":"Contact"},{"location":"news/2021-02-10-matsim-user-meeting-2021/","text":"The recordings and presentations form the MATSim User Meeting 2021 are available at the IVT webpage . MATSim User Meeting 2021 will be organized as a virtual event on March 22, 2021. If you would like to present your work we invite you to submit a short abstract until 01.03. at: Abstract Submission Page We will try to accommodate all time zones and to give everyone a chance to present their work. All the updates regarding the Meeting will be published here. The attendance will be free of charge. For those that do not want to present, but are still interested to attend the meeting, please fill out this form: Non-presenter Registration Link The schedule can be downloaded from here . In case of questions please contact Milos Balac or Stefano Penazzi .","title":"MATSim User Meeting 2021"},{"location":"news/2021-04-12-matsim-13-released/","text":"MATSim 13.0 \u00b6 We're happy to announce the release of MATSim 13.0. Among many small changes and improvements, here are a few highlights of this release: SwissRailRaptor is now the default transit router. If you have enabled SwissRailRaptor yourself in the code (e.g. with controler.addOverridingModule(new SwissRailRaptorModule()); ), you should now remove this line as not to enable it twice. There is a new, faster routing algorithm names SpeedyALT available for network (e.g. car ) routing. It can be enabled in the config and used in place of Dijkstra , AStarLandmarks or any of the other existing routing algorithms. Adding Hermes, a faster alternative to QSim for some scenarios (Hermes does not support all features that QSim does). Vehicles can have attributes. Support for cordon toll was removed from road pricing. In addition, several contribs saw major work going on (e.g. the whole MAAS group: DRT, DVRP, ...), so if you are not yet on a recent weekly snapshot, make sure to upgrade to version 13.0 soon to benefit from all the work. To use the new version from your code as a Maven dependency, please note that you need to update the repository, as outlined in the next section. New Maven Repository \u00b6 For the last few years, we've hosted our jar-files in a Maven repository hosted by BinTray. Recently, BinTray announced that it shuts down its service for open source projects. We have thus migrated our MATSim releases to a new Maven repository. Please update your pom.xml to use the following repository: <repository> <!-- Repository for MATSim releases and snapshots (MATSim is not on Maven central) --> <id> matsim </id> <url> https://repo.matsim.org/repository/matsim </url> </repository> The two old repositories for releases ( dl.bintray.com/matsim/matsim ) and for snapshots ( https://oss.jfrog.org/libs-snapshot ) can be removed from the pom.","title":"MATSim 13.0 released, and new Maven Repository"},{"location":"news/2021-04-12-matsim-13-released/#matsim-130","text":"We're happy to announce the release of MATSim 13.0. Among many small changes and improvements, here are a few highlights of this release: SwissRailRaptor is now the default transit router. If you have enabled SwissRailRaptor yourself in the code (e.g. with controler.addOverridingModule(new SwissRailRaptorModule()); ), you should now remove this line as not to enable it twice. There is a new, faster routing algorithm names SpeedyALT available for network (e.g. car ) routing. It can be enabled in the config and used in place of Dijkstra , AStarLandmarks or any of the other existing routing algorithms. Adding Hermes, a faster alternative to QSim for some scenarios (Hermes does not support all features that QSim does). Vehicles can have attributes. Support for cordon toll was removed from road pricing. In addition, several contribs saw major work going on (e.g. the whole MAAS group: DRT, DVRP, ...), so if you are not yet on a recent weekly snapshot, make sure to upgrade to version 13.0 soon to benefit from all the work. To use the new version from your code as a Maven dependency, please note that you need to update the repository, as outlined in the next section.","title":"MATSim 13.0"},{"location":"news/2021-04-12-matsim-13-released/#new-maven-repository","text":"For the last few years, we've hosted our jar-files in a Maven repository hosted by BinTray. Recently, BinTray announced that it shuts down its service for open source projects. We have thus migrated our MATSim releases to a new Maven repository. Please update your pom.xml to use the following repository: <repository> <!-- Repository for MATSim releases and snapshots (MATSim is not on Maven central) --> <id> matsim </id> <url> https://repo.matsim.org/repository/matsim </url> </repository> The two old repositories for releases ( dl.bintray.com/matsim/matsim ) and for snapshots ( https://oss.jfrog.org/libs-snapshot ) can be removed from the pom.","title":"New Maven Repository"},{"location":"news/2021-04-26-PR-labelled-releases/","text":"PR-labelled releases \u00b6 In mid-April, we introduced PR-labelled releases (or shortly, PR releases). It basically means that every time a pull request (PR) is merged, a PR-labelled MATSim version is released. Their version ID is structured in the following way: ${matsim_version_id}-PR${pull_request_id} . The first PR-labelled version released is 14.0-PR1452 , which can be read as \"pre-release PR1452 of MATSim 14.0\" . The RP-labelled releases is a high-frequency (after every PR is merged), low-latency (< 10 minutes) release stream that allows you to stay in sync with the latest features introduced to MATSim without the need of relying on the snapshot releases (i.e. ${matsim_version_id}-SNAPSHOT , e.g. 14.0-SNAPSHOT ). Why to use PR releases? \u00b6 Using snapshot releases as dependencies is always risky. 14.0-SNAPSHOT is a moving target until it gets released as 14.0 (only then it becomes an immutable artifact). While depending on the snapshot version, you may experience situations when something that worked once may not work (or work differently) next time, because there have been some changes introduced to MATSim in the meantime. On the other hand, weekly releases, being immutable artifacts, are stable, but they are not released frequently enough for developers or users to stay in sync with the very latest changes in MATSim. The PR releases fill the gap between these two release types. Moreover, their high frequency of releasing simplifies analysing a potential impact of each individual PR on the project that uses MATSim. How to use PR releases? \u00b6 Since we have recently migrated our maven repository, this requires a few simple changes in pom.xml of any project that depends on MATSim. As an example, please have a look at commit c971f24 that switches the MATSim version ID from 13.0-SNAPSHOT to 14.0-PR1452 and changes the MATSim maven repository in the MATSim MaaS project. Weekly releases \u00b6 In addition to the new PR releases, you can still use the weekly releases (released every Monday). From week 17, 2021, we release them as non-snapshots, so their name will not be suffixed with -SNAPSHOT (e.g. 14.0-2021w17 instead of 14.0-2021w17-SNAPSHOT ). How to use weekly releases? \u00b6 If you want to use the latest weekly releases ( 2021w15-SNAPSHOT and newer), adjust the MATSim version ID and the repository accordingly ( similar to How to use PR releases? ). However, if you want to keep on using older weekly releases ( 2021w14-SNAPSHOT and older), you do not need to update anything (the old weekly releases are available from the old snapshot repository, hosted by jFrog). Improved CI build pipelines \u00b6 Since November 2020, we have been migrating the most time-critical continuous integration workflows to GitHub Actions. By doing so, we are now able to: verify each pushed commit in 15-30 min release the PR-labelled and snapshot versions in 5-10 min (after merging a PR) This should significantly improve your experiences in developing or using the new features in MATSim.","title":"PR-labelled releases"},{"location":"news/2021-04-26-PR-labelled-releases/#pr-labelled-releases","text":"In mid-April, we introduced PR-labelled releases (or shortly, PR releases). It basically means that every time a pull request (PR) is merged, a PR-labelled MATSim version is released. Their version ID is structured in the following way: ${matsim_version_id}-PR${pull_request_id} . The first PR-labelled version released is 14.0-PR1452 , which can be read as \"pre-release PR1452 of MATSim 14.0\" . The RP-labelled releases is a high-frequency (after every PR is merged), low-latency (< 10 minutes) release stream that allows you to stay in sync with the latest features introduced to MATSim without the need of relying on the snapshot releases (i.e. ${matsim_version_id}-SNAPSHOT , e.g. 14.0-SNAPSHOT ).","title":"PR-labelled releases"},{"location":"news/2021-04-26-PR-labelled-releases/#why-to-use-pr-releases","text":"Using snapshot releases as dependencies is always risky. 14.0-SNAPSHOT is a moving target until it gets released as 14.0 (only then it becomes an immutable artifact). While depending on the snapshot version, you may experience situations when something that worked once may not work (or work differently) next time, because there have been some changes introduced to MATSim in the meantime. On the other hand, weekly releases, being immutable artifacts, are stable, but they are not released frequently enough for developers or users to stay in sync with the very latest changes in MATSim. The PR releases fill the gap between these two release types. Moreover, their high frequency of releasing simplifies analysing a potential impact of each individual PR on the project that uses MATSim.","title":"Why to use PR releases?"},{"location":"news/2021-04-26-PR-labelled-releases/#how-to-use-pr-releases","text":"Since we have recently migrated our maven repository, this requires a few simple changes in pom.xml of any project that depends on MATSim. As an example, please have a look at commit c971f24 that switches the MATSim version ID from 13.0-SNAPSHOT to 14.0-PR1452 and changes the MATSim maven repository in the MATSim MaaS project.","title":"How to use PR releases?"},{"location":"news/2021-04-26-PR-labelled-releases/#weekly-releases","text":"In addition to the new PR releases, you can still use the weekly releases (released every Monday). From week 17, 2021, we release them as non-snapshots, so their name will not be suffixed with -SNAPSHOT (e.g. 14.0-2021w17 instead of 14.0-2021w17-SNAPSHOT ).","title":"Weekly releases"},{"location":"news/2021-04-26-PR-labelled-releases/#how-to-use-weekly-releases","text":"If you want to use the latest weekly releases ( 2021w15-SNAPSHOT and newer), adjust the MATSim version ID and the repository accordingly ( similar to How to use PR releases? ). However, if you want to keep on using older weekly releases ( 2021w14-SNAPSHOT and older), you do not need to update anything (the old weekly releases are available from the old snapshot repository, hosted by jFrog).","title":"How to use weekly releases?"},{"location":"news/2021-04-26-PR-labelled-releases/#improved-ci-build-pipelines","text":"Since November 2020, we have been migrating the most time-critical continuous integration workflows to GitHub Actions. By doing so, we are now able to: verify each pushed commit in 15-30 min release the PR-labelled and snapshot versions in 5-10 min (after merging a PR) This should significantly improve your experiences in developing or using the new features in MATSim.","title":"Improved CI build pipelines"},{"location":"news/2021-05-03-job-opening-moia/","text":"The mobility analytics & research section of MOIA is looking for a Transport Modeling/Simulation Specialist in Hamburg or Berlin. A focus of the position is the development and application of MATSim to develop MOIA's future ride-pooling system. More information can be found here .","title":"Job posting: Transport Modeling Specialist at MOIA"},{"location":"news/2021-05-27-research-assistant-covid19/","text":"[For English please see below] Bei der Technischen Universit\u00e4t Berlin ist die folgende Stelle zu besetzen: Wiss. Mitarbeiter*in (d/m/w) - Entgeltgruppe 13 TV-L Berliner Hochschulen Im Rahmen des BMBF-gef\u00f6rderten Projektes \u201eModellgest\u00fctzte Untersuchung von Schulschlie\u00dfungen und weiteren Ma\u00dfnahmen zur Eind\u00e4mmung von COVID-19\u201c. Teilzeitbesch\u00e4ftigung ist ggf. m\u00f6glich Fakult\u00e4t V - Institut f\u00fcr Land- und Seeverkehr / FG Verkehrssystemplanung und Verkehrstelematik Kennziffer: V-258/21 (besetzbar ab sofort / befristet bis 31.03.2024, Verl\u00e4ngerung wird angestrebt / Bewerbungsfristende 18.06.2021) Aufgabenbeschreibung: Mitarbeit im Forschungsprojekt MODUS-COVID. Zentraler Bestandteil des Forschungsprojektes ist die simulationsbasierte Untersuchung von Infektionsdynamiken im urbanen, regionalen und bundesweiten Kontext. Das Ziel ist dabei, die Reaktion der Infektionsdynamik auf unterschiedliche Eingriffe (z.B. Schulschlie\u00dfungen) zu prognostizieren und anschlie\u00dfend eine Bewertung der Wirksamkeit dieser Eingriffe vorzunehmen. Mitarbeit am Fachgebiet in Forschung sowie Unterst\u00fctzung der Lehre. Zusammenarbeit mit nationalen und internationalen Partnern. Erwartete Qualifikationen: Erforderlich: Erfolgreich abgeschlossenes wissenschaftliches Hochschulstudium (Master, Diplom oder \u00c4quivalent) im technisch-naturwissenschaftlichem Bereich. Organisationstalent, Kommunikationsf\u00e4higkeiten und Durchsetzungsverm\u00f6gen. Klar erkennbare strukturierte und prozessorientierte Arbeitsweise. Kenntnisse im Umgang mit Analysesoftware (z.B. R oder Python). Gute Deutsch- und Englischkenntnisse in Wort und Schrift. Gute analytische F\u00e4higkeiten, Teamf\u00e4higkeit. Interesse am Thema. Vorteilhaft: Erfahrungen im Umgang mit agentenbasierten Modellen und / oder epidemiologischen Modellen. Multidisziplin\u00e4re Ausrichtung. Erfahrungen mit Java, Versionierungs- und Shared-Programming-Infrastrukturen (z.B. Git) und / oder gr\u00f6\u00dferen Programmierprojekten. Eine Verl\u00e4ngerung nach Ende der Projektlaufzeit wird angestrebt. In Verbindung mit der ausgeschriebenen T\u00e4tigkeit ist die Durchf\u00fchrung einer Promotion m\u00f6glich und ausdr\u00fccklich erw\u00fcnscht. Die Ausschreibung richtet sich jedoch ausdr\u00fccklich auch an bereits promovierte Interessenten. Ihre Bewerbung richten Sie bitte unter Angabe der Kennziffer mit den \u00fcblichen Unterlagen (Lebenslauf, Schulabschlusszeugnisse, Studienabschlusszeugnisse, ggf. Arbeitszeugnisse) ausschlie\u00dflich per E-Mail in einem zusammengefassten pdf-Dokument an Prof. Dr. Nagel unter bewerbung@vsp.tu-berlin.de . Mit der Abgabe einer Onlinebewerbung geben Sie als Bewerber*in Ihr Einverst\u00e4ndnis, dass Ihre Daten elektronisch verarbeitet und gespeichert werden. Wir weisen darauf hin, dass bei ungesch\u00fctzter \u00dcbersendung Ihrer Bewerbung auf elektronischem Wege keine Gew\u00e4hr f\u00fcr die Sicherheit \u00fcbermittelter pers\u00f6nlicher Daten \u00fcbernommen werden kann. Datenschutzrechtliche Hinweise zur Verarbeitung Ihrer Daten gem. DSGVO finden Sie auf der Webseite der Personalabteilung oder Direktzugang: 214041. Zur Wahrung der Chancengleichheit zwischen Frauen und M\u00e4nnern sind Bewerbungen von Frauen mit der jeweiligen Qualifikation ausdr\u00fccklich erw\u00fcnscht. Schwerbehinderte werden bei gleicher Eignung bevorzugt ber\u00fccksichtigt. Die TU Berlin sch\u00e4tzt die Vielfalt ihrer Mitglieder und verfolgt die Ziele der Chancengleichheit. Technische Universit\u00e4t Berlin - Der Pr\u00e4sident - Fakult\u00e4t V, Institut f\u00fcr Land- und Seeverkehr, FG Verkehrssystemplanung und Verkehrstelematik, Prof. Dr. Nagel, Sekr. SG 12, Salzufer 17-19, 10587 Berlin Die Stellenausschreibung ist auch im Internet abrufbar unter: http://www.personalabteilung.tu-berlin.de/menue/jobs/ English Technische Universit\u00e4t Berlin offers an open position: Research Assistant - salary grade E13 TV-L Berliner Hochschulen In the context of the BMBF-funded project \"Model-supported investigation of school closures and further measures for the containment of COVID-19\". Part-time employment may be possible. Faculty V - Institute of Land and Sea Transport Systems / Transport Systems Planning and Transport Telematics Reference number: V-258/21 (starting at the earliest possible / limited until 31.03.2024, an extension of the contract is desired / closing date for applications 18/06/21) Working field: Collaboration in the MODUS-COVID research project. The central component of the research project is the simulation- based investigation of infection dynamics in an urban, regional and nationwide context. The goal is to predict the response of infection dynamics to different interventions (e.g., school closures) and subsequently evaluate the effectiveness of these interventions. Assisting the department in teaching and research. Collaborate with national and international partners. Requirements: Required: Successfully completed university degree (Master, Diplom or equivalent) in a technical/scientific field. Organizational talent, communication skills and assertiveness. Clearly recognizable structured and process-oriented way of working. Knowledge of using analytical software (e.g. R or Python). Good German and English skills, both written and spoken. Good analytical skills, ability to work in a team. Interest in the topic. Advantageous: Experience in working with agent-based models and / or epidemiological models. Multidisciplinary orientation. Experience with Java, versioning and shared programming infrastructures (e.g. Git) and / or larger programming projects. An extension of the contract after the end of the project duration is intended if possible. In connection with the advertised position, the completion of a PhD is possible and explicitly desired. However, the position is also explicitly directed at interested parties who already hold a doctorate. Please send your application with the reference number and the usual documents (curriculum vitae, A-level exam certificates, Diplom/Master certificate and, if applicable, references) only by email combined in a single pdf file to Prof. Dr. Nagel at bewerbung@vsp.tu-berlin.de . By submitting your application via email you consent to having your data electronically processed and saved. Please note that we do not provide a guaranty for the protection of your personal data when submitted as unprotected file. Please find our data protection notice acc. DSGVO (General Data Protection Regulation) at the TU staff department homepage or quick access 214041. To ensure equal opportunities between women and men, applications by women with the required qualifications are explicitly desired. Qualified individuals with disabilities will be favored. The TU Berlin values the diversity of its members and is committed to the goals of equal opportunities. Technische Universit\u00e4t Berlin - Der Pr\u00e4sident - Fakult\u00e4t V, Institut f\u00fcr Land- und Seeverkehr, FG Verkehrssystemplanung und Verkehrstelematik, Prof. Dr. Nagel, Sekr. SG 12, Salzufer 17-19, 10587 Berlin The vacancy is also available on the internet at http://www.personalabteilung.tu-berlin.de/menue/jobs/","title":"Research assistant/PhD candidate position at Transport Systems Planning and Transport Telematics, TU Berlin"},{"location":"news/2021-05-27-research-position-bmvi/","text":"[For English please see below] Bei der Technischen Universit\u00e4t Berlin ist folgende Stelle zu besetzen: Wiss. Mitarbeiter*in (d/m/w) - Entgeltgruppe 13 TV-L Berliner Hochschulen Teilzeitbesch\u00e4ftigung ist ggf. m\u00f6glich Fakult\u00e4t V - Institut f\u00fcr Land- und Seeverkehr / FG Verkehrssystemplanung und Verkehrstelematik **Kennziffer: V-280/21** (besetzbar ab sofort / befristet bis 31.12.2023, Verl\u00e4ngerung wird angestrebt / Bewerbungsfristende 18.06.2021) Aufgabenbeschreibung Wissenschaftliche Mitarbeit im Rahmen des BMVI-gef\u00f6rderten Projektes \u201eImplementierung eines wetterunabh\u00e4ngigen und hochautomatisierten Ridesharing-Dienstes unter Anwendung von KI im Landkreis Kelheim als Erg\u00e4nzung zum regionalen \u00d6PNV und zur Erm\u00f6glichung von Mobilit\u00e4t f\u00fcr eine erweiterte Zielgruppe Teilvorhaben: Simulationsgest\u00fctzte Untersuchung von Verkehrs- und Umweltwirkungen\u201c. Koordination des obigen Forschungsprojektes. Mitarbeit am Fachgebiet in Forschung sowie Unterst\u00fctzung der Lehre. Zusammenarbeit mit nationalen und internationalen Partnern. In Verbindung mit der ausgeschriebenen T\u00e4tigkeit ist die Durchf\u00fchrung einer Promotion m\u00f6glich und ausdr\u00fccklich erw\u00fcnscht. Die Ausschreibung richtet sich jedoch ausdr\u00fccklich auch an bereits promovierte Interessenten. Erwartete Qualifikationen: Erfolgreich abgeschlossenes wissenschaftliches Hochschulstudium (Diplom, Master oder \u00c4quivalent) in Verkehrswesen, Wirtschaftsingenieurwesen oder Wirtschaftswissenschaften oder vergleichbar. Organisationstalent, Kommunikationsf\u00e4higkeiten und Durchsetzungsverm\u00f6gen. Klar erkennbare strukturierte und prozessorientierte Arbeitsweise. Kenntnisse im Bereich der Verkehrsplanung. Kenntnisse im Umgang mit Analysesoftware (z.B. R oder Python). Sehr gute Deutschkenntnisse in Wort und Schrift. Gute Englischkenntnisse in Wort und Schrift. Gute analytische F\u00e4higkeiten, Teamf\u00e4higkeit. Interesse am Thema. Vorteilhaft Erfahrungen mit Simulationen. Multidisziplin\u00e4re Ausrichtung. Erfahrungen mit Java, Versionierungs- und Shared-Programming-Infrastrukturen (z.B. Git) und / oder gr\u00f6\u00dferen Pro- grammierprojekten. Ihre Bewerbung richten Sie bitte unter Angabe der Kennziffer mit den \u00fcblichen Unterlagen (Lebenslauf, Schulabschlusszeugnisse, Studienabschlusszeugnisse, ggf. Arbeitszeugnisse) ausschlie\u00dflich per E-Mail in einem zusammengefassten pdf-Dokument an Prof. Dr. Nagel \u00fcber bewerbung@vsp.tu-berlin.de . Mit der Abgabe einer Onlinebewerbung geben Sie als Bewerber*in Ihr Einverst\u00e4ndnis, dass Ihre Daten elektronisch verarbeitet und gespeichert werden. Wir weisen darauf hin, dass bei ungesch\u00fctzter \u00dcbersendung Ihrer Bewerbung auf elektronischem Wege keine Gew\u00e4hr f\u00fcr die Sicherheit \u00fcbermittelter pers\u00f6nlicher Daten \u00fcbernommen werden kann. Datenschutzrechtliche Hinweise zur Verarbeitung Ihrer Daten gem. DSGVO finden Sie auf der Webseite der Personalabteilung oder Direktzugang: 214041. Zur Wahrung der Chancengleichheit zwischen Frauen und M\u00e4nnern sind Bewerbungen von Frauen mit der jeweiligen Qualifikation ausdr\u00fccklich erw\u00fcnscht. Schwerbehinderte werden bei gleicher Eignung bevorzugt ber\u00fccksichtigt. Die TU Berlin sch\u00e4tzt die Vielfalt Ihrer Mitglieder und verfolgt die Ziele der Chancengleichheit. Technische Universit\u00e4t Berlin - Der Pr\u00e4sident - Fakult\u00e4t V, Institut f\u00fcr Land- und Seeverkehr, FG Verkehrssystemplanung und Verkehrstelematik, Sekr. SG 12, Salzufer 17-19, 10587 Berlin Die Stellenausschreibung ist auch im Internet abrufbar unter: http://www.personalabteilung.tu-berlin.de/menue/jobs/ ENGLISH Technische Universit\u00e4t Berlin offers an open position: Research assistant - salary grade E 13 TV-L Berliner Hochschulen part-time employment may be possible. Faculty V - Institute of Land and Maritime Transport / Chair of Transport System Planning and Transport Telematics Reference number: V-280/21 (starting at the earliest possible / limited until 31/12/2023, prolongation is disired / closing date for applications 18/06/21) Working field: Research in the context of the BMVI-funded project \"Implementation of a weather-independent and highly automated ridesharing service using AI in the district of Kelheim as a complement to regional public transport and to enable mobility for an extended target group subproject: Simulation-based investigation of traffic and environmental impacts\". Coordination of the aforementioned research project. Assisting the department in teaching and research. Collaboration with national and international partners. In connection with this position, the completion of a PhD is possible and explicitly desired. However, the position is also explicitly directed at interested parties who already hold a doctorate. Requirements: Successfully completed university degree (Diplom, Master or equivalent) in transport planning, industrial engineering, economics or comparable. Organizational talent, communication skills and assertiveness. Clearly identifiable structured and process-oriented approach to work. Knowledge in the field of transportation planning. Competent with analytical programming languages (e.g. R or Python). Very good knowledge of German, both written and spoken. Good English skills, both written and spoken. Good analytical skills, team spirit. Interest in the topic. Desirable Experience with simulations. Multidisciplinary orientation. Experience with Java, versioning and shared programming infrastructures (e.g. Git) and / or larger programming projects. Please send your application with the reference number and the usual documents (curriculum vitae, A-level exam certificates, Diplom/Master certificate and, if applicable, references) only by e-mail in one summarized pdf document to Prof. Dr. Nagel via bewerbung@vsp.tu-berlin.de . By submitting your application via email you consent to having your data electronically processed and saved. Please note that we do not provide a guaranty for the protection of your personal data when submitted as unprotected file. Please find our data protection notice acc. DSGVO (General Data Protection Regulation) at the TU staff department homepage or quick access 214041. To ensure equal opportunities between women and men, applications by women with the required qualifications are explicitly desired. Qualified individuals with disabilities will be favored. The TU Berlin values the diversity of its members and is committed to the goals of equal opportunities. Technische Universit\u00e4t Berlin - Der Pr\u00e4sident - Fakult\u00e4t V, Institut f\u00fcr Land- und Seeverkehr, FG Verkehrssystemplanung und Verkehrstelematik, Sekr. SG 12, Salzufer 17-19, 10587 Berlin The vacancy is also available on the internet at http://www.personalabteilung.tu-berlin.de/menue/jobs/","title":"Research assistant/PhD candidate position at Transport Systems Planning and Transport Telematics, TU Berlin"},{"location":"news/2021-05-27-research-position-v/","text":"[For English please see below] Im Rahmen verschiedener Forschungsprojekte im Umfeld der Verkehrsmodellierung mit MATsim suchen wir Verst\u00e4rkung f\u00fcr unser Team. Wiss. Mitarbeiter*in (d/m/w) - Entgeltgruppe 13 TV-L Berliner Hochschulen Teilzeitbesch\u00e4ftigung ist ggf. m\u00f6glich Fakult\u00e4t V - Institut f\u00fcr Land- und Seeverkehr / FG Verkehrssystemplanung und Verkehrstelematik Kennziffer: V-279/21 (besetzbar ab sofort / befristet bis 31.03.2024, Verl\u00e4ngerung wird angestrebt / Bewerbungsfristende 18.06.2021) Aufgabenbeschreibung: Mitarbeit nach Interesse in verschiedenen Forschungsprojekten im Bereich der Modellierung von CO2-freiem Verkehr, autonomen Fahrzeugen und Virusdynamik. Mitarbeit am Fachgebiet in Forschung sowie Unterst\u00fctzung der Lehre. Weiterentwicklung von Multiagentensimulationsmodellen in MATSim. Zusammenarbeit mit nationalen und internationalen Partnern. In Verbindung mit der ausgeschriebenen T\u00e4tigkeit ist die Durchf\u00fchrung einer Promotion m\u00f6glich und ausdr\u00fccklich erw\u00fcnscht. Erwartete Qualifikationen: Erfolgreich abgeschlossenes wissenschaftliches Hochschulstudium (Diplom, Master oder \u00c4quivalent) in Planung und Betrieb im Verkehrswesen oder vergleichbar oder Wirtschaftsingenieurwesen oder Informatik. Erfahrungen mit Simulationswerkzeugen. Gute Programmierkenntnisse, vorzugsweise in Java. Gute Englisch- oder Deutschkenntnisse in Wort und Schrift. Gute analytische F\u00e4higkeiten, Teamf\u00e4higkeit. Interesse am Thema. Erw\u00fcnscht: Erfahrungen im Umgang mit der Simulationssoftware MATSim. Erfahrungen mit der Benutzung von Versionierungs- und Shared-Programming-Infrastrukturen, z.B. Git/GitHub oder SVN. Erfahrungen mit gr\u00f6\u00dferen Programmierprojekten. Kenntnisse bzgl. der Kalibrierung von Simulationsszenarien. Multidisziplin\u00e4re Ausrichtung. Ihre Bewerbung richten Sie bitte unter Angabe der Kennziffer mit den \u00fcblichen Unterlagen (Lebenslauf, Schulabschlusszeugnisse, Studienabschlusszeugnisse, ggf. Arbeitszeugnisse) ausschlie\u00dflich per E-Mail in einem zusammengefassten pdf-Dokument an Prof. Dr. Nagel \u00fcber bewerbung@vsp.tu-berlin.de . Mit der Abgabe einer Onlinebewerbung geben Sie als Bewerber*in Ihr Einverst\u00e4ndnis, dass Ihre Daten elektronisch verarbeitet und gespeichert werden. Wir weisen darauf hin, dass bei ungesch\u00fctzter \u00dcbersendung Ihrer Bewerbung auf elektronischem Wege keine Gew\u00e4hr f\u00fcr die Sicherheit \u00fcbermittelter pers\u00f6nlicher Daten \u00fcbernommen werden kann. Datenschutzrechtliche Hinweise zur Verarbeitung Ihrer Daten gem. DSGVO finden Sie auf der Webseite der Personalabteilung oder Direktzugang: 214041. Zur Wahrung der Chancengleichheit zwischen Frauen und M\u00e4nnern sind Bewerbungen von Frauen mit der jeweiligen Qualifikation ausdr\u00fccklich erw\u00fcnscht. Schwerbehinderte werden bei gleicher Eignung bevorzugt ber\u00fccksichtigt. Die TU Berlin sch\u00e4tzt die Vielfalt Ihrer Mitglieder und verfolgt die Ziele der Chancengleichheit. Technische Universit\u00e4t Berlin - Der Pr\u00e4sident - Fakult\u00e4t V, Institut f\u00fcr Land- und Seeverkehr, FG Verkehrssystemplanung und Verkehrstelematik, Sekr. SG 12, Salzufer 17-19, 10587 Berlin Die Stellenausschreibung ist auch im Internet abrufbar unter: http://www.personalabteilung.tu-berlin.de/menue/jobs/ English: In the context of various research projects in the field of traffic modeling with MATSim, we are looking for a reinforcement for our team. Research assistant - salary grade E 13 TV-L Berliner Hochschulen part-time employment may be possible. Faculty V - Institute of Land and Maritime Transport / Chair of Transport System Planning and Transport Telematics Reference number: V-279/21 (starting at the earliest possible / limited until 31/03/2024, prolongation is disired / closing date for applications 18/06/21) Working field: Collaboration in various research projects in the field of modeling CO2-free traffic, autonomous vehicles and virus dynamics. Assisting the department in research as well as teaching. Further development of multi-agent simulation models in MATSim. Collaboration with national and international partners. In connection with the advertised position, the completion of a doctorate is possible and expressly desired. Requirements: Successfully completed university degree (Diplom, Master or equivalent) in transport planning or similar, industrial engineering or computer science. Experience with simulation tools. Good programming skills, preferably in Java. Good English or German language skills, both written and spoken. Good analytical skills. Team spirit. Interest in the topic. Desirable: Experience in using the simulation software MATSim. Experience with using versioning and shared programming infrastructures, e.g. Git/GitHub or SVN. Experience with larger programming projects. Knowledge regarding calibration of simulation scenarios. Multidisciplinary orientation. Please send your application with the reference number and the usual documents (curriculum vitae, A-level exam certificates, Diplom/Master certificate and, if applicable, references) only by e-mail in one summarized pdf document to Prof. Dr. Nagel via bewerbung@vsp.tu-berlin.de . By submitting your application via email you consent to having your data electronically processed and saved. Please note that we do not provide a guaranty for the protection of your personal data when submitted as unprotected file. Please find our data protection notice acc. DSGVO (General Data Protection Regulation) at the TU staff department homepage or quick access 214041. To ensure equal opportunities between women and men, applications by women with the required qualifications are explicitly desired. Qualified individuals with disabilities will be favored. The TU Berlin values the diversity of its members and is committed to the goals of equal opportunities. Technische Universit\u00e4t Berlin - Der Pr\u00e4sident - Fakult\u00e4t V, Institut f\u00fcr Land- und Seeverkehr, FG Verkehrssystemplanung und Verkehrstelematik, Sekr. SG 12, Salzufer 17-19, 10587 Berlin The vacancy is also available on the internet at http://www.personalabteilung.tu-berlin.de/menue/jobs/","title":"Research assistant/PhD candidate position at Transport Systems Planning and Transport Telematics, TU Berlin"},{"location":"news/2021-06-08-research-position/","text":"Estimating traffic-related energy consumption and pollutant emissions is a complex problem that is relevant for a wide range of problems, from planning to operations. In particular, energy efficiency and pollution metrics play a fundamental role in the environmental impact assessment of new technologies, such as smart cities or connected, cooperative, and autonomous mobility, in order to evaluate new algorithms or the impact of upcoming products. Besides the characteristics of the road network, the key role in determining these environmental metrics is played by the speed trajectories followed by the vehicles in the network. Most of existing methods provide only mean-value estimations per road-link. However, mean speed is largely insufficient to capture the dynamic behavior that is responsible for local peaks and affects substantially the total amount. Therefore instantaneous speed profile (ISP) estimation is needed on the various road-links that compose the road network considered. The approach proposed consists of (i) generating mobility data with a \u201cmesoscopic\u201d traffic simulator (MATSim) using a limited amount of publicly available information, (ii) using the average speed/flows calculated as the input of an ISP estimator, (iii) evaluating the ISP per road-link fulfilling these averages and satisfying spatial and time correlation. Overall, the proposed approach would fill the existing gap between macroscopic data and instantaneous/local consumptions and emissions. Once the coupling made, possible applications of the approach should be tested. To this purpose, a case study shall be defined, modeled, and analyzed. A baseline scenario should be defined from a current situation in a chosen road network (at a region or urban area level). Then changes in the infrastructure, in the car fleet, in the mobility offer could be analyzed and benefits in terms of energy consumption and local emissions could be evaluated. Doctoral School: ED580 - STIC Sciences et Technologies de l'Information et de la Communication Supervisor: Dr. Antonio SCIARRETTA, IFP Energies nouvelles, antonio.sciarretta@ifpen.fr Co- supervisor: Dr. Milos BALAC, Institute for Transport Planning and Systems (IVT), ETH Zurich, Switzerland, milos.balac@ivt.baug.ethz.ch PhD location: IFP Energies nouvelles, Rueil-Malmaison, France Duration and start date: 3 years, starting in fourth quarter 2021 Employer: IFP Energies nouvelles, Rueil-Malmaison, France Academic requirements: University Master's degree in Transportation Engineering, Information Engineering, Dynamical Systems or Control Science Language requirements: Fluency in English. Fluency in, or willingness to learn, French To apply, please send your cover letter and CV to the IFPEN supervisor indicated here above.","title":"PhD position at IFP Energies nouvelles (IFPEN)"},{"location":"news/2021-06-08-teralytics-job-posting/","text":"Teralytics uses data from telecommunication networks to provide mobility insights. In this internship, you will be part of a small product-focused team, working to release a new software and data product to market. MATSim is used as part of the computation pipeline, making this a great opportunity to get experience in using agent-based models in customer-facing products. More information and applications on the job posting's page on Teralytics' website . For more information, feel free to reach out to Thibaut Dubernet","title":"Job Posting: Transport Model Development Intern, Berlin"},{"location":"news/2021-10-04-job-post-sbb/","text":"Machen Sie was Grosses. Bewegen Sie mit uns die Schweiz als Mobilit\u00e4tsexperte/-expertin mit Fokus Simulationen und Mobilit\u00e4tsszenarien \u00b6 at Swiss Federal Railways (SBB) Bern Bollwerk / Work Smart, ab 01.01.2022 oder nach Vereinbarung, 80-100%, Job ID 53801 Weitere Informationen zur Stellenausschreibung finden sich hier .","title":"Job posting SBB"},{"location":"news/2021-10-04-job-post-sbb/#mobilitatsexperte-expertin-mit-fokus-simulationen-und-mobilitatsszenarien","text":"at Swiss Federal Railways (SBB) Bern Bollwerk / Work Smart, ab 01.01.2022 oder nach Vereinbarung, 80-100%, Job ID 53801 Weitere Informationen zur Stellenausschreibung finden sich hier .","title":"Mobilit\u00e4tsexperte/-expertin mit Fokus Simulationen und Mobilit\u00e4tsszenarien"},{"location":"news/2021-12-03-matsim-um/","text":"We are happy to announce that MATSim User Meeting in 2022 will be held in conjunction with the 10th Symposium of the European Association for Research in Transportation (hEART 2022). A full day meeting will be held on 31.05. at KU Leuven, Belgium. We are now accepting submissions of 1-2 pages extended abstracts that should describe your recent MATSim work: Submission page Submissions page will close on 07.03. at 11:59 CET. If you plan to attend the meeting (either as an author, co-author, or attendee) there is a registration fee of 55 CHF to cover for the venue and food expenses (coffees and food). You can register at the following link: Registration page Preliminary schedule Any questions or comments you can direct to matsimum2022@gmail.com","title":"MATSim User Meeting 2022"},{"location":"news/2022-02-10-abm-modelling-uae/","text":"CDM Smith engineering company is offering a job opportunity in UAE for two modelling experts with activity-based as well as agent-based modelling experience. Here are the job descriptions: Modelling Specialist 1: The candidate should have a minimum of 10 years of experience developing tour-based activity-driven transport models and freight modeling. Experience with DSTM Is for this role; and Modeling Specialist 2: The candidate should have a minimum of 10 years of experience in transport modeling. Experience In the development of agent-based activity-driven transport modeling is a must for this role. Experience with use of agent-based activity driven transport model for the assessment of new form of transport technologies and services Is desirable for this role; Key Requirements: Demonstrated experience working on multidisciplinary transport projects, with medium and high complexity; Strong understanding of theoretical transport modelling concepts and application. Participate In the development and application of the strategic transportation models; Transport model development with tasks Including but not limited to model building, calibration/validation, model testing and auditing, checking and analysis of model outputs; Good experience with the latest methodologies, processes and software packages (VISUM, CUBE, etc); Model development experience both traditional activity-based models and agent-based models; Hands-on experience in development and preparation of travel daily survey and SP design; Experience in analysis and Interpretation of outputs from transport modelling software packages; The contract person for further information on these positions is Dr. Afaf Al Azzawi, Transportation & Traffic Manager at CDM Smith. alazzawia@cdmsmith.com","title":"ABM Modelling job opportunity in UAE"},{"location":"news/2022-02-10-job-post-boku/","text":"Job opportunity for MATSim community in Vienna: https://euraxess.ec.europa.eu/jobs/739651 .","title":"Job opportunity at BOKU in Vienna"},{"location":"news/2022-03-08-job-dresden/","text":"To contribute to research around topics of agent-based transport simulation (in particular, but not limited to: sustainable mobility, active mobility, open-data-based model development, accessibility analyses and land-use/transport interaction), the Chair Integrated Transport Planning at TU Dresden is hiring a researcher / PhD student. For details, see here: https://www.verw.tu-dresden.de/StellAus/download.asp?file=03-2022%5CGerike_WIMI_eng_040222_w056.pdf","title":"Position as researcher / PhD student / TU Dresden"},{"location":"news/2022-05-10-job-opening-sbb/","text":"Bern Wankdorf / Work Smart, 01.09.2022, 60-100% Du hast die Chance, bei der Anwendung und dem Betrieb eines aktivit\u00e4ten- und agentenbasierten Verkehrsmodells mitzuwirken, welches auf dem neusten Stand von Praxis und Forschung basiert. Mit diesen Modellergebnissen lieferst du einen massgebenden Beitrag f\u00fcr Entscheidungen \u00fcber zuk\u00fcnftige Ausbauten des Bahn-, resp. \u00d6V-Angebots in der Schweiz. F\u00fchlst du dich angesprochen? Hier geht's zur Bewerbung","title":"Job posting SBB"},{"location":"news/template/","text":"Here is my news item. Use regular markdown for the full news item content. The header at the top of the file must contain an author, title, and summary","title":"MATSim in the news"},{"location":"tutorials/general/","text":"General Tutorials \u00b6 Keeping a certain tutorial up to date has proven infeasible. Two main problems are: Different teachers/tutors have different styles, and thus have difficulties upgrading someone else's tutorial. Different tutorials cover different parts of the material, and so the upgrade of \"the\" standard tutorial always was inconsistent between its different pieces. We are now aiming for the following: The standard intro reference is \" The Book \". TU Berlin teaches a MATSim class during every summer term. We plan to move the tutorial material of that class to the site here at the end of each term (i.e. around July/August of every year). The most current version is the 2020 course . Additional material is available under matsim.org/javadoc --> main distribution --> tutorials. That material may be a bit more difficult to find or read, but it has the advantage that it is inside the code repository and thus always compiling and in many cases even secured by a regression test. 2020: MATSim class at TU Berlin (MATSim version 12.x) . 2019: MATSim class at TU Berlin (MATSim version 11.x) . 2018: MATSim class at TU Berlin (MATSim version 0.10.x) . 2017: MATSim class at TU Berlin (MATSim version 0.9.x) . 2016: MATSim class at TU Berlin (MATSim version 0.8.x) .","title":"Tutorials"},{"location":"tutorials/general/#general-tutorials","text":"Keeping a certain tutorial up to date has proven infeasible. Two main problems are: Different teachers/tutors have different styles, and thus have difficulties upgrading someone else's tutorial. Different tutorials cover different parts of the material, and so the upgrade of \"the\" standard tutorial always was inconsistent between its different pieces. We are now aiming for the following: The standard intro reference is \" The Book \". TU Berlin teaches a MATSim class during every summer term. We plan to move the tutorial material of that class to the site here at the end of each term (i.e. around July/August of every year). The most current version is the 2020 course . Additional material is available under matsim.org/javadoc --> main distribution --> tutorials. That material may be a bit more difficult to find or read, but it has the advantage that it is inside the code repository and thus always compiling and in many cases even secured by a regression test. 2020: MATSim class at TU Berlin (MATSim version 12.x) . 2019: MATSim class at TU Berlin (MATSim version 11.x) . 2018: MATSim class at TU Berlin (MATSim version 0.10.x) . 2017: MATSim class at TU Berlin (MATSim version 0.9.x) . 2016: MATSim class at TU Berlin (MATSim version 0.8.x) .","title":"General Tutorials"},{"location":"userguide/","text":"The MATSim user guide \u00b6 The MATSim user guide (pdf) is an extract and update of the MATSim book . These chapters contain the most relevant topics for new users. If the above link does not work, try to right-click the link and select \"Save Link As\u2026\" or \"Download Linked File As\u2026\" or similar, depending on your browser. The user guide is typically updated along with the MATSim class that we teach at TU Berlin every year between April and July.","title":"User Guide"},{"location":"userguide/#the-matsim-user-guide","text":"The MATSim user guide (pdf) is an extract and update of the MATSim book . These chapters contain the most relevant topics for new users. If the above link does not work, try to right-click the link and select \"Save Link As\u2026\" or \"Download Linked File As\u2026\" or similar, depending on your browser. The user guide is typically updated along with the MATSim class that we teach at TU Berlin every year between April and July.","title":"The MATSim user guide"},{"location":"userguide/analysis/","text":"The MATSim community has developed several analysis tools, everything from programming language libraries, to open-source results viewers, to commercial software packages. This list is not exhaustive, nor is it a recommendation for your use case! If you know of something we've missed, let us know. Java MATSim libs: analysis contrib \u00b6 The MATSim analysis contrib... Python: matsim-tools \u00b6 A semi-official Python package developed at VSP TU Berlin is available at: https://pypi.org/project/matsim-tools/ Its main function is to allow python developers to read and process MATSim simulation outputs. It currently reads MATSim networks in several formats and can iterate through population/plans files. More to come. R: matsim-r library \u00b6 A semi-official Python package developed at VSP TU Berlin is now under development as well. It is not on CRAN yet because it is still early days. But you can follow along at https://github.com/matsim-vsp/matsim-r and you can install it directly into R with: # If you don't already have devtools: install.packages ( \"devtools\" ) # and then: devtools :: install_github ( \"matsim-vsp/matsim-r\" ) OTF-Vis \u00b6 need blurb... Simunto Via \u00b6 need blurb... Simunto Tramola \u00b6 need blurb... VSP SimWrapper \u00b6 Web-based visualization platform developed at VSP TU Berlin, available at simwrapper.github.io","title":"Analysis Tools"},{"location":"userguide/analysis/#java-matsim-libs-analysis-contrib","text":"The MATSim analysis contrib...","title":"Java MATSim libs: analysis contrib"},{"location":"userguide/analysis/#python-matsim-tools","text":"A semi-official Python package developed at VSP TU Berlin is available at: https://pypi.org/project/matsim-tools/ Its main function is to allow python developers to read and process MATSim simulation outputs. It currently reads MATSim networks in several formats and can iterate through population/plans files. More to come.","title":"Python: matsim-tools"},{"location":"userguide/analysis/#r-matsim-r-library","text":"A semi-official Python package developed at VSP TU Berlin is now under development as well. It is not on CRAN yet because it is still early days. But you can follow along at https://github.com/matsim-vsp/matsim-r and you can install it directly into R with: # If you don't already have devtools: install.packages ( \"devtools\" ) # and then: devtools :: install_github ( \"matsim-vsp/matsim-r\" )","title":"R: matsim-r library"},{"location":"userguide/analysis/#otf-vis","text":"need blurb...","title":"OTF-Vis"},{"location":"userguide/analysis/#simunto-via","text":"need blurb...","title":"Simunto Via"},{"location":"userguide/analysis/#simunto-tramola","text":"need blurb...","title":"Simunto Tramola"},{"location":"userguide/analysis/#vsp-simwrapper","text":"Web-based visualization platform developed at VSP TU Berlin, available at simwrapper.github.io","title":"VSP SimWrapper"},{"location":"userguide/extensions/","text":"MATSim Extensions \u00b6 Introduction \u00b6 The default MATSim releases contain all the functionality typically used to model agent behavior and simulate traffic. But sometimes, this just is not enough. The MATSim Extensions provide additional functionality for specific tasks, and can be used along MATSim. MATSim Extensions gives an overview of the currently available extensions. Please note that these extensions are usually provided and maintained by single persons from the community, and thus long-term support may vary from the default MATSim release. Using Extensions via Maven \u00b6 This is the recommended way for using extensions. See here under \"Maven\" about how to use MATSim via Maven. Note, in particular, the \"MATSim example project\". MATSim contribs (those extensions that are part of the contrib directory) can then just be used by adding them as additional dependencies in the pom.xml. Using Extensions \"manually\" \u00b6 This is not the recommended way for using extensions (see \"Using Extensions via Maven\" above). Downloading Extensions \u00b6 All extensions come as a compressed zip-file. You can either download the last stable release of an extension to be used together with the stable release of MATSim, or you can download a so-called \"nightly build\"\u2014an automatically created, but untested and probably unstable version of the extension. You can download the stable releases of extensions from the MATSim download page . Likely unstable nightly builds can be found from the same page. Make sure to also download MATSim itself. The extensions cannot be used without MATSim. Using Extensions on the Command Line \u00b6 Once you've downloaded an extension and MATSim, unzip the extension and place the extension's directory inside the MATSim directory, next to the libs directory. The file/directory structure should look similar to the following example: matsim/ + MATSim.jar + libs/ | + <lots of .jar files> + extension1/ | + extension1.jar +extension2/ | + extension2.jar | + libs/ <-- not all extensions contain additional libs | | + <one or more .jar files> Then, start your simulation with the extension.jar-file on the classpath along the MATSim jar-file, e.g: java -Xmx2000m -cp MATSim.jar:extension1/extension1.jar:extension2/extension2.jar org.matsim.contrib.RunXxxExample myConfig.xml On Windows, use ; instead of : to separate the different jar-files. Contributing Extensions \u00b6 See here for instructions.","title":"Extensions"},{"location":"userguide/extensions/#matsim-extensions","text":"","title":"MATSim Extensions"},{"location":"userguide/extensions/#introduction","text":"The default MATSim releases contain all the functionality typically used to model agent behavior and simulate traffic. But sometimes, this just is not enough. The MATSim Extensions provide additional functionality for specific tasks, and can be used along MATSim. MATSim Extensions gives an overview of the currently available extensions. Please note that these extensions are usually provided and maintained by single persons from the community, and thus long-term support may vary from the default MATSim release.","title":"Introduction"},{"location":"userguide/extensions/#using-extensions-via-maven","text":"This is the recommended way for using extensions. See here under \"Maven\" about how to use MATSim via Maven. Note, in particular, the \"MATSim example project\". MATSim contribs (those extensions that are part of the contrib directory) can then just be used by adding them as additional dependencies in the pom.xml.","title":"Using Extensions via Maven"},{"location":"userguide/extensions/#using-extensions-manually","text":"This is not the recommended way for using extensions (see \"Using Extensions via Maven\" above).","title":"Using Extensions \"manually\""},{"location":"userguide/extensions/#downloading-extensions","text":"All extensions come as a compressed zip-file. You can either download the last stable release of an extension to be used together with the stable release of MATSim, or you can download a so-called \"nightly build\"\u2014an automatically created, but untested and probably unstable version of the extension. You can download the stable releases of extensions from the MATSim download page . Likely unstable nightly builds can be found from the same page. Make sure to also download MATSim itself. The extensions cannot be used without MATSim.","title":"Downloading Extensions"},{"location":"userguide/extensions/#using-extensions-on-the-command-line","text":"Once you've downloaded an extension and MATSim, unzip the extension and place the extension's directory inside the MATSim directory, next to the libs directory. The file/directory structure should look similar to the following example: matsim/ + MATSim.jar + libs/ | + <lots of .jar files> + extension1/ | + extension1.jar +extension2/ | + extension2.jar | + libs/ <-- not all extensions contain additional libs | | + <one or more .jar files> Then, start your simulation with the extension.jar-file on the classpath along the MATSim jar-file, e.g: java -Xmx2000m -cp MATSim.jar:extension1/extension1.jar:extension2/extension2.jar org.matsim.contrib.RunXxxExample myConfig.xml On Windows, use ; instead of : to separate the different jar-files.","title":"Using Extensions on the Command Line"},{"location":"userguide/extensions/#contributing-extensions","text":"See here for instructions.","title":"Contributing Extensions"},{"location":"userguide/terminology/","text":"In many cases, MATSim uses a terminology that is different from the mainstream terminology. In most cases, the reason is that the concepts are only similar, but not identical, and we wanted to avoid the confusion of using the same term for aspects that are similar but not identical. The following attempts some commented approximate \u201dtranslations\u201d from more standard teminology to MATSim terminology. Choice set \u2192 \u201cplan set\u201d of an agent During MATSim iterations, agent accumulate plans. This can be interpreted as building a choice set over time. A problem is that the process that generates the choice set at this point is not systematic. Possible future developments: Once it has been made explicit that \u201dplans generation\u201d means \u201dchoice set generation\u201d, the terminology may be made standard. Choice set generation \u2192 Time mutation/re-route/... ; \u201dinnovation\u201d As said above, the set of MATSim plans can be seen as this agent\u2019s choice set. MATSim generates new plans \u201don-the-fly\u201d, i.e. while the simulation is running. We sometimes call this \u201dinnovation\u201d, since agents create new plans (= add entries to the choice set), rather than choosing between existing plans. Choice set generation, choice \u2192 replanning In MATSim, there is no strict separation between \u201dchoice set generation\u201d and \u201dchoice\u201d: at the replanning step, for each agent, a replanning strategy is randomly choosen. This strategy may consist in selecting a random plan to use to generate a new plan by mutation (\u201dchoice set generation\u201d part), or just to select a past plan based on the experienced score (\u201dchoice\u201d part). Convergence \u2192 learning rate Scores in matsim are computed as score new = (1 \u2212 \u03b1 ) \u00b7 score old + \u03b1 \u00b7 score sim , where score sim is the score that is obtained from the execution of the plans (= network loading). \u03bc (logit model scaling factor) \u2192 beta brain MATSim scoring function: BrainExpBeta \u22c5 \u2211 i \u03b2 i x i Typical logit model formulation: \u03bc \u22c5 \u2211 i \u03b2 i x i As is well known, \u03bc or \u03b2 i are not independently identifiable from estimation. For simulation, they are hence somewhat arbitrary. The default value for \u201d BrainExpBeta \u201d is 2 for historical reasons, but it should be set to 1 if the parameters of the scoring function are estimated rather than hand-calibrated. Possible future development: Default value of BrainExpBeta should be set to 1 instead of 2. Multinomial logit \u2192 ExpBetaPlanSelector Comments: The main problem is that one needs to keep in mind how the choice set is constructed (see above). In most simulations, we use ExpBetaPlanChanger instead, which is a Metropolis Monte Carlo variant of making multinomial logit draws Possible future developments: None of this is ideal, since, after the introduction of a policy, it is not clear which behavioral switches are due to the policy, and which are due to sampling. In theory, one should have unbiased samples before and after the introduction of the policy, but at this point this is not implemented and it is also computationally considerably more expensive than what is done now. Network loading \u2192 mobsim, mobility simulation, physical simulation The standard terminology has the \u201dnetwork loading\u201d on the \u201dsupply side\u201d. In my (KN\u2019s) view, the \u201dsimulation of the physical system\u201d is not the supply side, but what in economics is called \u201dtechnology\u201d. This can for example be seen in the fact that \u201dlane changing\u201d is part of the mobsim, but this is, in my view, not a \u201dsupply side\u201d aspect. Possible future developments: May switch to \u201dnetwork loading\u201d if there is agreement that this is a better name. Stationary \u2192 relaxed \u201cstationary\u201d means that the probability distribution does not shift any more. However, as long as \u201dinnovation\u201d is still switched in on MATSim (new routes, new times, ...), the result is not truly stationary. Thus we avoid the word. If innovation is switched off, the result is indeed a statinary process, but limited to the set of plans that every agent has at that point in time. Possible future developments: not clear. Minimally, publications should be precise. <module name=\"strategy\" > <!-- iteration after which module will be disabled. ... --> <param name=\"ModuleDisableAfterIteration_1\" value=\"null\" /> <param name=\"ModuleDisableAfterIteration_2\" value=\"950\" /> <!-- probability that a strategy is applied to a given person. ... --> <param name=\"ModuleProbability_1\" value=\"0.9\" /> <param name=\"ModuleProbability_2\" value=\"0.1\" /> <!-- name of strategy ... --> <param name=\"Module_1\" value=\"ChangeExpBeta\" /> <param name=\"Module_2\" value=\"ReRoute\" /> <!-- maximum number of plans per agent ... --> <param name=\"maxAgentPlanMemorySize\" value=\"4\" /> </module> The above means: StrategyModule \u201dReRoute\u201d (= innovative Module, produces plans with new routes) is switched off after iteration 950. StrategyModule \u201dChangeExpBeta\u201d (= non-innovative Module, switches between existing plans) is never switched off. If an agent ever ends up with more than 4 plans, plans are deleted until she is back to 4 plans. (Deletion goes via a \u201dPlanSelectorForRemoval\u201d, which affects the choice set, and thus more thought needs to go into this. Currently, the plan with the worst score is removed.) Utility \u2194 score Configuration: At least when using random utility models (such as multinomial logit aka ExpBeta...), the score has the same function as the deterministic utility.","title":"Terminology"}]}